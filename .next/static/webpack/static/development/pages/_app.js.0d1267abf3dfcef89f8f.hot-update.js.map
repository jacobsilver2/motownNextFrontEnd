{"version":3,"file":"static/webpack/static/development/pages/_app.js.0d1267abf3dfcef89f8f.hot-update.js","sources":["webpack:///./components/AdminPanel.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport ButtonComponent from \"./Button\";\n// import { CURRENT_USER_QUERY } from \"./Nav\";\n\nexport const Center = styled.div`\n  /* text-align: center; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const AdminPanelWrapper = styled.div`\n  border-top: 10px solid ${(props) => props.theme.black};\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 20px;\n  margin: 10px;\n  justify-content: space-between;\n  align-items: stretch;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n  height: 150px;\n  overflow: scroll;\n`;\n\nexport const SelectedItemsList = styled.ul`\n  /* align-self: flex-start; */\n`;\n\nexport const CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n    }\n  }\n`;\n\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    selectedIds @client\n  }\n`;\n\nconst TURN_SINGLE_INTO_ALBUM_MUTATION = gql`\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\n    turnSingleIntoAlbum(id: $id) {\n      id\n      title\n      single\n    }\n  }\n`;\n\nconst JOIN_SINGLES_MUTATION = gql`\n  mutation JOIN_SINGLES_MUTATION($albumOneId: ID!, $albumTwoId: ID!) {\n    joinTwoSingles(albumOneId: $albumOneId, albumTwoId: $albumTwoId) {\n      id\n      title\n    }\n  }\n`;\n\nconst CLEAR_SELECTED_IDS = gql`\n  mutation {\n    clearSelectedIds @client\n  }\n`;\n\nconst AdminPanel = () => {\n  const [\n    turnSingleIntoAlbumMutation,\n    { loading: turnSingleIntoAlbumLoading, error: turnSingleIntoAlbumError },\n  ] = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION);\n\n  const [\n    joinTwoSinglesMutation,\n    { loading: joinTwoSinglesLoading, error: joinTwoSinglesError },\n  ] = useMutation(JOIN_SINGLES_MUTATION);\n\n  const [\n    clearSelectedIdsMutation,\n    { loading: clearSelectedIdsLoading, error: clearSelectedIdsError },\n  ] = useMutation(CLEAR_SELECTED_IDS);\n\n  async function turnSingleIntoAlbum() {\n    turnSingleIntoAlbumMutation({\n      variables: { id: localStateData.selectedIds[0] },\n    });\n    turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n    clearSelectedIdsMutation();\n  }\n\n  async function joinASideAndBSide() {\n    joinTwoSinglesMutation({\n      variables: { albumOneId: checkedItems[0], albumTwoId: checkedItems[1] },\n    });\n    joinTwoSinglesError && console.log(joinTwoSinglesError);\n  }\n  const {\n    loading: currentUserLoading,\n    error: currentUserError,\n    data: currentUserData,\n  } = useQuery(CURRENT_USER_QUERY);\n\n  const {\n    loading: localStateLoading,\n    error: localStateError,\n    data: localStateData,\n  } = useQuery(LOCAL_STATE_QUERY);\n\n  if (currentUserLoading) return \"Loading...\";\n  if (currentUserError) return `Error! ${error.message}`;\n  const { me } = currentUserData;\n  return (\n    me && (\n      <>\n        <AdminPanelWrapper>\n          <SelectedItemsList>\n            <p>Selected Items:</p>\n            {localStateData.selectedIds.map((selectedId) => (\n              <li key={selectedId}>{selectedId}</li>\n            ))}\n          </SelectedItemsList>\n          <ButtonComponent buttonSize=\"large\" onClick={turnSingleIntoAlbum}>\n            Turn Single Into Album\n          </ButtonComponent>\n          <ButtonComponent\n            onClick={turnSingleIntoAlbum}\n            buttonStyle=\"danger\"\n            buttonSize=\"large\"\n          >\n            Clear Selected Items\n          </ButtonComponent>\n          <ButtonComponent buttonSize=\"large\" onClick={joinASideAndBSide}>\n            Join A-Side and B-Side\n          </ButtonComponent>\n        </AdminPanelWrapper>\n      </>\n    )\n  );\n};\n\nexport default AdminPanel;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAIA;AAWA;AAMA;AAUA;AASA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAzBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAyCA;AACA;AA3CA;AA6CA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}