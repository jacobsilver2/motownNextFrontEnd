{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nimport { CURRENT_USER_QUERY } from \"./Nav\";\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst Signin = () => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const [signinMutation, {\n    loading: mutationLoading,\n    error: mutationError\n  }] = useMutation(SIGNIN_MUTATION);\n  return __jsx(Form, {\n    method: \"post\",\n    onSubmit: async e => {\n      e.preventDefault();\n      await signinMutation({\n        variables: {\n          email,\n          password\n        },\n        refetchQueries: [{\n          query: CURRENT_USER_QUERY\n        }]\n      });\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  }, __jsx(\"fieldset\", {\n    disabled: mutationLoading,\n    \"aria-busy\": mutationLoading\n  }, __jsx(\"h2\", null, \"Sign into your account\"), __jsx(Error, {\n    error: mutationError\n  }), __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email\", __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value)\n  })), __jsx(\"label\", {\n    htmlFor: \"password\"\n  }, \"Password\", __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value)\n  })), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Sign In!\")));\n};\n\nexport default Signin;","map":null,"metadata":{},"sourceType":"module"}