{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Album.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport formatDate from \"../lib/formatDate\";\nimport Link from \"next/link\";\nimport { Card } from \"primereact/card\";\nimport { Button } from \"primereact/button\";\nimport { CURRENT_USER_QUERY } from \"./Nav\";\n\nconst Album = ({\n  album\n}) => {\n  console.log(album);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(CURRENT_USER_QUERY);\n  const footer = data.me ? __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: {\n      pathname: \"/updatealbum\",\n      query: {\n        id: album.id\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(Button, {\n    label: \"Edit\",\n    icon: \"pi pi-pencil\",\n    style: {\n      marginRight: \".25em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })))) : null;\n\n  const title = __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: {\n      pathname: \"/album\",\n      query: {\n        id: album.id\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, album.title)));\n\n  const artists = album.artists && album.artists.map((artist, index) => __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Link, {\n    key: artist.name,\n    href: {\n      pathname: \"/artist\",\n      query: {\n        id: artist.id\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, artist.name)), album.artists.length === index + 1 ? \" \" : \", \"));\n  return __jsx(Card, {\n    title: title,\n    footer: footer,\n    subTitle: album.releaseDate ? `released ${formatDate(album.releaseDate)}` : \"no release date information\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, album.format && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Format: \", album.format), artists);\n};\n\nexport default Album;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Album.js"],"names":["React","useQuery","formatDate","Link","Card","Button","CURRENT_USER_QUERY","Album","album","console","log","loading","error","data","footer","me","pathname","query","id","marginRight","title","artists","map","artist","index","name","length","releaseDate","format"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BZ,QAAQ,CAACK,kBAAD,CAAzC;AACA,QAAMQ,MAAM,GAAGD,IAAI,CAACE,EAAL,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAEC,MAAAA,QAAQ,EAAE,cAAZ;AAA4BC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAEV,KAAK,CAACU;AAAZ;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADa,GAYX,IAZJ;;AAaA,QAAMC,KAAK,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAEJ,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAEV,KAAK,CAACU;AAAZ;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,KAAK,CAACY,KAAV,CADF,CADF,CADF;;AAOA,QAAMC,OAAO,GACXb,KAAK,CAACa,OAAN,IACAb,KAAK,CAACa,OAAN,CAAcC,GAAd,CAAkB,CAACC,MAAD,EAASC,KAAT,KAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,GAAG,EAAED,MAAM,CAACE,IADd;AAEE,IAAA,IAAI,EAAE;AAAET,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAEK,MAAM,CAACL;AAAb;AAA9B,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIK,MAAM,CAACE,IAAX,CAJF,CADF,EAOGjB,KAAK,CAACa,OAAN,CAAcK,MAAd,KAAyBF,KAAK,GAAG,CAAjC,GAAqC,GAArC,GAA2C,IAP9C,CADF,CAFF;AAaA,SACE,MAAC,IAAD;AACE,IAAA,KAAK,EAAEJ,KADT;AAEE,IAAA,MAAM,EAAEN,MAFV;AAGE,IAAA,QAAQ,EACNN,KAAK,CAACmB,WAAN,GACK,YAAWzB,UAAU,CAACM,KAAK,CAACmB,WAAP,CAAoB,EAD9C,GAEI,6BANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGnB,KAAK,CAACoB,MAAN,IAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYpB,KAAK,CAACoB,MAAlB,CATnB,EAUGP,OAVH,CADF;AAcD,CAlDD;;AAoDA,eAAed,KAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport formatDate from \"../lib/formatDate\";\nimport Link from \"next/link\";\nimport { Card } from \"primereact/card\";\nimport { Button } from \"primereact/button\";\nimport { CURRENT_USER_QUERY } from \"./Nav\";\n\nconst Album = ({ album }) => {\n  console.log(album)\n  const { loading, error, data } = useQuery(CURRENT_USER_QUERY);\n  const footer = data.me ? (\n    <span>\n      <Link href={{ pathname: \"/updatealbum\", query: { id: album.id } }}>\n        <a>\n          <Button\n            label=\"Edit\"\n            icon=\"pi pi-pencil\"\n            style={{ marginRight: \".25em\" }}\n          />\n        </a>\n      </Link>\n    </span>\n  ) : null;\n  const title = (\n    <span>\n      <Link href={{ pathname: \"/album\", query: { id: album.id } }}>\n        <a>{album.title}</a>\n      </Link>\n    </span>\n  );\n  const artists =\n    album.artists &&\n    album.artists.map((artist, index) => (\n      <span>\n        <Link\n          key={artist.name}\n          href={{ pathname: \"/artist\", query: { id: artist.id } }}\n        >\n          <a>{artist.name}</a>\n        </Link>\n        {album.artists.length === index + 1 ? \" \" : \", \"}\n      </span>\n    ));\n  return (\n    <Card\n      title={title}\n      footer={footer}\n      subTitle={\n        album.releaseDate\n          ? `released ${formatDate(album.releaseDate)}`\n          : \"no release date information\"\n      }\n    >\n      {album.format && <p>Format: {album.format}</p>}\n      {artists}\n    </Card>\n  );\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}