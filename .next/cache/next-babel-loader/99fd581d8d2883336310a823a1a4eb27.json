{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Singles.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation ADD_SONGS_FROM_ONE_SINGLE_TO_ANOTHER_MUTATION(\\n    $albumOneId: ID!\\n    $albumTwoId: ID!\\n  ) {\\n    addSongToAlbum(albumOneId: $albumOneId, albumTwoId: $albumTwoId) {\\n      id\\n      title\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\\n    turnSingleIntoAlbum(id: $id) {\\n      id\\n      title\\n      single\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = \", \", $sortBy: AlbumOrderByInput!) {\\n    albums(where: {single: true, OR: [{title_starts_with: \\\"0\\\"},{title_starts_with: \\\"1\\\"},{title_starts_with: \\\"2\\\"},{title_starts_with: \\\"3\\\"},{title_starts_with: \\\"4\\\"},{title_starts_with: \\\"5\\\"},{title_starts_with: \\\"6\\\"},{title_starts_with: \\\"7\\\"},{title_starts_with: \\\"8\\\"},{title_starts_with: \\\"9\\\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      catalogNumber\\n      single\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SINGLES_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = \", \", $letter: String, $sortBy: AlbumOrderByInput!) {\\n    albums(where: {single: true, title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      catalogNumber\\n      single\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SINGLES_QUERY($first: Int = \", \", $skip: Int = 0, $sortBy: AlbumOrderByInput!) {\\n    albums(where: {single: true}, first: $first, skip: $skip, orderBy: $sortBy ) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      catalogNumber\\n      single\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Router from \"next/router\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Button } from \"primereact/button\";\nimport { MultiList, Center } from \"./Artists\";\nexport var StyledDropdown = styled(Dropdown).withConfig({\n  displayName: \"Singles__StyledDropdown\",\n  componentId: \"sc-12bbile-0\"\n})([\"width:50%;@media screen and (max-width:600px){width:100%;}\"]);\nexport var ALL_SINGLES_QUERY = gql(_templateObject(), perPage);\nexport var ALL_SINGLES_BEGINNING_WITH_QUERY = gql(_templateObject2(), perPage);\nexport var ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY = gql(_templateObject3(), perPage);\nvar TURN_SINGLE_INTO_ALBUM_MUTATION = gql(_templateObject4());\nvar ADD_SONGS_FROM_ONE_SINGLE_TO_ANOTHER_MUTATION = gql(_templateObject5());\nvar sortBySelectItems = [{\n  label: \"Title, ascending\",\n  value: \"title_ASC\"\n}, {\n  label: \"Title, descending\",\n  value: \"title_DESC\"\n}, {\n  label: \"Format, ascending\",\n  value: \"format_DESC\"\n}, {\n  label: \"Format, descending\",\n  value: \"format_ASC\"\n}, {\n  label: \"Release Date, ascending\",\n  value: \"releaseDate_ASC\"\n}, {\n  label: \"Release Date, descending\",\n  value: \"releaseDate_DESC\"\n}, {\n  label: \"Record Label, ascending\",\n  value: \"recordLabel_ASC\"\n}, {\n  label: \"Record Label, descending\",\n  value: \"recordLabel_DESC\"\n}, {\n  label: \"Catalog Number, ascending\",\n  value: \"catalogNumber_ASC\"\n}, {\n  label: \"Catalog Number, descending\",\n  value: \"catalogNumber_DESC\"\n}];\n\nvar Singles = function Singles(_ref) {\n  var page = _ref.page;\n\n  var _useState = useState(\"\"),\n      letter = _useState[0],\n      setLetter = _useState[1];\n\n  var _useState2 = useState(\"title_ASC\"),\n      sortBy = _useState2[0],\n      setSortBy = _useState2[1];\n\n  var _useState3 = useState([]),\n      checkedItems = _useState3[0],\n      setCheckedItems = _useState3[1];\n\n  var _useMutation = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      turnSingleIntoAlbumMutation = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      turnSingleIntoAlbumLoading = _useMutation2$.loading,\n      turnSingleIntoAlbumError = _useMutation2$.error;\n\n  var _useMutation3 = useMutation(ADD_SONGS_FROM_ONE_SINGLE_TO_ANOTHER_MUTATION),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      addSongToAlbumMutation = _useMutation4[0],\n      _useMutation4$ = _useMutation4[1],\n      addSongToAlbumLoading = _useMutation4$.loading,\n      addSongToAlbumError = _useMutation4$.error;\n\n  var _useQuery = useQuery(ALL_SINGLES_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      allSinglesLoading = _useQuery.loading,\n      allSinglesError = _useQuery.error,\n      allSinglesData = _useQuery.data;\n\n  var _useQuery2 = useQuery(ALL_SINGLES_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter: letter,\n      sortBy: sortBy\n    }\n  }),\n      singlesBeginningWithLoading = _useQuery2.loading,\n      singlesBeginningWithError = _useQuery2.error,\n      singlesBeginningWithData = _useQuery2.data;\n\n  var _useQuery3 = useQuery(ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      singlesBeginningWithNumberLoading = _useQuery3.loading,\n      singlesBeginningWithNumberError = _useQuery3.error,\n      singlesBeginningWithNumberData = _useQuery3.data;\n\n  if (singlesBeginningWithLoading || allSinglesLoading || singlesBeginningWithNumberLoading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Loading...\");\n  if (singlesBeginningWithError || allSinglesError || singlesBeginningWithNumberError) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Error :(\");\n\n  function turnSingleIntoAlbum() {\n    return _regeneratorRuntime.async(function turnSingleIntoAlbum$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            turnSingleIntoAlbumMutation({\n              variables: {\n                id: checkedItems[0]\n              }\n            });\n            turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n            setCheckedItems([]);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function joinASideAndBSide() {\n    return _regeneratorRuntime.async(function joinASideAndBSide$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            addSongToAlbumMutation({\n              variables: {\n                albumOneId: checkedItems[0],\n                albumTwoId: checkedItems[1]\n              }\n            });\n            addSongToAlbumError && console.log(addSongToAlbumError);\n            setCheckedItems([]);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getSingles() {\n    if (letter === \"\" || !letter) {\n      return allSinglesData.albums.filter(function (album) {\n        return album.single;\n      }).map(function (album) {\n        return __jsx(Album, {\n          addToCheckedItemsList: setCheckedItems,\n          checkedItems: checkedItems,\n          key: album.id,\n          album: album,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        });\n      });\n    } else if (letter === \"#\") {\n      return singlesBeginningWithNumberData.albums.filter(function (album) {\n        return album.single;\n      }).map(function (single) {\n        return __jsx(Album, {\n          key: single.id,\n          album: single,\n          addToCheckedItemsList: setCheckedItems,\n          checkedItems: checkedItems,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        });\n      });\n    } else {\n      return singlesBeginningWithData.albums.filter(function (album) {\n        return album.single;\n      }).map(function (single) {\n        return __jsx(Album, {\n          key: single.id,\n          album: single,\n          addToCheckedItemsList: setCheckedItems,\n          checkedItems: checkedItems,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        });\n      });\n    }\n  }\n\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return turnSingleIntoAlbum();\n    },\n    label: \"TURN SINGLE INTO ALBUM\",\n    style: {\n      marginRight: \".25em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), __jsx(Button, {\n    label: \"JOIN A-SIDE AND B-SIDE\",\n    onClick: function onClick() {\n      return joinASideAndBSide();\n    },\n    style: {\n      marginRight: \".25em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Checked items:\", \" \", checkedItems && checkedItems.map(function (item) {\n    return __jsx(\"li\", {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, item);\n  })), __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZWithNumber,\n    onChange: function onChange(e) {\n      setLetter(e.value);\n      Router.push({\n        pathname: \"/singles\",\n        query: {\n          page: 1\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }), __jsx(StyledDropdown, {\n    value: sortBy,\n    options: sortBySelectItems,\n    onChange: function onChange(e) {\n      return setSortBy(e.value);\n    },\n    placeholder: \"Sort By\\u2026\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }), __jsx(Pagination, {\n    page: page,\n    model: \"singles\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }), __jsx(MultiList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, getSingles()), __jsx(Pagination, {\n    page: page,\n    model: \"singles\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }));\n};\n\nexport default Singles;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Singles.js"],"names":["React","useState","useQuery","useMutation","Router","gql","styled","Album","Pagination","perPage","SelectButton","selectButtonsAthruZWithNumber","Dropdown","Button","MultiList","Center","StyledDropdown","ALL_SINGLES_QUERY","ALL_SINGLES_BEGINNING_WITH_QUERY","ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY","TURN_SINGLE_INTO_ALBUM_MUTATION","ADD_SONGS_FROM_ONE_SINGLE_TO_ANOTHER_MUTATION","sortBySelectItems","label","value","Singles","page","letter","setLetter","sortBy","setSortBy","checkedItems","setCheckedItems","turnSingleIntoAlbumMutation","turnSingleIntoAlbumLoading","loading","turnSingleIntoAlbumError","error","addSongToAlbumMutation","addSongToAlbumLoading","addSongToAlbumError","variables","skip","first","allSinglesLoading","allSinglesError","allSinglesData","data","singlesBeginningWithLoading","singlesBeginningWithError","singlesBeginningWithData","singlesBeginningWithNumberLoading","singlesBeginningWithNumberError","singlesBeginningWithNumberData","turnSingleIntoAlbum","id","console","log","joinASideAndBSide","albumOneId","albumTwoId","getSingles","albums","filter","album","single","map","marginRight","item","e","push","pathname","query"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Router from \"next/router\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Button } from \"primereact/button\";\nimport { MultiList, Center } from \"./Artists\";\n\nexport const StyledDropdown = styled(Dropdown)`\n  width: 50%;\n  @media screen and (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nexport const ALL_SINGLES_QUERY = gql`\n  query ALL_SINGLES_QUERY($first: Int = ${perPage}, $skip: Int = 0, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true}, first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ALL_SINGLES_BEGINNING_WITH_QUERY = gql`\n  query ALL_SINGLES_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true, title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY = gql`\n  query ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true, OR: [{title_starts_with: \"0\"},{title_starts_with: \"1\"},{title_starts_with: \"2\"},{title_starts_with: \"3\"},{title_starts_with: \"4\"},{title_starts_with: \"5\"},{title_starts_with: \"6\"},{title_starts_with: \"7\"},{title_starts_with: \"8\"},{title_starts_with: \"9\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst TURN_SINGLE_INTO_ALBUM_MUTATION = gql`\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\n    turnSingleIntoAlbum(id: $id) {\n      id\n      title\n      single\n    }\n  }\n`;\n\nconst ADD_SONGS_FROM_ONE_SINGLE_TO_ANOTHER_MUTATION = gql`\n  mutation ADD_SONGS_FROM_ONE_SINGLE_TO_ANOTHER_MUTATION(\n    $albumOneId: ID!\n    $albumTwoId: ID!\n  ) {\n    addSongToAlbum(albumOneId: $albumOneId, albumTwoId: $albumTwoId) {\n      id\n      title\n    }\n  }\n`;\n\nconst sortBySelectItems = [\n  { label: \"Title, ascending\", value: \"title_ASC\" },\n  { label: \"Title, descending\", value: \"title_DESC\" },\n  { label: \"Format, ascending\", value: \"format_DESC\" },\n  { label: \"Format, descending\", value: \"format_ASC\" },\n  { label: \"Release Date, ascending\", value: \"releaseDate_ASC\" },\n  { label: \"Release Date, descending\", value: \"releaseDate_DESC\" },\n  { label: \"Record Label, ascending\", value: \"recordLabel_ASC\" },\n  { label: \"Record Label, descending\", value: \"recordLabel_DESC\" },\n  { label: \"Catalog Number, ascending\", value: \"catalogNumber_ASC\" },\n  { label: \"Catalog Number, descending\", value: \"catalogNumber_DESC\" },\n];\n\nconst Singles = ({ page }) => {\n  const [letter, setLetter] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"title_ASC\");\n  const [checkedItems, setCheckedItems] = useState([]);\n\n  const [\n    turnSingleIntoAlbumMutation,\n    { loading: turnSingleIntoAlbumLoading, error: turnSingleIntoAlbumError },\n  ] = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION);\n\n  const [\n    addSongToAlbumMutation,\n    { loading: addSongToAlbumLoading, error: addSongToAlbumError },\n  ] = useMutation(ADD_SONGS_FROM_ONE_SINGLE_TO_ANOTHER_MUTATION);\n\n  const {\n    loading: allSinglesLoading,\n    error: allSinglesError,\n    data: allSinglesData,\n  } = useQuery(ALL_SINGLES_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage, sortBy },\n  });\n  const {\n    loading: singlesBeginningWithLoading,\n    error: singlesBeginningWithError,\n    data: singlesBeginningWithData,\n  } = useQuery(ALL_SINGLES_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy,\n    },\n  });\n  const {\n    loading: singlesBeginningWithNumberLoading,\n    error: singlesBeginningWithNumberError,\n    data: singlesBeginningWithNumberData,\n  } = useQuery(ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy,\n    },\n  });\n  if (\n    singlesBeginningWithLoading ||\n    allSinglesLoading ||\n    singlesBeginningWithNumberLoading\n  )\n    return <p>Loading...</p>;\n  if (\n    singlesBeginningWithError ||\n    allSinglesError ||\n    singlesBeginningWithNumberError\n  )\n    return <p>Error :(</p>;\n\n  async function turnSingleIntoAlbum() {\n    turnSingleIntoAlbumMutation({ variables: { id: checkedItems[0] } });\n    turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n    setCheckedItems([]);\n  }\n\n  async function joinASideAndBSide() {\n    addSongToAlbumMutation({\n      variables: { albumOneId: checkedItems[0], albumTwoId: checkedItems[1] },\n    });\n    addSongToAlbumError && console.log(addSongToAlbumError);\n    setCheckedItems([]);\n  }\n\n  function getSingles() {\n    if (letter === \"\" || !letter) {\n      return allSinglesData.albums\n        .filter((album) => album.single)\n        .map((album) => (\n          <Album\n            addToCheckedItemsList={setCheckedItems}\n            checkedItems={checkedItems}\n            key={album.id}\n            album={album}\n          />\n        ));\n    } else if (letter === \"#\") {\n      return singlesBeginningWithNumberData.albums\n        .filter((album) => album.single)\n        .map((single) => (\n          <Album\n            key={single.id}\n            album={single}\n            addToCheckedItemsList={setCheckedItems}\n            checkedItems={checkedItems}\n          />\n        ));\n    } else {\n      return singlesBeginningWithData.albums\n        .filter((album) => album.single)\n        .map((single) => (\n          <Album\n            key={single.id}\n            album={single}\n            addToCheckedItemsList={setCheckedItems}\n            checkedItems={checkedItems}\n          />\n        ));\n    }\n  }\n\n  return (\n    <Center>\n      <Button\n        onClick={() => turnSingleIntoAlbum()}\n        label=\"TURN SINGLE INTO ALBUM\"\n        style={{ marginRight: \".25em\" }}\n      />\n      <Button\n        label=\"JOIN A-SIDE AND B-SIDE\"\n        onClick={() => joinASideAndBSide()}\n        style={{ marginRight: \".25em\" }}\n      />\n      <ul>\n        Checked items:{\" \"}\n        {checkedItems && checkedItems.map((item) => <li key={item}>{item}</li>)}\n      </ul>\n      <SelectButton\n        value={letter}\n        options={selectButtonsAthruZWithNumber}\n        onChange={(e) => {\n          setLetter(e.value);\n          Router.push({ pathname: \"/singles\", query: { page: 1 } });\n        }}\n      />\n      <br />\n      <StyledDropdown\n        value={sortBy}\n        options={sortBySelectItems}\n        onChange={(e) => setSortBy(e.value)}\n        placeholder=\"Sort By…\"\n      />\n      <br />\n      <Pagination page={page} model=\"singles\" letter={letter} />\n      <MultiList>{getSingles()}</MultiList>\n      <Pagination page={page} model=\"singles\" letter={letter} />\n    </Center>\n  );\n};\n\nexport default Singles;\n"]},"metadata":{},"sourceType":"module"}