{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Search.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_SONGS_QUERY($searchTerm: String!) {\\n    songs(\\n      where: {\\n        OR: [\\n          { title_contains: $searchTerm }\\n          { altTitle_contains: $searchTerm }\\n          { fromFilm_contains: $searchTerm }\\n        ]\\n      }\\n    ) {\\n      id\\n      title\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport Downshift, { resetIdCounter } from \"downshift\";\nimport Router from \"next/router\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\nimport SongStyles from \"./styles/song/songStyles\";\nimport Title from \"./styles/song/title\";\nvar SEARCH_SONGS_QUERY = gql(_templateObject());\n\nfunction routeToSong(song) {\n  Router.push({\n    pathname: \"/song\",\n    query: {\n      id: song.id\n    }\n  });\n}\n\nvar AutoComplete = /*#__PURE__*/function (_React$Component) {\n  _inherits(AutoComplete, _React$Component);\n\n  function AutoComplete() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoComplete);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoComplete)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      songs: [],\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", debounce(function _callee(e, client) {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(client.query({\n                query: SEARCH_SONGS_QUERY,\n                variables: {\n                  searchTerm: e.target.value\n                }\n              }));\n\n            case 3:\n              response = _context.sent;\n\n              _this.setState({\n                songs: response.data.songs,\n                loading: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }, 350));\n\n    return _this;\n  }\n\n  _createClass(AutoComplete, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      resetIdCounter();\n      return __jsx(SearchStyles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(Downshift, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            getItemProps = _ref.getItemProps,\n            isOpen = _ref.isOpen,\n            inputValue = _ref.inputValue,\n            highlightedIndex = _ref.highlightedIndex;\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, __jsx(ApolloConsumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, function (client) {\n          return __jsx(\"input\", _extends({}, getInputProps({\n            onChange: function onChange(e) {\n              e.persist();\n\n              _this2.onChange(e, client);\n            },\n            type: \"search\",\n            placeholder: \"Search\",\n            id: \"search\",\n            className: _this2.state.loading ? \"loading\" : \"\"\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }));\n        }), isOpen && __jsx(DropDown, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, _this2.state.songs.map(function (song, index) {\n          return __jsx(DropDownItem, _extends({}, getItemProps(song), {\n            key: song.id,\n            higlighted: index == highlightedIndex,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }), __jsx(Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, song.title));\n        })));\n      }));\n    }\n  }]);\n\n  return AutoComplete;\n}(React.Component);\n\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Search.js"],"names":["React","Downshift","resetIdCounter","Router","ApolloConsumer","gql","debounce","DropDown","DropDownItem","SearchStyles","SongStyles","Title","SEARCH_SONGS_QUERY","routeToSong","song","push","pathname","query","id","AutoComplete","songs","loading","e","client","setState","variables","searchTerm","target","value","response","data","getInputProps","getItemProps","isOpen","inputValue","highlightedIndex","onChange","persist","type","placeholder","className","state","map","index","title","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Downshift, { resetIdCounter } from \"downshift\";\nimport Router from \"next/router\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\nimport SongStyles from \"./styles/song/songStyles\";\nimport Title from \"./styles/song/title\";\n\nconst SEARCH_SONGS_QUERY = gql`\n  query SEARCH_SONGS_QUERY($searchTerm: String!) {\n    songs(\n      where: {\n        OR: [\n          { title_contains: $searchTerm }\n          { altTitle_contains: $searchTerm }\n          { fromFilm_contains: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      title\n    }\n  }\n`;\n\nfunction routeToSong(song) {\n  Router.push({\n    pathname: \"/song\",\n    query: {\n      id: song.id\n    }\n  });\n}\n\nclass AutoComplete extends React.Component {\n  state = {\n    songs: [],\n    loading: false\n  };\n  onChange = debounce(async (e, client) => {\n    this.setState({ loading: true });\n    const response = await client.query({\n      query: SEARCH_SONGS_QUERY,\n      variables: { searchTerm: e.target.value }\n    });\n    this.setState({ songs: response.data.songs, loading: false });\n  }, 350);\n\n  render() {\n    resetIdCounter();\n    return (\n      <SearchStyles>\n        <Downshift>\n          {({\n            getInputProps,\n            getItemProps,\n            isOpen,\n            inputValue,\n            highlightedIndex\n          }) => (\n            <div>\n              <ApolloConsumer>\n                {client => (\n                  <input\n                    {...getInputProps({\n                      onChange: e => {\n                        e.persist();\n                        this.onChange(e, client);\n                      },\n                      type: \"search\",\n                      placeholder: \"Search\",\n                      id: \"search\",\n                      className: this.state.loading ? \"loading\" : \"\"\n                    })}\n                  />\n                )}\n              </ApolloConsumer>\n              {isOpen && (\n                <DropDown>\n                  {this.state.songs.map((song, index) => (\n                    <DropDownItem\n                      {...getItemProps(song)}\n                      key={song.id}\n                      higlighted={index == highlightedIndex}\n                    >\n                      <Title>{song.title}</Title>\n                    </DropDownItem>\n                  ))}\n                </DropDown>\n              )}\n            </div>\n          )}\n        </Downshift>\n      </SearchStyles>\n    );\n  }\n}\n\nexport default AutoComplete;\n"]},"metadata":{},"sourceType":"module"}