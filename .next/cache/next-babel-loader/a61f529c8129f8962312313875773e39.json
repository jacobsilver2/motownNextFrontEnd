{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Singles.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Router from \"next/router\";\nimport { gql } from \"apollo-boost\";\nimport Select from \"react-select\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport Multilist from \"./styles/Multilist\";\nimport Center from \"./styles/Center\";\nimport sortBySelectItems from \"../lib/sortByOptions/singlesSortBySelectOptions\";\nimport getSelectLabel from \"../lib/sortByOptions/sortBySelectReturnLabel\";\nimport customTheme from \"./styles/reactSelectTheme\";\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    selectedIds @client\n  }\n`;\nexport const ALL_SINGLES_QUERY = gql`\n  query ALL_SINGLES_QUERY($first: Int = ${perPage}, $skip: Int = 0, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true}, first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\nexport const ALL_SINGLES_BEGINNING_WITH_QUERY = gql`\n  query ALL_SINGLES_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true, title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\nexport const ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY = gql`\n  query ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true, OR: [{title_starts_with: \"0\"},{title_starts_with: \"1\"},{title_starts_with: \"2\"},{title_starts_with: \"3\"},{title_starts_with: \"4\"},{title_starts_with: \"5\"},{title_starts_with: \"6\"},{title_starts_with: \"7\"},{title_starts_with: \"8\"},{title_starts_with: \"9\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst Singles = ({\n  page\n}) => {\n  const {\n    0: letter,\n    1: setLetter\n  } = useState(\"\");\n  const {\n    0: sortBy,\n    1: setSortBy\n  } = useState(\"title_ASC\");\n  const {\n    0: checkedItems,\n    1: setCheckedItems\n  } = useState([]);\n  const {\n    loading: localStateLoading,\n    error: localStateError,\n    data: localStateData\n  } = useQuery(LOCAL_STATE_QUERY);\n  const {\n    loading: allSinglesLoading,\n    error: allSinglesError,\n    data: allSinglesData\n  } = useQuery(ALL_SINGLES_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy\n    }\n  });\n  const {\n    loading: singlesBeginningWithLoading,\n    error: singlesBeginningWithError,\n    data: singlesBeginningWithData\n  } = useQuery(ALL_SINGLES_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy\n    }\n  });\n  const {\n    loading: singlesBeginningWithNumberLoading,\n    error: singlesBeginningWithNumberError,\n    data: singlesBeginningWithNumberData\n  } = useQuery(ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy\n    }\n  });\n  if (singlesBeginningWithLoading || allSinglesLoading || singlesBeginningWithNumberLoading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Loading...\");\n  if (singlesBeginningWithError || allSinglesError || singlesBeginningWithNumberError) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Error :(\");\n\n  function getSingles() {\n    if (letter === \"\" || !letter) {\n      return allSinglesData.albums.filter(album => album.single).map(album => __jsx(Album, {\n        key: album.id,\n        album: album,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }));\n    } else if (letter === \"#\") {\n      return singlesBeginningWithNumberData.albums.filter(album => album.single).map(single => __jsx(Album, {\n        key: single.id,\n        album: single,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }));\n    } else {\n      return singlesBeginningWithData.albums.filter(album => album.single).map(single => __jsx(Album, {\n        key: single.id,\n        album: single,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }));\n    }\n  }\n\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZWithNumber,\n    onChange: e => {\n      setLetter(e.value);\n      Router.push({\n        pathname: \"/singles\",\n        query: {\n          page: 1\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), __jsx(Select, {\n    options: sortBySelectItems,\n    theme: customTheme,\n    placeholder: `Sort by ${getSelectLabel(sortBySelectItems, sortBy)}`,\n    onChange: e => setSortBy(e.value),\n    isSearchable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), __jsx(Pagination, {\n    page: page,\n    model: \"singles\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), __jsx(Multilist, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, getSingles()), __jsx(Pagination, {\n    page: page,\n    model: \"singles\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }));\n};\n\nexport default Singles;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Singles.js"],"names":["React","useState","useQuery","useMutation","Router","gql","Select","Album","Pagination","perPage","SelectButton","selectButtonsAthruZWithNumber","Multilist","Center","sortBySelectItems","getSelectLabel","customTheme","LOCAL_STATE_QUERY","ALL_SINGLES_QUERY","ALL_SINGLES_BEGINNING_WITH_QUERY","ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY","Singles","page","letter","setLetter","sortBy","setSortBy","checkedItems","setCheckedItems","loading","localStateLoading","error","localStateError","data","localStateData","allSinglesLoading","allSinglesError","allSinglesData","variables","skip","first","singlesBeginningWithLoading","singlesBeginningWithError","singlesBeginningWithData","singlesBeginningWithNumberLoading","singlesBeginningWithNumberError","singlesBeginningWithNumberData","getSingles","albums","filter","album","single","map","id","e","value","push","pathname","query"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Router from \"next/router\";\nimport { gql } from \"apollo-boost\";\nimport Select from \"react-select\";\n\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport Multilist from \"./styles/Multilist\";\nimport Center from \"./styles/Center\";\nimport sortBySelectItems from \"../lib/sortByOptions/singlesSortBySelectOptions\";\nimport getSelectLabel from \"../lib/sortByOptions/sortBySelectReturnLabel\";\nimport customTheme from \"./styles/reactSelectTheme\";\n\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    selectedIds @client\n  }\n`;\n\nexport const ALL_SINGLES_QUERY = gql`\n  query ALL_SINGLES_QUERY($first: Int = ${perPage}, $skip: Int = 0, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true}, first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ALL_SINGLES_BEGINNING_WITH_QUERY = gql`\n  query ALL_SINGLES_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true, title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY = gql`\n  query ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true, OR: [{title_starts_with: \"0\"},{title_starts_with: \"1\"},{title_starts_with: \"2\"},{title_starts_with: \"3\"},{title_starts_with: \"4\"},{title_starts_with: \"5\"},{title_starts_with: \"6\"},{title_starts_with: \"7\"},{title_starts_with: \"8\"},{title_starts_with: \"9\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst Singles = ({ page }) => {\n  const [letter, setLetter] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"title_ASC\");\n  const [checkedItems, setCheckedItems] = useState([]);\n  const {\n    loading: localStateLoading,\n    error: localStateError,\n    data: localStateData,\n  } = useQuery(LOCAL_STATE_QUERY);\n\n  const {\n    loading: allSinglesLoading,\n    error: allSinglesError,\n    data: allSinglesData,\n  } = useQuery(ALL_SINGLES_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage, sortBy },\n  });\n  const {\n    loading: singlesBeginningWithLoading,\n    error: singlesBeginningWithError,\n    data: singlesBeginningWithData,\n  } = useQuery(ALL_SINGLES_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy,\n    },\n  });\n  const {\n    loading: singlesBeginningWithNumberLoading,\n    error: singlesBeginningWithNumberError,\n    data: singlesBeginningWithNumberData,\n  } = useQuery(ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy,\n    },\n  });\n  if (\n    singlesBeginningWithLoading ||\n    allSinglesLoading ||\n    singlesBeginningWithNumberLoading\n  )\n    return <p>Loading...</p>;\n  if (\n    singlesBeginningWithError ||\n    allSinglesError ||\n    singlesBeginningWithNumberError\n  )\n    return <p>Error :(</p>;\n\n  function getSingles() {\n    if (letter === \"\" || !letter) {\n      return allSinglesData.albums\n        .filter((album) => album.single)\n        .map((album) => <Album key={album.id} album={album} />);\n    } else if (letter === \"#\") {\n      return singlesBeginningWithNumberData.albums\n        .filter((album) => album.single)\n        .map((single) => <Album key={single.id} album={single} />);\n    } else {\n      return singlesBeginningWithData.albums\n        .filter((album) => album.single)\n        .map((single) => <Album key={single.id} album={single} />);\n    }\n  }\n\n  return (\n    <Center>\n      <SelectButton\n        value={letter}\n        options={selectButtonsAthruZWithNumber}\n        onChange={(e) => {\n          setLetter(e.value);\n          Router.push({ pathname: \"/singles\", query: { page: 1 } });\n        }}\n      />\n      <br />\n      <Select\n        options={sortBySelectItems}\n        theme={customTheme}\n        placeholder={`Sort by ${getSelectLabel(sortBySelectItems, sortBy)}`}\n        onChange={(e) => setSortBy(e.value)}\n        isSearchable\n      />\n      <br />\n      <Pagination page={page} model=\"singles\" letter={letter} />\n      <Multilist>{getSingles()}</Multilist>\n      <Pagination page={page} model=\"singles\" letter={letter} />\n    </Center>\n  );\n};\n\nexport default Singles;\n"]},"metadata":{},"sourceType":"module"}