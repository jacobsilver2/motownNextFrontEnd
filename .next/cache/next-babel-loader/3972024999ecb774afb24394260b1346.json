{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Artists.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Artist from \"./Artist\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nconst ALL_ARTISTS_QUERY = gql`\n  query ALL_ARTISTS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    artists(first: $first, skip: $skip, orderBy: name_ASC ) {\n      id\n      name\n    }\n  }\n`;\nconst Center = styled.div.withConfig({\n  displayName: \"Artists__Center\",\n  componentId: \"sc-1du5hy1-0\"\n})([\"text-align:center;\"]);\nconst ArtistsList = styled.div.withConfig({\n  displayName: \"Artists__ArtistsList\",\n  componentId: \"sc-1du5hy1-1\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;max-width:\", \";margin:0 auto;\"], props => props.theme.maxWidth);\n\nconst Artists = ({\n  page\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_ARTISTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Error :(\");\n  const artists = data.artists.map(artist => __jsx(Artist, {\n    key: artist.id,\n    artist: artist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Pagination, {\n    page: page,\n    model: \"artists\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"I found \", artists.length, \" artists.\")), __jsx(ArtistsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, artists), __jsx(Pagination, {\n    page: page,\n    model: \"artists\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nexport default Artists;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Artists.js"],"names":["React","useQuery","gql","styled","Artist","Pagination","perPage","ALL_ARTISTS_QUERY","Center","div","ArtistsList","props","theme","maxWidth","Artists","page","loading","error","data","variables","skip","first","artists","map","artist","id","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,iBAAiB,GAAGL,GAAI;0DAC4BI,OAAQ;;;;;;CADlE;AASA,MAAME,MAAM,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,0BAAZ;AAIA,MAAMC,WAAW,GAAGP,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,+FAIFE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QAJnB,CAAjB;;AAQA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BjB,QAAQ,CAACM,iBAAD,EAAoB;AAC3DY,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEL,IAAI,GAAGT,OAAP,GAAiBA,OAAzB;AAAkCe,MAAAA,KAAK,EAAEf;AAAzC;AADgD,GAApB,CAAzC;AAGA,MAAIU,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,QAAMK,OAAO,GAAGJ,IAAI,CAACI,OAAL,CAAaC,GAAb,CAAiBC,MAAM,IACrC,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAwB,IAAA,MAAM,EAAED,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAAhB;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAET,IAAlB;AAAwB,IAAA,KAAK,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYO,OAAO,CAACI,MAApB,cADF,CAFF,EAME,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcJ,OAAd,CANF,EAOE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEP,IAAlB;AAAwB,IAAA,KAAK,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CAtBD;;AAwBA,eAAeD,OAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Artist from \"./Artist\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\n\nconst ALL_ARTISTS_QUERY = gql`\n  query ALL_ARTISTS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    artists(first: $first, skip: $skip, orderBy: name_ASC ) {\n      id\n      name\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ArtistsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n`;\n\nconst Artists = ({ page }) => {\n  const { loading, error, data } = useQuery(ALL_ARTISTS_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage }\n  });\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const artists = data.artists.map(artist => (\n    <Artist key={artist.id} artist={artist} />\n  ));\n\n  return (\n    <Center>\n      <Pagination page={page} model=\"artists\" />\n      <p>\n        <b>I found {artists.length} artists.</b>\n      </p>\n\n      <ArtistsList>{artists}</ArtistsList>\n      <Pagination page={page} model=\"artists\" />\n    </Center>\n  );\n};\n\nexport default Artists;\n"]},"metadata":{},"sourceType":"module"}