{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/SingleSong.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nconst SINGLE_SONG_QUERY = gql`\n  query SINGLE_SONG_QUERY($id: ID!) {\n    song(where: { id: $id }) {\n      id\n      title\n      composer {\n        id\n        name\n      }\n      publisher\n      publishedDate\n      altTitle\n      instrumental\n      fromFilm\n      tribute\n      artists {\n        id\n        name\n      }\n      albums {\n        id\n        title\n      }\n      recordings {\n        id\n        title\n      }\n    }\n  }\n`;\n\nconst SingleSong = ({\n  id\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(SINGLE_SONG_QUERY, {\n    variables: {\n      id\n    }\n  });\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Error!\");\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Loading...\");\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Single Song\");\n};\n\nexport default SingleSong;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/SingleSong.js"],"names":["React","gql","useQuery","SINGLE_SONG_QUERY","SingleSong","id","loading","error","data","variables"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,MAAMC,iBAAiB,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA9B;;AA+BA,MAAMG,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAC7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACC,iBAAD,EAAoB;AAC3DM,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AADgD,GAApB,CAAzC;AAGA,MAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD,CARD;;AAUA,eAAeF,UAAf","sourcesContent":["import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst SINGLE_SONG_QUERY = gql`\n  query SINGLE_SONG_QUERY($id: ID!) {\n    song(where: { id: $id }) {\n      id\n      title\n      composer {\n        id\n        name\n      }\n      publisher\n      publishedDate\n      altTitle\n      instrumental\n      fromFilm\n      tribute\n      artists {\n        id\n        name\n      }\n      albums {\n        id\n        title\n      }\n      recordings {\n        id\n        title\n      }\n    }\n  }\n`;\n\nconst SingleSong = ({ id }) => {\n  const { loading, error, data } = useQuery(SINGLE_SONG_QUERY, {\n    variables: { id }\n  });\n  if (error) return <p>Error!</p>;\n  if (loading) return <p>Loading...</p>;\n\n  return <div>Single Song</div>;\n};\n\nexport default SingleSong;\n"]},"metadata":{},"sourceType":"module"}