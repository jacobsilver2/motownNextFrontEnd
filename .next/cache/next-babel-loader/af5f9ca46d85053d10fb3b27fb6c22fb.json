{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Pagination.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  query COMPOSERS_PAGINATION_QUERY {\\n    composersConnection(\\n      where: {\\n        OR: [\\n          { name_starts_with: \\\"0\\\" }\\n          { name_starts_with: \\\"1\\\" }\\n          { name_starts_with: \\\"2\\\" }\\n          { name_starts_with: \\\"3\\\" }\\n          { name_starts_with: \\\"4\\\" }\\n          { name_starts_with: \\\"5\\\" }\\n          { name_starts_with: \\\"6\\\" }\\n          { name_starts_with: \\\"7\\\" }\\n          { name_starts_with: \\\"8\\\" }\\n          { name_starts_with: \\\"9\\\" }\\n        ]\\n      }\\n    ) {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  query COMPOSERS_PAGINATION_QUERY($letter: String) {\\n    composersConnection(where: { name_starts_with: $letter }) {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  query ARTISTS_PAGINATION_QUERY {\\n    artistsConnection(\\n      where: {\\n        OR: [\\n          { name_starts_with: \\\"0\\\" }\\n          { name_starts_with: \\\"1\\\" }\\n          { name_starts_with: \\\"2\\\" }\\n          { name_starts_with: \\\"3\\\" }\\n          { name_starts_with: \\\"4\\\" }\\n          { name_starts_with: \\\"5\\\" }\\n          { name_starts_with: \\\"6\\\" }\\n          { name_starts_with: \\\"7\\\" }\\n          { name_starts_with: \\\"8\\\" }\\n          { name_starts_with: \\\"9\\\" }\\n        ]\\n      }\\n    ) {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  query ARTISTS_PAGINATION_QUERY($letter: String) {\\n    artistsConnection(where: { name_starts_with: $letter }) {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALBUMS_PAGINATION_QUERY {\\n    albumsConnection(\\n      where: {\\n        OR: [\\n          { title_starts_with: \\\"0\\\" }\\n          { title_starts_with: \\\"1\\\" }\\n          { title_starts_with: \\\"2\\\" }\\n          { title_starts_with: \\\"3\\\" }\\n          { title_starts_with: \\\"4\\\" }\\n          { title_starts_with: \\\"5\\\" }\\n          { title_starts_with: \\\"6\\\" }\\n          { title_starts_with: \\\"7\\\" }\\n          { title_starts_with: \\\"8\\\" }\\n          { title_starts_with: \\\"9\\\" }\\n        ]\\n      }\\n    ) {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALBUMS_PAGINATION_QUERY($letter: String) {\\n    albumsConnection(where: { title_starts_with: $letter }) {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query SONGS_PAGINATION_QUERY {\\n    songsConnection(\\n      where: {\\n        OR: [\\n          { title_starts_with: \\\"0\\\" }\\n          { title_starts_with: \\\"1\\\" }\\n          { title_starts_with: \\\"2\\\" }\\n          { title_starts_with: \\\"3\\\" }\\n          { title_starts_with: \\\"4\\\" }\\n          { title_starts_with: \\\"5\\\" }\\n          { title_starts_with: \\\"6\\\" }\\n          { title_starts_with: \\\"7\\\" }\\n          { title_starts_with: \\\"8\\\" }\\n          { title_starts_with: \\\"9\\\" }\\n        ]\\n      }\\n    ) {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SONGS_PAGINATION_QUERY($letter: String) {\\n    songsConnection(where: { title_starts_with: $letter }) {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\";\nvar SONGS_PAGINATION_QUERY = gql(_templateObject());\nvar SONGS_PAGINATION_WITH_NUMBER_QUERY = gql(_templateObject2());\nvar ALBUMS_PAGINATION_QUERY = gql(_templateObject3());\nvar ALBUMS_PAGINATION_WITH_NUMBER_QUERY = gql(_templateObject4());\nvar ARTISTS_PAGINATION_QUERY = gql(_templateObject5());\nvar ARTISTS_PAGINATION_WITH_NUMBER_QUERY = gql(_templateObject6());\nvar COMPOSERS_PAGINATION_QUERY = gql(_templateObject7());\nvar COMPOSERS_PAGINATION_WITH_NUMBER_QUERY = gql(_templateObject8());\n\nvar Pagination = function Pagination(_ref) {\n  var page = _ref.page,\n      model = _ref.model,\n      letter = _ref.letter;\n  var PAGINATION_QUERY;\n\n  switch (model) {\n    case \"songs\":\n      letter === \"#\" ? PAGINATION_QUERY = SONGS_PAGINATION_WITH_NUMBER_QUERY : PAGINATION_QUERY = SONGS_PAGINATION_QUERY;\n      break;\n\n    case \"albums\":\n      letter === \"#\" ? PAGINATION_QUERY = ALBUMS_PAGINATION_WITH_NUMBER_QUERY : PAGINATION_QUERY = ALBUMS_PAGINATION_QUERY;\n      break;\n\n    case \"artists\":\n      letter === \"#\" ? PAGINATION_QUERY = ARTISTS_PAGINATION_WITH_NUMBER_QUERY : PAGINATION_QUERY = ARTISTS_PAGINATION_QUERY;\n      break;\n\n    case \"composers\":\n      letter = \"#\" ? PAGINATION_QUERY = COMPOSERS_PAGINATION_WITH_NUMBER_QUERY : PAGINATION_QUERY = COMPOSERS_PAGINATION_QUERY;\n      break;\n\n    default:\n      PAGINATION_QUERY = SONGS_PAGINATION_QUERY;\n  }\n\n  var _useQuery = useQuery(PAGINATION_QUERY, {\n    variables: {\n      letter: letter\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Error!\");\n  var count;\n  if (model === \"songs\") count = data.songsConnection.aggregate.count;\n  if (model === \"artists\") count = data.artistsConnection.aggregate.count;\n  if (model === \"albums\") count = data.albumsConnection.aggregate.count;\n  if (model === \"composers\") count = data.composersConnection.aggregate.count;\n  var pages = Math.ceil(count / perPage) || 1;\n  console.log(\"the count is \".concat(count));\n  console.log(\"perpage is \".concat(perPage));\n  return __jsx(PaginationStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: {\n      pathname: model,\n      query: {\n        page: page - 1\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"prev\",\n    \"aria-disabled\": page <= 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Prev\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Page \", page, \" of \", pages), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, count, \" \", model), __jsx(Link, {\n    href: {\n      pathname: model,\n      query: {\n        page: page + 1\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"next\",\n    \"aria-disabled\": page >= pages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Next\")));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Pagination.js"],"names":["React","gql","Link","useQuery","PaginationStyles","perPage","SONGS_PAGINATION_QUERY","SONGS_PAGINATION_WITH_NUMBER_QUERY","ALBUMS_PAGINATION_QUERY","ALBUMS_PAGINATION_WITH_NUMBER_QUERY","ARTISTS_PAGINATION_QUERY","ARTISTS_PAGINATION_WITH_NUMBER_QUERY","COMPOSERS_PAGINATION_QUERY","COMPOSERS_PAGINATION_WITH_NUMBER_QUERY","Pagination","page","model","letter","PAGINATION_QUERY","variables","loading","error","data","count","songsConnection","aggregate","artistsConnection","albumsConnection","composersConnection","pages","Math","ceil","console","log","pathname","query"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\";\n\nconst SONGS_PAGINATION_QUERY = gql`\n  query SONGS_PAGINATION_QUERY($letter: String) {\n    songsConnection(where: { title_starts_with: $letter }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst SONGS_PAGINATION_WITH_NUMBER_QUERY = gql`\n  query SONGS_PAGINATION_QUERY {\n    songsConnection(\n      where: {\n        OR: [\n          { title_starts_with: \"0\" }\n          { title_starts_with: \"1\" }\n          { title_starts_with: \"2\" }\n          { title_starts_with: \"3\" }\n          { title_starts_with: \"4\" }\n          { title_starts_with: \"5\" }\n          { title_starts_with: \"6\" }\n          { title_starts_with: \"7\" }\n          { title_starts_with: \"8\" }\n          { title_starts_with: \"9\" }\n        ]\n      }\n    ) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst ALBUMS_PAGINATION_QUERY = gql`\n  query ALBUMS_PAGINATION_QUERY($letter: String) {\n    albumsConnection(where: { title_starts_with: $letter }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst ALBUMS_PAGINATION_WITH_NUMBER_QUERY = gql`\n  query ALBUMS_PAGINATION_QUERY {\n    albumsConnection(\n      where: {\n        OR: [\n          { title_starts_with: \"0\" }\n          { title_starts_with: \"1\" }\n          { title_starts_with: \"2\" }\n          { title_starts_with: \"3\" }\n          { title_starts_with: \"4\" }\n          { title_starts_with: \"5\" }\n          { title_starts_with: \"6\" }\n          { title_starts_with: \"7\" }\n          { title_starts_with: \"8\" }\n          { title_starts_with: \"9\" }\n        ]\n      }\n    ) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst ARTISTS_PAGINATION_QUERY = gql`\n  query ARTISTS_PAGINATION_QUERY($letter: String) {\n    artistsConnection(where: { name_starts_with: $letter }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst ARTISTS_PAGINATION_WITH_NUMBER_QUERY = gql`\n  query ARTISTS_PAGINATION_QUERY {\n    artistsConnection(\n      where: {\n        OR: [\n          { name_starts_with: \"0\" }\n          { name_starts_with: \"1\" }\n          { name_starts_with: \"2\" }\n          { name_starts_with: \"3\" }\n          { name_starts_with: \"4\" }\n          { name_starts_with: \"5\" }\n          { name_starts_with: \"6\" }\n          { name_starts_with: \"7\" }\n          { name_starts_with: \"8\" }\n          { name_starts_with: \"9\" }\n        ]\n      }\n    ) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst COMPOSERS_PAGINATION_QUERY = gql`\n  query COMPOSERS_PAGINATION_QUERY($letter: String) {\n    composersConnection(where: { name_starts_with: $letter }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst COMPOSERS_PAGINATION_WITH_NUMBER_QUERY = gql`\n  query COMPOSERS_PAGINATION_QUERY {\n    composersConnection(\n      where: {\n        OR: [\n          { name_starts_with: \"0\" }\n          { name_starts_with: \"1\" }\n          { name_starts_with: \"2\" }\n          { name_starts_with: \"3\" }\n          { name_starts_with: \"4\" }\n          { name_starts_with: \"5\" }\n          { name_starts_with: \"6\" }\n          { name_starts_with: \"7\" }\n          { name_starts_with: \"8\" }\n          { name_starts_with: \"9\" }\n        ]\n      }\n    ) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = ({ page, model, letter }) => {\n  let PAGINATION_QUERY;\n  switch (model) {\n    case \"songs\":\n      letter === \"#\"\n        ? (PAGINATION_QUERY = SONGS_PAGINATION_WITH_NUMBER_QUERY)\n        : (PAGINATION_QUERY = SONGS_PAGINATION_QUERY);\n      break;\n    case \"albums\":\n      letter === \"#\"\n        ? (PAGINATION_QUERY = ALBUMS_PAGINATION_WITH_NUMBER_QUERY)\n        : (PAGINATION_QUERY = ALBUMS_PAGINATION_QUERY);\n      break;\n    case \"artists\":\n      letter === \"#\"\n        ? (PAGINATION_QUERY = ARTISTS_PAGINATION_WITH_NUMBER_QUERY)\n        : (PAGINATION_QUERY = ARTISTS_PAGINATION_QUERY);\n      break;\n    case \"composers\":\n      letter = \"#\"\n        ? (PAGINATION_QUERY = COMPOSERS_PAGINATION_WITH_NUMBER_QUERY)\n        : (PAGINATION_QUERY = COMPOSERS_PAGINATION_QUERY);\n      break;\n    default:\n      PAGINATION_QUERY = SONGS_PAGINATION_QUERY;\n  }\n\n  const { loading, error, data } = useQuery(PAGINATION_QUERY, {\n    variables: { letter: letter },\n  });\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error!</p>;\n\n  let count;\n  if (model === \"songs\") count = data.songsConnection.aggregate.count;\n  if (model === \"artists\") count = data.artistsConnection.aggregate.count;\n  if (model === \"albums\") count = data.albumsConnection.aggregate.count;\n  if (model === \"composers\") count = data.composersConnection.aggregate.count;\n\n  const pages = Math.ceil(count / perPage) || 1;\n  console.log(`the count is ${count}`);\n  console.log(`perpage is ${perPage}`);\n  return (\n    <PaginationStyles>\n      <Link href={{ pathname: model, query: { page: page - 1 } }}>\n        <a className=\"prev\" aria-disabled={page <= 1}>\n          Prev\n        </a>\n      </Link>\n      <p>\n        Page {page} of {pages}\n      </p>\n      <p>\n        {count} {model}\n      </p>\n      <Link href={{ pathname: model, query: { page: page + 1 } }}>\n        <a className=\"next\" aria-disabled={page >= pages}>\n          Next\n        </a>\n      </Link>\n    </PaginationStyles>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}