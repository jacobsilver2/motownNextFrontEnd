{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Albums.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\\n    turnSingleIntoAlbum(id: $id) {\\n      id\\n      title\\n      single\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = \", \", $sortBy: AlbumOrderByInput!) {\\n    albums(where: {single: false, OR: [{title_starts_with: \\\"0\\\"},{title_starts_with: \\\"1\\\"},{title_starts_with: \\\"2\\\"},{title_starts_with: \\\"3\\\"},{title_starts_with: \\\"4\\\"},{title_starts_with: \\\"5\\\"},{title_starts_with: \\\"6\\\"},{title_starts_with: \\\"7\\\"},{title_starts_with: \\\"8\\\"},{title_starts_with: \\\"9\\\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      catalogNumber\\n      single\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ALBUMS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = \", \", $letter: String, $sortBy: AlbumOrderByInput!) {\\n    albums(where: {single: false, title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      catalogNumber\\n      single\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ALBUMS_QUERY($first: Int = \", \", $skip: Int = 0, $sortBy: AlbumOrderByInput!) {\\n    albums(where: {single: false}, first: $first, skip: $skip, orderBy: $sortBy ) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      catalogNumber\\n      single\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Router from \"next/router\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { MultiList, Center } from \"./Artists\";\nexport var StyledDropdown = styled(Dropdown).withConfig({\n  displayName: \"Albums__StyledDropdown\",\n  componentId: \"sc-1rsazgb-0\"\n})([\"width:50%;@media screen and (max-width:600px){width:100%;}\"]);\nexport var ALL_ALBUMS_QUERY = gql(_templateObject(), perPage);\nexport var ALL_ALBUMS_BEGINNING_WITH_QUERY = gql(_templateObject2(), perPage);\nexport var ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY = gql(_templateObject3(), perPage);\nvar TURN_SINGLE_INTO_ALBUM_MUTATION = gql(_templateObject4());\nvar sortBySelectItems = [{\n  label: \"Title, ascending\",\n  value: \"title_ASC\"\n}, {\n  label: \"Title, descending\",\n  value: \"title_DESC\"\n}, {\n  label: \"Format, ascending\",\n  value: \"format_DESC\"\n}, {\n  label: \"Format, descending\",\n  value: \"format_ASC\"\n}, {\n  label: \"Release Date, ascending\",\n  value: \"releaseDate_ASC\"\n}, {\n  label: \"Release Date, descending\",\n  value: \"releaseDate_DESC\"\n}, {\n  label: \"Record Label, ascending\",\n  value: \"recordLabel_ASC\"\n}, {\n  label: \"Record Label, descending\",\n  value: \"recordLabel_DESC\"\n}, {\n  label: \"Catalog Number, ascending\",\n  value: \"catalogNumber_ASC\"\n}, {\n  label: \"Catalog Number, descending\",\n  value: \"catalogNumber_DESC\"\n}];\n\nvar Albums = function Albums(_ref) {\n  var page = _ref.page;\n\n  var _useState = useState(\"\"),\n      letter = _useState[0],\n      setLetter = _useState[1];\n\n  var _useState2 = useState(\"title_ASC\"),\n      sortBy = _useState2[0],\n      setSortBy = _useState2[1];\n\n  var _useState3 = useState([]),\n      checkedItems = _useState3[0],\n      setCheckedItems = _useState3[1];\n\n  var _useMutation = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      turnSingleIntoAlbumMutation = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      turnSingleIntoAlbumLoading = _useMutation2$.loading,\n      turnSingleIntoAlbumError = _useMutation2$.error;\n\n  var _useQuery = useQuery(ALL_ALBUMS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      allAlbumsLoading = _useQuery.loading,\n      allAlbumsError = _useQuery.error,\n      allAlbumsData = _useQuery.data;\n\n  var _useQuery2 = useQuery(ALL_ALBUMS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter: letter,\n      sortBy: sortBy\n    }\n  }),\n      albumsBeginningWithLoading = _useQuery2.loading,\n      albumsBeginningWithError = _useQuery2.error,\n      albumsBeginningWithData = _useQuery2.data;\n\n  var _useQuery3 = useQuery(ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      albumsBeginningWithNumberLoading = _useQuery3.loading,\n      albumsBeginningWithNumberError = _useQuery3.error,\n      albumsBeginningWithNumberData = _useQuery3.data;\n\n  if (albumsBeginningWithLoading || allAlbumsLoading || albumsBeginningWithNumberLoading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Loading...\");\n  if (albumsBeginningWithError || allAlbumsError || albumsBeginningWithNumberError) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Error :(\");\n\n  function turnSingleIntoAlbum() {\n    return _regeneratorRuntime.async(function turnSingleIntoAlbum$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            turnSingleIntoAlbumMutation({\n              variables: {\n                id: checkedItems[0]\n              }\n            });\n            turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getAlbums() {\n    if (letter === \"\" || !letter) {\n      return allAlbumsData.albums.map(function (album) {\n        return __jsx(Album, {\n          addToCheckedItemsList: setCheckedItems,\n          checkedItems: checkedItems,\n          key: album.id,\n          album: album,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        });\n      });\n    } else if (letter === \"#\") {\n      return albumsBeginningWithNumberData.albums.map(function (album) {\n        return __jsx(Album, {\n          key: album.id,\n          album: album,\n          addToCheckedItemsList: setCheckedItems,\n          checkedItems: checkedItems,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        });\n      });\n    } else {\n      return albumsBeginningWithData.albums.map(function (album) {\n        return __jsx(Album, {\n          key: album.id,\n          album: album,\n          addToCheckedItemsList: setCheckedItems,\n          checkedItems: checkedItems,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        });\n      });\n    }\n  } // const albums = !letter\n  //   ? allAlbumsData.albums.map((album) => (\n  //       <Album key={album.id} album={album} />\n  //     ))\n  //   : albumsBeginningWithData.albums.map((album) => (\n  //       <Album key={album.id} album={album} />\n  //     ));\n\n\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return turnSingleIntoAlbum;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"TURN SINGLE INTO ALBUM\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"Checked items:\", \" \", checkedItems && checkedItems.map(function (item) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, item);\n  })), __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZWithNumber,\n    onChange: function onChange(e) {\n      setLetter(e.value);\n      Router.push({\n        pathname: \"/albums\",\n        query: {\n          page: 1\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }), __jsx(StyledDropdown, {\n    value: sortBy,\n    options: sortBySelectItems,\n    onChange: function onChange(e) {\n      return setSortBy(e.value);\n    },\n    placeholder: \"Sort By\\u2026\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }), __jsx(Pagination, {\n    page: page,\n    model: \"albums\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }), __jsx(MultiList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, getAlbums()), __jsx(Pagination, {\n    page: page,\n    model: \"albums\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }));\n};\n\nexport default Albums;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Albums.js"],"names":["React","useState","useQuery","useMutation","Router","gql","styled","Album","Pagination","perPage","SelectButton","selectButtonsAthruZWithNumber","Dropdown","MultiList","Center","StyledDropdown","ALL_ALBUMS_QUERY","ALL_ALBUMS_BEGINNING_WITH_QUERY","ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY","TURN_SINGLE_INTO_ALBUM_MUTATION","sortBySelectItems","label","value","Albums","page","letter","setLetter","sortBy","setSortBy","checkedItems","setCheckedItems","turnSingleIntoAlbumMutation","turnSingleIntoAlbumLoading","loading","turnSingleIntoAlbumError","error","variables","skip","first","allAlbumsLoading","allAlbumsError","allAlbumsData","data","albumsBeginningWithLoading","albumsBeginningWithError","albumsBeginningWithData","albumsBeginningWithNumberLoading","albumsBeginningWithNumberError","albumsBeginningWithNumberData","turnSingleIntoAlbum","id","console","log","getAlbums","albums","map","album","item","e","push","pathname","query"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Router from \"next/router\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { MultiList, Center } from \"./Artists\";\n\nexport const StyledDropdown = styled(Dropdown)`\n  width: 50%;\n  @media screen and (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nexport const ALL_ALBUMS_QUERY = gql`\n  query ALL_ALBUMS_QUERY($first: Int = ${perPage}, $skip: Int = 0, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: false}, first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ALL_ALBUMS_BEGINNING_WITH_QUERY = gql`\n  query ALL_ALBUMS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: false, title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY = gql`\n  query ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: false, OR: [{title_starts_with: \"0\"},{title_starts_with: \"1\"},{title_starts_with: \"2\"},{title_starts_with: \"3\"},{title_starts_with: \"4\"},{title_starts_with: \"5\"},{title_starts_with: \"6\"},{title_starts_with: \"7\"},{title_starts_with: \"8\"},{title_starts_with: \"9\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst TURN_SINGLE_INTO_ALBUM_MUTATION = gql`\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\n    turnSingleIntoAlbum(id: $id) {\n      id\n      title\n      single\n    }\n  }\n`;\n\nconst sortBySelectItems = [\n  { label: \"Title, ascending\", value: \"title_ASC\" },\n  { label: \"Title, descending\", value: \"title_DESC\" },\n  { label: \"Format, ascending\", value: \"format_DESC\" },\n  { label: \"Format, descending\", value: \"format_ASC\" },\n  { label: \"Release Date, ascending\", value: \"releaseDate_ASC\" },\n  { label: \"Release Date, descending\", value: \"releaseDate_DESC\" },\n  { label: \"Record Label, ascending\", value: \"recordLabel_ASC\" },\n  { label: \"Record Label, descending\", value: \"recordLabel_DESC\" },\n  { label: \"Catalog Number, ascending\", value: \"catalogNumber_ASC\" },\n  { label: \"Catalog Number, descending\", value: \"catalogNumber_DESC\" },\n];\n\nconst Albums = ({ page }) => {\n  const [letter, setLetter] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"title_ASC\");\n  const [checkedItems, setCheckedItems] = useState([]);\n\n  const [\n    turnSingleIntoAlbumMutation,\n    { loading: turnSingleIntoAlbumLoading, error: turnSingleIntoAlbumError },\n  ] = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION);\n\n  const {\n    loading: allAlbumsLoading,\n    error: allAlbumsError,\n    data: allAlbumsData,\n  } = useQuery(ALL_ALBUMS_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage, sortBy },\n  });\n  const {\n    loading: albumsBeginningWithLoading,\n    error: albumsBeginningWithError,\n    data: albumsBeginningWithData,\n  } = useQuery(ALL_ALBUMS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy,\n    },\n  });\n  const {\n    loading: albumsBeginningWithNumberLoading,\n    error: albumsBeginningWithNumberError,\n    data: albumsBeginningWithNumberData,\n  } = useQuery(ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy,\n    },\n  });\n  if (\n    albumsBeginningWithLoading ||\n    allAlbumsLoading ||\n    albumsBeginningWithNumberLoading\n  )\n    return <p>Loading...</p>;\n  if (\n    albumsBeginningWithError ||\n    allAlbumsError ||\n    albumsBeginningWithNumberError\n  )\n    return <p>Error :(</p>;\n\n  async function turnSingleIntoAlbum() {\n    turnSingleIntoAlbumMutation({ variables: { id: checkedItems[0] } });\n    turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n  }\n\n  function getAlbums() {\n    if (letter === \"\" || !letter) {\n      return allAlbumsData.albums.map((album) => (\n        <Album\n          addToCheckedItemsList={setCheckedItems}\n          checkedItems={checkedItems}\n          key={album.id}\n          album={album}\n        />\n      ));\n    } else if (letter === \"#\") {\n      return albumsBeginningWithNumberData.albums.map((album) => (\n        <Album\n          key={album.id}\n          album={album}\n          addToCheckedItemsList={setCheckedItems}\n          checkedItems={checkedItems}\n        />\n      ));\n    } else {\n      return albumsBeginningWithData.albums.map((album) => (\n        <Album\n          key={album.id}\n          album={album}\n          addToCheckedItemsList={setCheckedItems}\n          checkedItems={checkedItems}\n        />\n      ));\n    }\n  }\n\n  // const albums = !letter\n  //   ? allAlbumsData.albums.map((album) => (\n  //       <Album key={album.id} album={album} />\n  //     ))\n  //   : albumsBeginningWithData.albums.map((album) => (\n  //       <Album key={album.id} album={album} />\n  //     ));\n\n  return (\n    <Center>\n      <button onClick={() => turnSingleIntoAlbum}>\n        TURN SINGLE INTO ALBUM\n      </button>\n      <ul>\n        Checked items:{\" \"}\n        {checkedItems && checkedItems.map((item) => <li>{item}</li>)}\n      </ul>\n      <SelectButton\n        value={letter}\n        options={selectButtonsAthruZWithNumber}\n        onChange={(e) => {\n          setLetter(e.value);\n          Router.push({ pathname: \"/albums\", query: { page: 1 } });\n        }}\n      />\n      <br />\n      <StyledDropdown\n        value={sortBy}\n        options={sortBySelectItems}\n        onChange={(e) => setSortBy(e.value)}\n        placeholder=\"Sort By…\"\n      />\n      <br />\n      <Pagination page={page} model=\"albums\" letter={letter} />\n      <MultiList>{getAlbums()}</MultiList>\n      <Pagination page={page} model=\"albums\" letter={letter} />\n    </Center>\n  );\n};\n\nexport default Albums;\n"]},"metadata":{},"sourceType":"module"}