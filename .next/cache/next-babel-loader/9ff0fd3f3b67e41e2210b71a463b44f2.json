{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Artists.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ARTISTS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = \", \", $letter: String, $sortBy: ArtistOrderByInput!) {\\n    artists(where: {name_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ARTISTS_QUERY($skip: Int = 0, $first: Int = \", \", $sortBy: ArtistOrderByInput!) {\\n    artists(first: $first, skip: $skip, orderBy: $sortBy ) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Router from \"next/router\";\nimport styled from \"styled-components\";\nimport Artist from \"./Artist\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZ } from \"../lib/selectButtons\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\"; // import { StyledDropdown } from \"./Albums\";\n\nvar ALL_ARTISTS_QUERY = gql(_templateObject(), perPage);\nexport var ALL_ARTISTS_BEGINNING_WITH_QUERY = gql(_templateObject2(), perPage);\nexport var Center = styled.div.withConfig({\n  displayName: \"Artists__Center\",\n  componentId: \"sc-1du5hy1-0\"\n})([\"text-align:center;\"]);\nexport var MultiList = styled.div.withConfig({\n  displayName: \"Artists__MultiList\",\n  componentId: \"sc-1du5hy1-1\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;max-width:\", \";margin:0 auto;@media screen and (max-width:800px){grid-template-columns:1fr;}\"], function (props) {\n  return props.theme.maxWidth;\n});\nvar sortBySelectItems = [{\n  label: \"Name, ascending\",\n  value: \"name_ASC\"\n}, {\n  label: \"Name, descending\",\n  value: \"name_DESC\"\n}];\n\nvar Artists = function Artists(_ref) {\n  var page = _ref.page;\n\n  var _useState = useState(\"\"),\n      letter = _useState[0],\n      setLetter = _useState[1];\n\n  var _useState2 = useState(\"name_ASC\"),\n      sortBy = _useState2[0],\n      setSortBy = _useState2[1];\n\n  var _useQuery = useQuery(ALL_ARTISTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      allArtistsLoading = _useQuery.loading,\n      allArtistsError = _useQuery.error,\n      allArtistsData = _useQuery.data;\n\n  var _useQuery2 = useQuery(ALL_ARTISTS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter: letter,\n      sortBy: sortBy\n    }\n  }),\n      artistsBeginningWithLoading = _useQuery2.loading,\n      artistsBeginningWithError = _useQuery2.error,\n      artistsBeginningWithData = _useQuery2.data;\n\n  if (allArtistsLoading || artistsBeginningWithLoading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Loading...\");\n  if (allArtistsError || artistsBeginningWithError) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Error :(\");\n  var artists = !letter ? allArtistsData.artists.map(function (artist) {\n    return __jsx(Artist, {\n      key: artist.id,\n      artist: artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    });\n  }) : artistsBeginningWithData.artists.map(function (artist) {\n    return __jsx(Artist, {\n      key: artist.id,\n      artist: artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n  });\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZ,\n    onChange: function onChange(e) {\n      setLetter(e.value);\n      Router.push({\n        pathname: \"/artists\",\n        query: {\n          page: 1\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), __jsx(DropDown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(DropDownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), __jsx(Pagination, {\n    page: page,\n    model: \"artists\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), __jsx(MultiList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, artists), __jsx(Pagination, {\n    page: page,\n    model: \"artists\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }));\n};\n\nexport default Artists;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Artists.js"],"names":["React","useState","useQuery","gql","Router","styled","Artist","Pagination","perPage","SelectButton","selectButtonsAthruZ","DropDown","DropDownItem","SearchStyles","ALL_ARTISTS_QUERY","ALL_ARTISTS_BEGINNING_WITH_QUERY","Center","div","MultiList","props","theme","maxWidth","sortBySelectItems","label","value","Artists","page","letter","setLetter","sortBy","setSortBy","variables","skip","first","allArtistsLoading","loading","allArtistsError","error","allArtistsData","data","artistsBeginningWithLoading","artistsBeginningWithError","artistsBeginningWithData","artists","map","artist","id","e","push","pathname","query"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Router from \"next/router\";\nimport styled from \"styled-components\";\nimport Artist from \"./Artist\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZ } from \"../lib/selectButtons\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\n// import { StyledDropdown } from \"./Albums\";\n\nconst ALL_ARTISTS_QUERY = gql`\n  query ALL_ARTISTS_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: ArtistOrderByInput!) {\n    artists(first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const ALL_ARTISTS_BEGINNING_WITH_QUERY = gql`\n  query ALL_ARTISTS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: ArtistOrderByInput!) {\n    artists(where: {name_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      name\n    }\n  }\n`;\n\nexport const Center = styled.div`\n  text-align: center;\n`;\n\nexport const MultiList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${(props) => props.theme.maxWidth};\n  margin: 0 auto;\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst sortBySelectItems = [\n  { label: \"Name, ascending\", value: \"name_ASC\" },\n  { label: \"Name, descending\", value: \"name_DESC\" },\n];\n\nconst Artists = ({ page }) => {\n  const [letter, setLetter] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"name_ASC\");\n  const {\n    loading: allArtistsLoading,\n    error: allArtistsError,\n    data: allArtistsData,\n  } = useQuery(ALL_ARTISTS_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage, sortBy },\n  });\n  const {\n    loading: artistsBeginningWithLoading,\n    error: artistsBeginningWithError,\n    data: artistsBeginningWithData,\n  } = useQuery(ALL_ARTISTS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy,\n    },\n  });\n\n  if (allArtistsLoading || artistsBeginningWithLoading)\n    return <p>Loading...</p>;\n  if (allArtistsError || artistsBeginningWithError) return <p>Error :(</p>;\n\n  const artists = !letter\n    ? allArtistsData.artists.map((artist) => (\n        <Artist key={artist.id} artist={artist} />\n      ))\n    : artistsBeginningWithData.artists.map((artist) => (\n        <Artist key={artist.id} artist={artist} />\n      ));\n\n  return (\n    <Center>\n      <SelectButton\n        value={letter}\n        options={selectButtonsAthruZ}\n        onChange={(e) => {\n          setLetter(e.value);\n          Router.push({ pathname: \"/artists\", query: { page: 1 } });\n        }}\n      />\n      <br />\n      <DropDown>\n        <DropDownItem />\n      </DropDown>\n      {/* <StyledDropdown\n        value={sortBy}\n        options={sortBySelectItems}\n        onChange={(e) => setSortBy(e.value)}\n        placeholder=\"Sort By…\"\n      /> */}\n      <br />\n      <Pagination page={page} model=\"artists\" letter={letter} />\n      <MultiList>{artists}</MultiList>\n      <Pagination page={page} model=\"artists\" letter={letter} />\n    </Center>\n  );\n};\n\nexport default Artists;\n"]},"metadata":{},"sourceType":"module"}