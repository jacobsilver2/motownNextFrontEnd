{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Songs.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nconst ALL_SONGS_QUERY = gql`\n  query ALL_SONGS_QUERY {\n    songs {\n      id\n      title\n      publisher\n      publishedDate\n    }\n  }\n`;\n\nconst Songs = ({}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_SONGS_QUERY);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Error :(\");\n  const songs = data.songs.map(song => __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, song.title));\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, songs);\n};\n\nexport default Songs;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Songs.js"],"names":["React","useQuery","gql","ALL_SONGS_QUERY","Songs","loading","error","data","songs","map","song","title"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,eAAe,GAAGD,GAAI;;;;;;;;;CAA5B;;AAWA,MAAME,KAAK,GAAG,CAAC,EAAD,KAAQ;AACpB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,eAAD,CAAzC;AACA,MAAIE,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,QAAME,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACC,KAAT,CAAvB,CAAd;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,KAAN,CAAP;AACD,CARD;;AAUA,eAAeJ,KAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst ALL_SONGS_QUERY = gql`\n  query ALL_SONGS_QUERY {\n    songs {\n      id\n      title\n      publisher\n      publishedDate\n    }\n  }\n`;\n\nconst Songs = ({}) => {\n  const { loading, error, data } = useQuery(ALL_SONGS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const songs = data.songs.map(song => <p>{song.title}</p>);\n\n  return <div>{songs}</div>;\n};\n\nexport default Songs;\n"]},"metadata":{},"sourceType":"module"}