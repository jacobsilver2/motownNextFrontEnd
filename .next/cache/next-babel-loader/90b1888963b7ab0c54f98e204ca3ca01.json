{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Songs.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = \", \", $sortBy: SongOrderByInput!) {\\n    songs(where: {OR: [{title_starts_with: \\\"0\\\"},{title_starts_with: \\\"1\\\"},{title_starts_with: \\\"2\\\"},{title_starts_with: \\\"3\\\"},{title_starts_with: \\\"4\\\"},{title_starts_with: \\\"5\\\"},{title_starts_with: \\\"6\\\"},{title_starts_with: \\\"7\\\"},{title_starts_with: \\\"8\\\"},{title_starts_with: \\\"9\\\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      publisher\\n      publishedDate\\n      composer {\\n        name\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SONGS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = \", \", $letter: String, $sortBy: SongOrderByInput!) {\\n    songs(where: {title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      publisher\\n      publishedDate\\n      composer {\\n        name\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SONGS_QUERY($skip: Int = 0, $first: Int = \", \", $sortBy: SongOrderByInput!) {\\n    songs(first: $first, skip: $skip, orderBy: $sortBy ) {\\n      id\\n      title\\n      publisher\\n      publishedDate\\n      composer {\\n        name\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport Router from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport { perPage } from \"../config\";\nimport Song from \"../components/Song\";\nimport Pagination from \"../components/Pagination\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport sortBySelectItems from \"../lib/songsSortBySelectItems\";\nimport Center from \"./styles/Center\";\nimport MultiList from \"./styles/Multilist\";\nimport customTheme from \"./styles/reactSelectTheme\";\nexport var ALL_SONGS_QUERY = gql(_templateObject(), perPage);\nexport var ALL_SONGS_BEGINNING_WITH_QUERY = gql(_templateObject2(), perPage);\nexport var ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY = gql(_templateObject3(), perPage);\n\nvar Songs = function Songs(_ref) {\n  var page = _ref.page;\n\n  var _useState = useState(\"\"),\n      letter = _useState[0],\n      setLetter = _useState[1];\n\n  var _useState2 = useState(\"title_ASC\"),\n      sortBy = _useState2[0],\n      setSortBy = _useState2[1];\n\n  var _useQuery = useQuery(ALL_SONGS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      allSongsLoading = _useQuery.loading,\n      allSongsError = _useQuery.error,\n      allSongsData = _useQuery.data;\n\n  var _useQuery2 = useQuery(ALL_SONGS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter: letter,\n      sortBy: sortBy\n    }\n  }),\n      songsBeginningWithLoading = _useQuery2.loading,\n      songsBeginningWithError = _useQuery2.error,\n      songsBeginningWithData = _useQuery2.data;\n\n  var _useQuery3 = useQuery(ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      songsBeginningWithNumberLoading = _useQuery3.loading,\n      songsBeginningWithNumberError = _useQuery3.error,\n      songsBeginningWithNumberData = _useQuery3.data;\n\n  if (allSongsLoading || songsBeginningWithLoading || songsBeginningWithNumberLoading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Loading...\");\n  if (allSongsError || songsBeginningWithError || songsBeginningWithNumberError) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Error :(\");\n  var songs = \"\";\n\n  if (!letter) {\n    songs = allSongsData.songs.map(function (song) {\n      return __jsx(Song, {\n        key: song.id,\n        song: song,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      });\n    });\n  } else if (letter === \"#\") {\n    songs = songsBeginningWithNumberData.songs.map(function (song) {\n      return __jsx(Song, {\n        key: song.id,\n        song: song,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    });\n  } else {\n    songs = songsBeginningWithData.songs.map(function (song) {\n      return __jsx(Song, {\n        key: song.id,\n        song: song,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      });\n    });\n  }\n\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZWithNumber,\n    onChange: function onChange(e) {\n      setLetter(e.value);\n      Router.push({\n        pathname: \"/songs\",\n        query: {\n          page: 1\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), __jsx(Select, {\n    className: true,\n    options: sortBySelectItems,\n    theme: customTheme,\n    placeholder: \"Sort by \".concat(getSelectLabel(sortBySelectItems, sortBy)),\n    onChange: function onChange(e) {\n      return setSortBy(e.value);\n    },\n    isSearchable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), __jsx(Pagination, {\n    page: page,\n    model: \"songs\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), __jsx(MultiList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, songs), __jsx(Pagination, {\n    page: page,\n    model: \"songs\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }));\n};\n\nexport default Songs;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Songs.js"],"names":["React","useState","Router","useQuery","gql","Select","makeAnimated","perPage","Song","Pagination","SelectButton","selectButtonsAthruZWithNumber","sortBySelectItems","Center","MultiList","customTheme","ALL_SONGS_QUERY","ALL_SONGS_BEGINNING_WITH_QUERY","ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY","Songs","page","letter","setLetter","sortBy","setSortBy","variables","skip","first","allSongsLoading","loading","allSongsError","error","allSongsData","data","songsBeginningWithLoading","songsBeginningWithError","songsBeginningWithData","songsBeginningWithNumberLoading","songsBeginningWithNumberError","songsBeginningWithNumberData","songs","map","song","id","e","value","push","pathname","query","getSelectLabel"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Router from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\n\nimport { perPage } from \"../config\";\nimport Song from \"../components/Song\";\nimport Pagination from \"../components/Pagination\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport sortBySelectItems from \"../lib/songsSortBySelectItems\";\nimport Center from \"./styles/Center\";\nimport MultiList from \"./styles/Multilist\";\nimport customTheme from \"./styles/reactSelectTheme\";\n\nexport const ALL_SONGS_QUERY = gql`\n  query ALL_SONGS_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: SongOrderByInput!) {\n    songs(first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      title\n      publisher\n      publishedDate\n      composer {\n        name\n        id\n      }\n    }\n  }\n`;\n\nexport const ALL_SONGS_BEGINNING_WITH_QUERY = gql`\n  query ALL_SONGS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: SongOrderByInput!) {\n    songs(where: {title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      publisher\n      publishedDate\n      composer {\n        name\n        id\n      }\n    }\n  }\n`;\nexport const ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY = gql`\n  query ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: SongOrderByInput!) {\n    songs(where: {OR: [{title_starts_with: \"0\"},{title_starts_with: \"1\"},{title_starts_with: \"2\"},{title_starts_with: \"3\"},{title_starts_with: \"4\"},{title_starts_with: \"5\"},{title_starts_with: \"6\"},{title_starts_with: \"7\"},{title_starts_with: \"8\"},{title_starts_with: \"9\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      publisher\n      publishedDate\n      composer {\n        name\n        id\n      }\n    }\n  }\n`;\n\nconst Songs = ({ page }) => {\n  const [letter, setLetter] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"title_ASC\");\n  const {\n    loading: allSongsLoading,\n    error: allSongsError,\n    data: allSongsData,\n  } = useQuery(ALL_SONGS_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage, sortBy },\n  });\n  const {\n    loading: songsBeginningWithLoading,\n    error: songsBeginningWithError,\n    data: songsBeginningWithData,\n  } = useQuery(ALL_SONGS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy,\n    },\n  });\n  const {\n    loading: songsBeginningWithNumberLoading,\n    error: songsBeginningWithNumberError,\n    data: songsBeginningWithNumberData,\n  } = useQuery(ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy,\n    },\n  });\n\n  if (\n    allSongsLoading ||\n    songsBeginningWithLoading ||\n    songsBeginningWithNumberLoading\n  )\n    return <p>Loading...</p>;\n  if (allSongsError || songsBeginningWithError || songsBeginningWithNumberError)\n    return <p>Error :(</p>;\n\n  let songs = \"\";\n  if (!letter) {\n    songs = allSongsData.songs.map((song) => (\n      <Song key={song.id} song={song} />\n    ));\n  } else if (letter === \"#\") {\n    songs = songsBeginningWithNumberData.songs.map((song) => (\n      <Song key={song.id} song={song} />\n    ));\n  } else {\n    songs = songsBeginningWithData.songs.map((song) => (\n      <Song key={song.id} song={song} />\n    ));\n  }\n\n  return (\n    <Center>\n      <SelectButton\n        value={letter}\n        options={selectButtonsAthruZWithNumber}\n        onChange={(e) => {\n          setLetter(e.value);\n          Router.push({ pathname: \"/songs\", query: { page: 1 } });\n        }}\n      />\n      <br />\n      <Select\n        className\n        options={sortBySelectItems}\n        theme={customTheme}\n        placeholder={`Sort by ${getSelectLabel(sortBySelectItems, sortBy)}`}\n        onChange={(e) => setSortBy(e.value)}\n        isSearchable\n      />\n      {/* <StyledDropdown\n        value={sortBy}\n        options={sortBySelectItems}\n        onChange={(e) => setSortBy(e.value)}\n        placeholder=\"Sort By…\"\n      /> */}\n      <br />\n      <Pagination page={page} model=\"songs\" letter={letter} />\n      <MultiList>{songs}</MultiList>\n      <Pagination page={page} model=\"songs\" letter={letter} />\n    </Center>\n  );\n};\n\nexport default Songs;\n"]},"metadata":{},"sourceType":"module"}