{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Pagination.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PAGINATION_QUERY {\\n    songsConnection {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\";\nvar PAGINATION_QUERY = gql(_templateObject());\n\nvar Pagination = function Pagination(_ref) {\n  var page = _ref.page;\n\n  var _useQuery = useQuery(PAGINATION_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Error!\");\n  var count = data.songsConnection.aggregate.count;\n  var pages = Math.ceil(count / perPage);\n  return __jsx(PaginationStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Page \", page, \" of \", pages));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Pagination.js"],"names":["React","gql","useQuery","PaginationStyles","perPage","PAGINATION_QUERY","Pagination","page","loading","error","data","count","songsConnection","aggregate","pages","Math","ceil"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,IAAMC,gBAAgB,GAAGJ,GAAH,mBAAtB;;AAUA,IAAMK,UAAU,GAAG,SAAbA,UAAa,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACEL,QAAQ,CAACG,gBAAD,CADV;AAAA,MACvBG,OADuB,aACvBA,OADuB;AAAA,MACdC,KADc,aACdA,KADc;AAAA,MACPC,IADO,aACPA,IADO;;AAE/B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACX,MAAME,KAAK,GAAGD,IAAI,CAACE,eAAL,CAAqBC,SAArB,CAA+BF,KAA7C;AACA,MAAMG,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGP,OAAlB,CAAd;AACA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQG,IADR,UACkBO,KADlB,CADF,CADF;AAOD,CAbD;;AAeA,eAAeR,UAAf","sourcesContent":["import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\";\n\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    songsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = ({ page }) => {\n  const { loading, error, data } = useQuery(PAGINATION_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error!</p>;\n  const count = data.songsConnection.aggregate.count;\n  const pages = Math.ceil(count / perPage);\n  return (\n    <PaginationStyles>\n      <p>\n        Page {page} of {pages}\n      </p>\n    </PaginationStyles>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}