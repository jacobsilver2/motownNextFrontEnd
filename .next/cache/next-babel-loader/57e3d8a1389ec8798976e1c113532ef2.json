{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Album.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport formatDate from \"../lib/formatDate\";\nimport Link from \"next/link\";\nimport { Card } from \"primereact/card\";\nimport { Button } from \"primereact/button\";\nimport { CURRENT_USER_QUERY } from \"./Nav\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport styled from \"styled-components\";\nconst StyledFooter = styled.div.withConfig({\n  displayName: \"Album__StyledFooter\",\n  componentId: \"f8g7qf-0\"\n})([\"display:flex;justify-content:space-evenly;\"]);\nconst StyledFlexStart = styled.div.withConfig({\n  displayName: \"Album__StyledFlexStart\",\n  componentId: \"f8g7qf-1\"\n})([\"align-self:center;\"]);\nconst StlyedFlexEnd = styled.div.withConfig({\n  displayName: \"Album__StlyedFlexEnd\",\n  componentId: \"f8g7qf-2\"\n})([\"align-self:flex-end;\"]);\nexport const ADD_TO_LOCAL_ID_SELECTION_MUTATION = gql`\n  mutation($id: String!) {\n    addToLocalIdSelection(id: $id) @client\n  }\n`;\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    selectedIds @client\n  }\n`;\n\nconst Album = ({\n  album,\n  addToCheckedItemsList,\n  checkedItems\n}) => {\n  const {\n    0: checked,\n    1: setIsChecked\n  } = useState(false);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(CURRENT_USER_QUERY);\n  const {\n    loading: localStateQueryLoading,\n    error: localStateQueryError,\n    data: localStateQueryData\n  } = useQuery(LOCAL_STATE_QUERY);\n  const [addToLocalIdSelectionMutation, {\n    loading: addToLocalIdSelectionMutationLoading,\n    error: addToLocalIdSelectionMutationError\n  }] = useMutation(ADD_TO_LOCAL_ID_SELECTION_MUTATION); // function handleChecked(e) {\n  //   setIsChecked(e.checked);\n  //   if (e.checked) {\n  //     addToCheckedItemsList([...checkedItems, album.id]);\n  //   }\n  //   if (!e.checked) {\n  //     const newCheckedItems = checkedItems.filter((item) => item !== album.id);\n  //     addToCheckedItemsList([...newCheckedItems]);\n  //   }\n  // }\n\n  function handleChecked(e) {\n    if (e.checked) {\n      addToLocalIdSelectionMutation({\n        variables: {\n          id: album.id\n        }\n      });\n    }\n\n    if (!e.checked) {\n      console.log(\"you done unchecked this box\");\n    }\n  }\n\n  function isChecked(id) {\n    return localStateQueryData.selectedIds.includes(id);\n  }\n\n  const footer = data.me ? __jsx(StyledFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(StyledFlexStart, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: {\n      pathname: \"/updatealbum\",\n      query: {\n        id: album.id\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(Button, {\n    label: \"Edit\",\n    icon: \"pi pi-pencil\",\n    style: {\n      marginRight: \".25em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })))), __jsx(StlyedFlexEnd, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    onChange: e => handleChecked(e),\n    checked: isChecked(album.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), __jsx(Button, {\n    label: \"Add to apollo local state\",\n    onClick: () => addToLocalIdSelectionMutation({\n      variables: {\n        id: album.id\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }))) : null;\n\n  const title = __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: {\n      pathname: \"/album\",\n      query: {\n        id: album.id\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, album.title || \"no title\")));\n\n  const artists = album.artists && album.artists.map((artist, index) => __jsx(\"span\", {\n    key: artist.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: {\n      pathname: \"/artist\",\n      query: {\n        id: artist.id\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, artist.name)), album.artists.length === index + 1 ? \" \" : \", \"));\n  return __jsx(Card, {\n    title: title,\n    footer: footer,\n    subTitle: album.releaseDate ? `released ${formatDate(album.releaseDate)}` : \"no release date information\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, album.single && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Single\"), album.format && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Format: \", album.format), album.catalogNumber && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Catalog #: \", album.catalogNumber), artists);\n};\n\nexport default Album;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Album.js"],"names":["React","useState","useQuery","useMutation","gql","formatDate","Link","Card","Button","CURRENT_USER_QUERY","Checkbox","styled","StyledFooter","div","StyledFlexStart","StlyedFlexEnd","ADD_TO_LOCAL_ID_SELECTION_MUTATION","LOCAL_STATE_QUERY","Album","album","addToCheckedItemsList","checkedItems","checked","setIsChecked","loading","error","data","localStateQueryLoading","localStateQueryError","localStateQueryData","addToLocalIdSelectionMutation","addToLocalIdSelectionMutationLoading","addToLocalIdSelectionMutationError","handleChecked","e","variables","id","console","log","isChecked","selectedIds","includes","footer","me","pathname","query","marginRight","title","artists","map","artist","index","name","length","releaseDate","single","format","catalogNumber"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,kDAAlB;AAKA,MAAMC,eAAe,GAAGH,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,0BAArB;AAIA,MAAME,aAAa,GAAGJ,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,4BAAnB;AAIA,OAAO,MAAMG,kCAAkC,GAAGZ,GAAI;;;;CAA/C;AAMP,OAAO,MAAMa,iBAAiB,GAAGb,GAAI;;;;CAA9B;;AAMP,MAAMc,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,qBAAT;AAAgCC,EAAAA;AAAhC,CAAD,KAAoD;AAChE,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAA0BtB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEuB,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BxB,QAAQ,CAACO,kBAAD,CAAzC;AACA,QAAM;AACJe,IAAAA,OAAO,EAAEG,sBADL;AAEJF,IAAAA,KAAK,EAAEG,oBAFH;AAGJF,IAAAA,IAAI,EAAEG;AAHF,MAIF3B,QAAQ,CAACe,iBAAD,CAJZ;AAKA,QAAM,CACJa,6BADI,EAEJ;AACEN,IAAAA,OAAO,EAAEO,oCADX;AAEEN,IAAAA,KAAK,EAAEO;AAFT,GAFI,IAMF7B,WAAW,CAACa,kCAAD,CANf,CARgE,CAehE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASiB,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,QAAIA,CAAC,CAACZ,OAAN,EAAe;AACbQ,MAAAA,6BAA6B,CAAC;AAAEK,QAAAA,SAAS,EAAE;AAAEC,UAAAA,EAAE,EAAEjB,KAAK,CAACiB;AAAZ;AAAb,OAAD,CAA7B;AACD;;AACD,QAAI,CAACF,CAAC,CAACZ,OAAP,EAAgB;AACde,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;;AAED,WAASC,SAAT,CAAmBH,EAAnB,EAAuB;AACrB,WAAOP,mBAAmB,CAACW,WAApB,CAAgCC,QAAhC,CAAyCL,EAAzC,CAAP;AACD;;AAED,QAAMM,MAAM,GAAGhB,IAAI,CAACiB,EAAL,GACb,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAEC,MAAAA,QAAQ,EAAE,cAAZ;AAA4BC,MAAAA,KAAK,EAAE;AAAET,QAAAA,EAAE,EAAEjB,KAAK,CAACiB;AAAZ;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,KAAK,EAAE;AAAEU,MAAAA,WAAW,EAAE;AAAf,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,EAYE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,QAAQ,EAAGZ,CAAD,IAAOD,aAAa,CAACC,CAAD,CADhC;AAEE,IAAA,OAAO,EAAEK,SAAS,CAACpB,KAAK,CAACiB,EAAP,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,2BADR;AAEE,IAAA,OAAO,EAAE,MACPN,6BAA6B,CAAC;AAAEK,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAEjB,KAAK,CAACiB;AAAZ;AAAb,KAAD,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAZF,CADa,GA0BX,IA1BJ;;AA2BA,QAAMW,KAAK,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAEH,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,KAAK,EAAE;AAAET,QAAAA,EAAE,EAAEjB,KAAK,CAACiB;AAAZ;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIjB,KAAK,CAAC4B,KAAN,IAAe,UAAnB,CADF,CADF,CADF;;AAOA,QAAMC,OAAO,GACX7B,KAAK,CAAC6B,OAAN,IACA7B,KAAK,CAAC6B,OAAN,CAAcC,GAAd,CAAkB,CAACC,MAAD,EAASC,KAAT,KAChB;AAAM,IAAA,GAAG,EAAED,MAAM,CAACE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAER,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,KAAK,EAAE;AAAET,QAAAA,EAAE,EAAEc,MAAM,CAACd;AAAb;AAA9B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIc,MAAM,CAACE,IAAX,CADF,CADF,EAIGjC,KAAK,CAAC6B,OAAN,CAAcK,MAAd,KAAyBF,KAAK,GAAG,CAAjC,GAAqC,GAArC,GAA2C,IAJ9C,CADF,CAFF;AAUA,SACE,MAAC,IAAD;AACE,IAAA,KAAK,EAAEJ,KADT;AAEE,IAAA,MAAM,EAAEL,MAFV;AAGE,IAAA,QAAQ,EACNvB,KAAK,CAACmC,WAAN,GACK,YAAWjD,UAAU,CAACc,KAAK,CAACmC,WAAP,CAAoB,EAD9C,GAEI,6BANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGnC,KAAK,CAACoC,MAAN,IAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATnB,EAUGpC,KAAK,CAACqC,MAAN,IAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYrC,KAAK,CAACqC,MAAlB,CAVnB,EAWGrC,KAAK,CAACsC,aAAN,IAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAetC,KAAK,CAACsC,aAArB,CAX1B,EAYGT,OAZH,CADF;AAgBD,CAnGD;;AAqGA,eAAe9B,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport formatDate from \"../lib/formatDate\";\nimport Link from \"next/link\";\nimport { Card } from \"primereact/card\";\nimport { Button } from \"primereact/button\";\nimport { CURRENT_USER_QUERY } from \"./Nav\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport styled from \"styled-components\";\n\nconst StyledFooter = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst StyledFlexStart = styled.div`\n  align-self: center;\n`;\n\nconst StlyedFlexEnd = styled.div`\n  align-self: flex-end;\n`;\n\nexport const ADD_TO_LOCAL_ID_SELECTION_MUTATION = gql`\n  mutation($id: String!) {\n    addToLocalIdSelection(id: $id) @client\n  }\n`;\n\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    selectedIds @client\n  }\n`;\n\nconst Album = ({ album, addToCheckedItemsList, checkedItems }) => {\n  const [checked, setIsChecked] = useState(false);\n  const { loading, error, data } = useQuery(CURRENT_USER_QUERY);\n  const {\n    loading: localStateQueryLoading,\n    error: localStateQueryError,\n    data: localStateQueryData,\n  } = useQuery(LOCAL_STATE_QUERY);\n  const [\n    addToLocalIdSelectionMutation,\n    {\n      loading: addToLocalIdSelectionMutationLoading,\n      error: addToLocalIdSelectionMutationError,\n    },\n  ] = useMutation(ADD_TO_LOCAL_ID_SELECTION_MUTATION);\n  // function handleChecked(e) {\n  //   setIsChecked(e.checked);\n  //   if (e.checked) {\n  //     addToCheckedItemsList([...checkedItems, album.id]);\n  //   }\n  //   if (!e.checked) {\n  //     const newCheckedItems = checkedItems.filter((item) => item !== album.id);\n  //     addToCheckedItemsList([...newCheckedItems]);\n  //   }\n  // }\n\n  function handleChecked(e) {\n    if (e.checked) {\n      addToLocalIdSelectionMutation({ variables: { id: album.id } });\n    }\n    if (!e.checked) {\n      console.log(\"you done unchecked this box\");\n    }\n  }\n\n  function isChecked(id) {\n    return localStateQueryData.selectedIds.includes(id);\n  }\n\n  const footer = data.me ? (\n    <StyledFooter>\n      <StyledFlexStart>\n        <Link href={{ pathname: \"/updatealbum\", query: { id: album.id } }}>\n          <a>\n            <Button\n              label=\"Edit\"\n              icon=\"pi pi-pencil\"\n              style={{ marginRight: \".25em\" }}\n            />\n          </a>\n        </Link>\n      </StyledFlexStart>\n      <StlyedFlexEnd>\n        <Checkbox\n          onChange={(e) => handleChecked(e)}\n          checked={isChecked(album.id)}\n        />\n        <Button\n          label=\"Add to apollo local state\"\n          onClick={() =>\n            addToLocalIdSelectionMutation({ variables: { id: album.id } })\n          }\n        />\n      </StlyedFlexEnd>\n    </StyledFooter>\n  ) : null;\n  const title = (\n    <span>\n      <Link href={{ pathname: \"/album\", query: { id: album.id } }}>\n        <a>{album.title || \"no title\"}</a>\n      </Link>\n    </span>\n  );\n  const artists =\n    album.artists &&\n    album.artists.map((artist, index) => (\n      <span key={artist.name}>\n        <Link href={{ pathname: \"/artist\", query: { id: artist.id } }}>\n          <a>{artist.name}</a>\n        </Link>\n        {album.artists.length === index + 1 ? \" \" : \", \"}\n      </span>\n    ));\n  return (\n    <Card\n      title={title}\n      footer={footer}\n      subTitle={\n        album.releaseDate\n          ? `released ${formatDate(album.releaseDate)}`\n          : \"no release date information\"\n      }\n    >\n      {album.single && <p>Single</p>}\n      {album.format && <p>Format: {album.format}</p>}\n      {album.catalogNumber && <p>Catalog #: {album.catalogNumber}</p>}\n      {artists}\n    </Card>\n  );\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}