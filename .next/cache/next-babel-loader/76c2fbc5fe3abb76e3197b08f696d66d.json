{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Albums.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = \", \", $sortBy: AlbumOrderByInput!) {\\n    albums(where: {single: false, OR: [{title_starts_with: \\\"0\\\"},{title_starts_with: \\\"1\\\"},{title_starts_with: \\\"2\\\"},{title_starts_with: \\\"3\\\"},{title_starts_with: \\\"4\\\"},{title_starts_with: \\\"5\\\"},{title_starts_with: \\\"6\\\"},{title_starts_with: \\\"7\\\"},{title_starts_with: \\\"8\\\"},{title_starts_with: \\\"9\\\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      catalogNumber\\n      single\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ALBUMS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = \", \", $letter: String, $sortBy: AlbumOrderByInput!) {\\n    albums(where: {single: false, title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      catalogNumber\\n      single\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ALBUMS_QUERY($first: Int = \", \", $skip: Int = 0, $sortBy: AlbumOrderByInput!) {\\n    albums(where: {single: false}, first: $first, skip: $skip, orderBy: $sortBy ) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      catalogNumber\\n      single\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Router from \"next/router\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport MultiList from \"./styles/Multilist\";\nimport Center from \"./styles/Center\";\nimport customTheme from \"./styles/reactSelectTheme\";\nimport getSelectLabel from \"../lib/sortByOptions/sortBySelectReturnLabel\";\nexport var ALL_ALBUMS_QUERY = gql(_templateObject(), perPage);\nexport var ALL_ALBUMS_BEGINNING_WITH_QUERY = gql(_templateObject2(), perPage);\nexport var ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY = gql(_templateObject3(), perPage);\n\nvar Albums = function Albums(_ref) {\n  var page = _ref.page;\n\n  var _useState = useState(\"\"),\n      letter = _useState[0],\n      setLetter = _useState[1];\n\n  var _useState2 = useState(\"title_ASC\"),\n      sortBy = _useState2[0],\n      setSortBy = _useState2[1];\n\n  var _useState3 = useState([]),\n      checkedItems = _useState3[0],\n      setCheckedItems = _useState3[1];\n\n  var _useQuery = useQuery(ALL_ALBUMS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      allAlbumsLoading = _useQuery.loading,\n      allAlbumsError = _useQuery.error,\n      allAlbumsData = _useQuery.data;\n\n  var _useQuery2 = useQuery(ALL_ALBUMS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter: letter,\n      sortBy: sortBy\n    }\n  }),\n      albumsBeginningWithLoading = _useQuery2.loading,\n      albumsBeginningWithError = _useQuery2.error,\n      albumsBeginningWithData = _useQuery2.data;\n\n  var _useQuery3 = useQuery(ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      albumsBeginningWithNumberLoading = _useQuery3.loading,\n      albumsBeginningWithNumberError = _useQuery3.error,\n      albumsBeginningWithNumberData = _useQuery3.data;\n\n  if (albumsBeginningWithLoading || allAlbumsLoading || albumsBeginningWithNumberLoading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Loading...\");\n  if (albumsBeginningWithError || allAlbumsError || albumsBeginningWithNumberError) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Error :(\");\n\n  function getAlbums() {\n    if (letter === \"\" || !letter) {\n      return allAlbumsData.albums.map(function (album) {\n        return __jsx(Album, {\n          addToCheckedItemsList: setCheckedItems,\n          checkedItems: checkedItems,\n          key: album.id,\n          album: album,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        });\n      });\n    } else if (letter === \"#\") {\n      return albumsBeginningWithNumberData.albums.map(function (album) {\n        return __jsx(Album, {\n          key: album.id,\n          album: album,\n          addToCheckedItemsList: setCheckedItems,\n          checkedItems: checkedItems,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        });\n      });\n    } else {\n      return albumsBeginningWithData.albums.map(function (album) {\n        return __jsx(Album, {\n          key: album.id,\n          album: album,\n          addToCheckedItemsList: setCheckedItems,\n          checkedItems: checkedItems,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        });\n      });\n    }\n  }\n\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZWithNumber,\n    onChange: function onChange(e) {\n      setLetter(e.value);\n      Router.push({\n        pathname: \"/albums\",\n        query: {\n          page: 1\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), __jsx(Pagination, {\n    page: page,\n    model: \"albums\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), __jsx(MultiList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, getAlbums()), __jsx(Pagination, {\n    page: page,\n    model: \"albums\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }));\n};\n\nexport default Albums;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Albums.js"],"names":["React","useState","useQuery","useMutation","Router","gql","styled","Album","Pagination","perPage","SelectButton","selectButtonsAthruZWithNumber","MultiList","Center","customTheme","getSelectLabel","ALL_ALBUMS_QUERY","ALL_ALBUMS_BEGINNING_WITH_QUERY","ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY","Albums","page","letter","setLetter","sortBy","setSortBy","checkedItems","setCheckedItems","variables","skip","first","allAlbumsLoading","loading","allAlbumsError","error","allAlbumsData","data","albumsBeginningWithLoading","albumsBeginningWithError","albumsBeginningWithData","albumsBeginningWithNumberLoading","albumsBeginningWithNumberError","albumsBeginningWithNumberData","getAlbums","albums","map","album","id","e","value","push","pathname","query"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Router from \"next/router\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport MultiList from \"./styles/Multilist\";\nimport Center from \"./styles/Center\";\nimport customTheme from \"./styles/reactSelectTheme\";\nimport getSelectLabel from \"../lib/sortByOptions/sortBySelectReturnLabel\";\n\nexport const ALL_ALBUMS_QUERY = gql`\n  query ALL_ALBUMS_QUERY($first: Int = ${perPage}, $skip: Int = 0, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: false}, first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ALL_ALBUMS_BEGINNING_WITH_QUERY = gql`\n  query ALL_ALBUMS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: false, title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY = gql`\n  query ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: false, OR: [{title_starts_with: \"0\"},{title_starts_with: \"1\"},{title_starts_with: \"2\"},{title_starts_with: \"3\"},{title_starts_with: \"4\"},{title_starts_with: \"5\"},{title_starts_with: \"6\"},{title_starts_with: \"7\"},{title_starts_with: \"8\"},{title_starts_with: \"9\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst Albums = ({ page }) => {\n  const [letter, setLetter] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"title_ASC\");\n  const [checkedItems, setCheckedItems] = useState([]);\n\n  const {\n    loading: allAlbumsLoading,\n    error: allAlbumsError,\n    data: allAlbumsData,\n  } = useQuery(ALL_ALBUMS_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage, sortBy },\n  });\n  const {\n    loading: albumsBeginningWithLoading,\n    error: albumsBeginningWithError,\n    data: albumsBeginningWithData,\n  } = useQuery(ALL_ALBUMS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy,\n    },\n  });\n  const {\n    loading: albumsBeginningWithNumberLoading,\n    error: albumsBeginningWithNumberError,\n    data: albumsBeginningWithNumberData,\n  } = useQuery(ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy,\n    },\n  });\n  if (\n    albumsBeginningWithLoading ||\n    allAlbumsLoading ||\n    albumsBeginningWithNumberLoading\n  )\n    return <p>Loading...</p>;\n  if (\n    albumsBeginningWithError ||\n    allAlbumsError ||\n    albumsBeginningWithNumberError\n  )\n    return <p>Error :(</p>;\n\n  function getAlbums() {\n    if (letter === \"\" || !letter) {\n      return allAlbumsData.albums.map((album) => (\n        <Album\n          addToCheckedItemsList={setCheckedItems}\n          checkedItems={checkedItems}\n          key={album.id}\n          album={album}\n        />\n      ));\n    } else if (letter === \"#\") {\n      return albumsBeginningWithNumberData.albums.map((album) => (\n        <Album\n          key={album.id}\n          album={album}\n          addToCheckedItemsList={setCheckedItems}\n          checkedItems={checkedItems}\n        />\n      ));\n    } else {\n      return albumsBeginningWithData.albums.map((album) => (\n        <Album\n          key={album.id}\n          album={album}\n          addToCheckedItemsList={setCheckedItems}\n          checkedItems={checkedItems}\n        />\n      ));\n    }\n  }\n\n  return (\n    <Center>\n      <SelectButton\n        value={letter}\n        options={selectButtonsAthruZWithNumber}\n        onChange={(e) => {\n          setLetter(e.value);\n          Router.push({ pathname: \"/albums\", query: { page: 1 } });\n        }}\n      />\n      <br />\n      {/* <StyledDropdown\n        value={sortBy}\n        options={sortBySelectItems}\n        onChange={(e) => setSortBy(e.value)}\n        placeholder=\"Sort By…\"\n      /> */}\n      <br />\n      <Pagination page={page} model=\"albums\" letter={letter} />\n      <MultiList>{getAlbums()}</MultiList>\n      <Pagination page={page} model=\"albums\" letter={letter} />\n    </Center>\n  );\n};\n\nexport default Albums;\n"]},"metadata":{},"sourceType":"module"}