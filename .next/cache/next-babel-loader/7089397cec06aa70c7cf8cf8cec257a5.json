{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Songs.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  text-align: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SONGS_QUERY {\\n    songs {\\n      id\\n      title\\n      publisher\\n      publishedDate\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nvar ALL_SONGS_QUERY = gql(_templateObject());\nvar Center = styled.div(_templateObject2());\n\nvar Songs = function Songs(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useQuery = useQuery(ALL_SONGS_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Error :(\");\n  var songs = data.songs.map(function (song) {\n    return __jsx(\"p\", {\n      key: song.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, song.title);\n  });\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"I found \", songs.length, \" songs.\"), songs);\n};\n\nexport default Songs;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Songs.js"],"names":["React","useQuery","gql","styled","ALL_SONGS_QUERY","Center","div","Songs","loading","error","data","songs","map","song","id","title","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,eAAe,GAAGF,GAAH,mBAArB;AAWA,IAAMG,MAAM,GAAGF,MAAM,CAACG,GAAV,oBAAZ;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAQ;AAAA;;AAAA,kBACaN,QAAQ,CAACG,eAAD,CADrB;AAAA,MACZI,OADY,aACZA,OADY;AAAA,MACHC,KADG,aACHA,KADG;AAAA,MACIC,IADJ,aACIA,IADJ;;AAEpB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,MAAME,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI;AAAA,WAAI;AAAG,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBD,IAAI,CAACE,KAAvB,CAAJ;AAAA,GAAnB,CAAd;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYJ,KAAK,CAACK,MAAlB,YADF,EAEGL,KAFH,CADF;AAMD,CAbD;;AAeA,eAAeJ,KAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\n\nconst ALL_SONGS_QUERY = gql`\n  query ALL_SONGS_QUERY {\n    songs {\n      id\n      title\n      publisher\n      publishedDate\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst Songs = ({}) => {\n  const { loading, error, data } = useQuery(ALL_SONGS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const songs = data.songs.map(song => <p key={song.id}>{song.title}</p>);\n\n  return (\n    <Center>\n      <p>I found {songs.length} songs.</p>\n      {songs}\n    </Center>\n  );\n};\n\nexport default Songs;\n"]},"metadata":{},"sourceType":"module"}