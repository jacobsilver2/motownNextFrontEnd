{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Songs.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = \", \", $sortBy: SongOrderByInput!) {\\n    songs(where: {OR: [{title_starts_with: '0'},{title_starts_with: '1'},{title_starts_with: '2'},{title_starts_with: '3'},{title_starts_with: '4'},{title_starts_with: '5'},{title_starts_with: '6'},{title_starts_with: '7'},{title_starts_with: '8'},{title_starts_with: '9'}]}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      publisher\\n      publishedDate\\n      composer {\\n        name\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SONGS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = \", \", $letter: String, $sortBy: SongOrderByInput!) {\\n    songs(where: {title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      publisher\\n      publishedDate\\n      composer {\\n        name\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SONGS_QUERY($skip: Int = 0, $first: Int = \", \", $sortBy: SongOrderByInput!) {\\n    songs(first: $first, skip: $skip, orderBy: $sortBy ) {\\n      id\\n      title\\n      publisher\\n      publishedDate\\n      composer {\\n        name\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useState } from \"react\";\nimport Router from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Song from \"../components/Song\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport { StyledDropdown } from \"./Albums\";\nexport var ALL_SONGS_QUERY = gql(_templateObject(), perPage);\nexport var ALL_SONGS_BEGINNING_WITH_QUERY = gql(_templateObject2(), perPage);\nexport var ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY = gql(_templateObject3(), perPage);\nvar Center = styled.div.withConfig({\n  displayName: \"Songs__Center\",\n  componentId: \"sc-16ll7z0-0\"\n})([\"text-align:center;\"]);\nvar SongsList = styled.div.withConfig({\n  displayName: \"Songs__SongsList\",\n  componentId: \"sc-16ll7z0-1\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;max-width:\", \";margin:0 auto;\"], function (props) {\n  return props.theme.maxWidth;\n});\nvar sortBySelectItems = [{\n  label: \"Title, ascending\",\n  value: \"title_ASC\"\n}, {\n  label: \"Title, descending\",\n  value: \"title_DESC\"\n}, {\n  label: \"Publisher, ascending\",\n  value: \"publisher_ASC\"\n}, {\n  label: \"Publisher, descending\",\n  value: \"publisher_DESC\"\n}, {\n  label: \"Published Date, ascending\",\n  value: \"publishedDate_ASC\"\n}, {\n  label: \"Published Date, descending\",\n  value: \"publishedDate_DESC\"\n}];\n\nvar Songs = function Songs(_ref) {\n  var page = _ref.page;\n\n  var _useState = useState(\"\"),\n      letter = _useState[0],\n      setLetter = _useState[1];\n\n  var _useState2 = useState(\"title_ASC\"),\n      sortBy = _useState2[0],\n      setSortBy = _useState2[1];\n\n  var _useQuery = useQuery(ALL_SONGS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      allSongsLoading = _useQuery.loading,\n      allSongsError = _useQuery.error,\n      allSongsData = _useQuery.data;\n\n  var _useQuery2 = useQuery(ALL_SONGS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter: letter,\n      sortBy: sortBy\n    }\n  }),\n      songsBeginningWithLoading = _useQuery2.loading,\n      songsBeginningWithError = _useQuery2.error,\n      songsBeginningWithData = _useQuery2.data;\n\n  var _useQuery3 = useQuery(ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      songsBeginningWithNumberLoading = _useQuery3.loading,\n      songsBeginningWithNumberError = _useQuery3.error,\n      songsBeginningWithNumberData = _useQuery3.data;\n\n  if (allSongsLoading || songsBeginningWithLoading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Loading...\");\n  if (allSongsError || songsBeginningWithError) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Error :(\");\n  var songs = \"\";\n\n  if (!letter) {\n    songs = allSongsData.songs.map(function (song) {\n      return __jsx(Song, {\n        key: song.id,\n        song: song,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    });\n  } else if (letter === \"#\") {\n    songsBeginningWithNumberData.songs.map(function (song) {\n      return __jsx(Song, {\n        key: song.id,\n        song: song,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      });\n    });\n  } else {\n    songsBeginningWithData.songs.map(function (song) {\n      return __jsx(Song, {\n        key: song.id,\n        song: song,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      });\n    });\n  } // const songs = !letter\n  //   ? allSongsData.songs.map((song) => <Song key={song.id} song={song} />)\n  //   : songsBeginningWithData.songs.map((song) => (\n  //       <Song key={song.id} song={song} />\n  //     ));\n\n\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZWithNumber,\n    onChange: function onChange(e) {\n      setLetter(e.value);\n      Router.push({\n        pathname: \"/songs\",\n        query: {\n          page: 1\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), __jsx(StyledDropdown, {\n    value: sortBy,\n    options: sortBySelectItems,\n    onChange: function onChange(e) {\n      return setSortBy(e.value);\n    },\n    placeholder: \"Sort By\\u2026\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), __jsx(Pagination, {\n    page: page,\n    model: \"songs\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), __jsx(SongsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, songs), __jsx(Pagination, {\n    page: page,\n    model: \"songs\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }));\n};\n\nexport default Songs;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Songs.js"],"names":["React","Component","useState","Router","useQuery","gql","styled","Song","Pagination","perPage","SelectButton","Dropdown","selectButtonsAthruZWithNumber","StyledDropdown","ALL_SONGS_QUERY","ALL_SONGS_BEGINNING_WITH_QUERY","ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY","Center","div","SongsList","props","theme","maxWidth","sortBySelectItems","label","value","Songs","page","letter","setLetter","sortBy","setSortBy","variables","skip","first","allSongsLoading","loading","allSongsError","error","allSongsData","data","songsBeginningWithLoading","songsBeginningWithError","songsBeginningWithData","songsBeginningWithNumberLoading","songsBeginningWithNumberError","songsBeginningWithNumberData","songs","map","song","id","e","push","pathname","query"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport Router from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Song from \"../components/Song\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport { StyledDropdown } from \"./Albums\";\n\nexport const ALL_SONGS_QUERY = gql`\n  query ALL_SONGS_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: SongOrderByInput!) {\n    songs(first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      title\n      publisher\n      publishedDate\n      composer {\n        name\n        id\n      }\n    }\n  }\n`;\n\nexport const ALL_SONGS_BEGINNING_WITH_QUERY = gql`\n  query ALL_SONGS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: SongOrderByInput!) {\n    songs(where: {title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      publisher\n      publishedDate\n      composer {\n        name\n        id\n      }\n    }\n  }\n`;\nexport const ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY = gql`\n  query ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: SongOrderByInput!) {\n    songs(where: {OR: [{title_starts_with: '0'},{title_starts_with: '1'},{title_starts_with: '2'},{title_starts_with: '3'},{title_starts_with: '4'},{title_starts_with: '5'},{title_starts_with: '6'},{title_starts_with: '7'},{title_starts_with: '8'},{title_starts_with: '9'}]}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      publisher\n      publishedDate\n      composer {\n        name\n        id\n      }\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst SongsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${(props) => props.theme.maxWidth};\n  margin: 0 auto;\n`;\n\nconst sortBySelectItems = [\n  { label: \"Title, ascending\", value: \"title_ASC\" },\n  { label: \"Title, descending\", value: \"title_DESC\" },\n  { label: \"Publisher, ascending\", value: \"publisher_ASC\" },\n  { label: \"Publisher, descending\", value: \"publisher_DESC\" },\n  { label: \"Published Date, ascending\", value: \"publishedDate_ASC\" },\n  { label: \"Published Date, descending\", value: \"publishedDate_DESC\" },\n];\n\nconst Songs = ({ page }) => {\n  const [letter, setLetter] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"title_ASC\");\n  const {\n    loading: allSongsLoading,\n    error: allSongsError,\n    data: allSongsData,\n  } = useQuery(ALL_SONGS_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage, sortBy },\n  });\n  const {\n    loading: songsBeginningWithLoading,\n    error: songsBeginningWithError,\n    data: songsBeginningWithData,\n  } = useQuery(ALL_SONGS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy,\n    },\n  });\n  const {\n    loading: songsBeginningWithNumberLoading,\n    error: songsBeginningWithNumberError,\n    data: songsBeginningWithNumberData,\n  } = useQuery(ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy,\n    },\n  });\n\n  if (allSongsLoading || songsBeginningWithLoading) return <p>Loading...</p>;\n  if (allSongsError || songsBeginningWithError) return <p>Error :(</p>;\n\n  let songs = \"\";\n  if (!letter) {\n    songs = allSongsData.songs.map((song) => (\n      <Song key={song.id} song={song} />\n    ));\n  } else if (letter === \"#\") {\n    songsBeginningWithNumberData.songs.map((song) => (\n      <Song key={song.id} song={song} />\n    ));\n  } else {\n    songsBeginningWithData.songs.map((song) => (\n      <Song key={song.id} song={song} />\n    ));\n  }\n\n  // const songs = !letter\n  //   ? allSongsData.songs.map((song) => <Song key={song.id} song={song} />)\n  //   : songsBeginningWithData.songs.map((song) => (\n  //       <Song key={song.id} song={song} />\n  //     ));\n\n  return (\n    <Center>\n      <SelectButton\n        value={letter}\n        options={selectButtonsAthruZWithNumber}\n        onChange={(e) => {\n          setLetter(e.value);\n          Router.push({ pathname: \"/songs\", query: { page: 1 } });\n        }}\n      />\n      <br />\n      <StyledDropdown\n        value={sortBy}\n        options={sortBySelectItems}\n        onChange={(e) => setSortBy(e.value)}\n        placeholder=\"Sort By…\"\n      />\n      <br />\n      <Pagination page={page} model=\"songs\" letter={letter} />\n      <SongsList>{songs}</SongsList>\n      <Pagination page={page} model=\"songs\" letter={letter} />\n    </Center>\n  );\n};\n\nexport default Songs;\n"]},"metadata":{},"sourceType":"module"}