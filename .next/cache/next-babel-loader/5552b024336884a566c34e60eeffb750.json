{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Pagination.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PAGINATION_QUERY {\\n    songsConnection {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\";\nvar PAGINATION_QUERY = gql(_templateObject());\n\nvar Pagination = function Pagination(_ref) {\n  var page = _ref.page,\n      model = _ref.model;\n\n  var _useQuery = useQuery(PAGINATION_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Error!\");\n  var count = data.songsConnection.aggregate.count;\n  var pages = Math.ceil(count / perPage);\n  return __jsx(PaginationStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Link, {\n    prefetch: true,\n    href: {\n      pathname: \"songs\",\n      query: {\n        page: page - 1\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"prev\",\n    \"aria-disabled\": page <= 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Prev\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Page \", page, \" of \", pages), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, count, \" Songs Total\"), __jsx(Link, {\n    prefetch: true,\n    href: {\n      pathname: \"songs\",\n      query: {\n        page: page + 1\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"next\",\n    \"aria-disabled\": page >= pages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Next\")));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Pagination.js"],"names":["React","gql","Link","useQuery","PaginationStyles","perPage","PAGINATION_QUERY","Pagination","page","model","loading","error","data","count","songsConnection","aggregate","pages","Math","ceil","pathname","query"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,IAAMC,gBAAgB,GAAGL,GAAH,mBAAtB;;AAUA,IAAMM,UAAU,GAAG,SAAbA,UAAa,OAAqB;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACLN,QAAQ,CAACG,gBAAD,CADH;AAAA,MAC9BI,OAD8B,aAC9BA,OAD8B;AAAA,MACrBC,KADqB,aACrBA,KADqB;AAAA,MACdC,IADc,aACdA,IADc;;AAEtC,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACX,MAAME,KAAK,GAAGD,IAAI,CAACE,eAAL,CAAqBC,SAArB,CAA+BF,KAA7C;AACA,MAAMG,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGR,OAAlB,CAAd;AACA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,QAAQ,MAAd;AAAe,IAAA,IAAI,EAAE;AAAEc,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,KAAK,EAAE;AAAEZ,QAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAA5B,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,qBAAeA,IAAI,IAAI,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQA,IADR,UACkBQ,KADlB,CANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAJ,iBATF,EAUE,MAAC,IAAD;AAAM,IAAA,QAAQ,MAAd;AAAe,IAAA,IAAI,EAAE;AAAEM,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,KAAK,EAAE;AAAEZ,QAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAA5B,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,qBAAeA,IAAI,IAAIQ,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAVF,CADF;AAkBD,CAxBD;;AA0BA,eAAeT,UAAf","sourcesContent":["import React from \"react\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\";\n\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    songsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = ({ page, model }) => {\n  const { loading, error, data } = useQuery(PAGINATION_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error!</p>;\n  const count = data.songsConnection.aggregate.count;\n  const pages = Math.ceil(count / perPage);\n  return (\n    <PaginationStyles>\n      <Link prefetch href={{ pathname: \"songs\", query: { page: page - 1 } }}>\n        <a className=\"prev\" aria-disabled={page <= 1}>\n          Prev\n        </a>\n      </Link>\n      <p>\n        Page {page} of {pages}\n      </p>\n      <p>{count} Songs Total</p>\n      <Link prefetch href={{ pathname: \"songs\", query: { page: page + 1 } }}>\n        <a className=\"next\" aria-disabled={page >= pages}>\n          Next\n        </a>\n      </Link>\n    </PaginationStyles>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}