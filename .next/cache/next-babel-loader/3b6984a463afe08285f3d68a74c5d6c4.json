{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Signin.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\\n    signin(email: $email, password: $password) {\\n      id\\n      email\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nimport { CURRENT_USER_QUERY } from \"./Nav\";\nvar SIGNIN_MUTATION = gql(_templateObject());\n\nvar Signin = function Signin() {\n  var _useState = useState({\n    name: \"\",\n    password: \"\",\n    email: \"\"\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useMutation = useMutation(SIGNIN_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signinMutation = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      mutationLoading = _useMutation2$.loading,\n      mutationError = _useMutation2$.error;\n\n  function saveToState(e) {\n    setState(_objectSpread({}, state, _defineProperty({}, e.target.name, e.target.value)));\n    console.log(state);\n  }\n\n  return __jsx(Form, {\n    method: \"post\",\n    onSubmit: function _callee(e) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(signinMutation({\n                variables: _objectSpread({}, state),\n                refetchQueries: [{\n                  query: CURRENT_USER_QUERY\n                }]\n              }));\n\n            case 3:\n              setState({\n                name: \"\",\n                email: \"\",\n                password: \"\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"fieldset\", {\n    disabled: mutationLoading,\n    \"aria-busy\": mutationLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Sign into your account\"), __jsx(Error, {\n    error: mutationError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Email\", __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"email\",\n    value: state.email,\n    onChange: saveToState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Password\", __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"password\",\n    value: state.password,\n    onChange: saveToState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Sign In!\")));\n};\n\nexport default Signin;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Signin.js"],"names":["React","useState","useMutation","gql","Form","Error","CURRENT_USER_QUERY","SIGNIN_MUTATION","Signin","name","password","email","state","setState","signinMutation","mutationLoading","loading","mutationError","error","saveToState","e","target","value","console","log","preventDefault","variables","refetchQueries","query"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,IAAMC,eAAe,GAAGJ,GAAH,mBAArB;;AAUA,IAAMK,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,kBACOP,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE,EAAtB;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GAAD,CADf;AAAA,MACZC,KADY;AAAA,MACLC,QADK;;AAAA,qBAKfX,WAAW,CAACK,eAAD,CALI;AAAA;AAAA,MAGjBO,cAHiB;AAAA;AAAA,MAINC,eAJM,kBAIfC,OAJe;AAAA,MAIkBC,aAJlB,kBAIWC,KAJX;;AAOnB,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtBP,IAAAA,QAAQ,mBAAMD,KAAN,sBAAcQ,CAAC,CAACC,MAAF,CAASZ,IAAvB,EAA8BW,CAAC,CAACC,MAAF,CAASC,KAAvC,GAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACD;;AAED,SACE,MAAC,IAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,QAAQ,EAAE,iBAAMQ,CAAN;AAAA;AAAA;AAAA;AAAA;AACRA,cAAAA,CAAC,CAACK,cAAF;AADQ;AAAA,+CAEFX,cAAc,CAAC;AACnBY,gBAAAA,SAAS,oBAAOd,KAAP,CADU;AAEnBe,gBAAAA,cAAc,EAAE,CAAC;AAAEC,kBAAAA,KAAK,EAAEtB;AAAT,iBAAD;AAFG,eAAD,CAFZ;;AAAA;AAMRO,cAAAA,QAAQ,CAAC;AAAEJ,gBAAAA,IAAI,EAAE,EAAR;AAAYE,gBAAAA,KAAK,EAAE,EAAnB;AAAuBD,gBAAAA,QAAQ,EAAE;AAAjC,eAAD,CAAR;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAU,IAAA,QAAQ,EAAEK,eAApB;AAAqC,iBAAWA,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEE,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,KAAK,EAAEL,KAAK,CAACD,KAJf;AAKE,IAAA,QAAQ,EAAEQ,WALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,EAaE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,KAAK,EAAEP,KAAK,CAACF,QAJf;AAKE,IAAA,QAAQ,EAAES,WALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbF,EAwBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF,CAXF,CADF;AAwCD,CApDD;;AAsDA,eAAeX,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nimport { CURRENT_USER_QUERY } from \"./Nav\";\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst Signin = () => {\n  const [state, setState] = useState({ name: \"\", password: \"\", email: \"\" });\n  const [\n    signinMutation,\n    { loading: mutationLoading, error: mutationError }\n  ] = useMutation(SIGNIN_MUTATION);\n\n  function saveToState(e) {\n    setState({ ...state, [e.target.name]: e.target.value });\n    console.log(state);\n  }\n\n  return (\n    <Form\n      method=\"post\"\n      onSubmit={async e => {\n        e.preventDefault();\n        await signinMutation({\n          variables: { ...state },\n          refetchQueries: [{ query: CURRENT_USER_QUERY }]\n        });\n        setState({ name: \"\", email: \"\", password: \"\" });\n      }}\n    >\n      <fieldset disabled={mutationLoading} aria-busy={mutationLoading}>\n        <h2>Sign into your account</h2>\n        <Error error={mutationError} />\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"email\"\n            value={state.email}\n            onChange={saveToState}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            value={state.password}\n            onChange={saveToState}\n          />\n        </label>\n\n        <button type=\"submit\">Sign In!</button>\n      </fieldset>\n    </Form>\n  );\n};\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}