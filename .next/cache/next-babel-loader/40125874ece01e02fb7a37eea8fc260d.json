{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/pages/artists.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  text-align: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ARTISTS_QUERY {\\n    artists {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nvar ALL_ARTISTS_QUERY = gql(_templateObject());\nvar Center = styled.div(_templateObject2());\n\nvar Artists = function Artists(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useQuery = useQuery(ALL_ARTISTS_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Error :(\");\n  var artists = data.artists.map(function (artist) {\n    return __jsx(\"p\", {\n      key: artist.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, artist.name);\n  });\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"I found \", artists.length, \" artists.\")), artists);\n};\n\nexport default Artists;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/pages/artists.js"],"names":["React","useQuery","gql","styled","ALL_ARTISTS_QUERY","Center","div","Artists","loading","error","data","artists","map","artist","id","name","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,iBAAiB,GAAGF,GAAH,mBAAvB;AASA,IAAMG,MAAM,GAAGF,MAAM,CAACG,GAAV,oBAAZ;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAQ;AAAA;;AAAA,kBACWN,QAAQ,CAACG,iBAAD,CADnB;AAAA,MACdI,OADc,aACdA,OADc;AAAA,MACLC,KADK,aACLA,KADK;AAAA,MACEC,IADF,aACEA,IADF;;AAEtB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,MAAME,OAAO,GAAGD,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiB,UAAAC,MAAM;AAAA,WACrC;AAAG,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBD,MAAM,CAACE,IAA3B,CADqC;AAAA,GAAvB,CAAhB;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYJ,OAAO,CAACK,MAApB,cADF,CADF,EAKGL,OALH,CADF;AASD,CAlBD;;AAoBA,eAAeJ,OAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\n\nconst ALL_ARTISTS_QUERY = gql`\n  query ALL_ARTISTS_QUERY {\n    artists {\n      id\n      name\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst Artists = ({}) => {\n  const { loading, error, data } = useQuery(ALL_ARTISTS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const artists = data.artists.map(artist => (\n    <p key={artist.id}>{artist.name}</p>\n  ));\n\n  return (\n    <Center>\n      <p>\n        <b>I found {artists.length} artists.</b>\n      </p>\n\n      {artists}\n    </Center>\n  );\n};\n\nexport default Artists;\n"]},"metadata":{},"sourceType":"module"}