{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_COMPOSERS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = \", \", $letter: String, $sortBy: ComposerOrderByInput!) {\\n    composers(where: {name_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_COMPOSERS_QUERY($skip: Int = 0, $first: Int = \", \", $sortBy: ComposerOrderByInput!) {\\n    composers(first: $first, skip: $skip, orderBy: $sortBy ) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Router from \"next/router\";\nimport { gql } from \"apollo-boost\";\nimport Select from \"react-select\";\nimport Composer from \"./Composer\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZ } from \"../lib/selectButtons\";\nimport Center from \"./styles/Center\";\nimport MultiList from \"./styles/Multilist\";\nimport sortBySelectItems from \"../lib/sortByOptions/composersSortBySelectOptions\";\nimport customTheme from \"./styles/reactSelectTheme\";\nimport getSelectLabel from \"../lib/sortByOptions/sortBySelectReturnLabel\";\nvar ALL_COMPOSERS_QUERY = gql(_templateObject(), perPage);\nexport var ALL_COMPOSERS_BEGINNING_WITH_QUERY = gql(_templateObject2(), perPage);\n\nvar Composers = function Composers(_ref) {\n  var page = _ref.page;\n\n  var _useState = useState(\"\"),\n      letter = _useState[0],\n      setLetter = _useState[1];\n\n  var _useState2 = useState(\"name_ASC\"),\n      sortBy = _useState2[0],\n      setSortBy = _useState2[1];\n\n  var _useQuery = useQuery(ALL_COMPOSERS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      allComposersLoading = _useQuery.loading,\n      allComposersError = _useQuery.error,\n      allComposersData = _useQuery.data;\n\n  var _useQuery2 = useQuery(ALL_COMPOSERS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter: letter,\n      sortBy: sortBy\n    }\n  }),\n      composersBeginningWithLoading = _useQuery2.loading,\n      composersBeginningWithError = _useQuery2.error,\n      composersBeginningWithData = _useQuery2.data;\n\n  if (allComposersLoading || composersBeginningWithLoading) return __jsx(\"p\", null, \"Loading...\");\n  if (allComposersError || composersBeginningWithError) return __jsx(\"p\", null, \"Error :(\");\n  var composers = !letter ? allComposersData.composers.map(function (composer) {\n    return __jsx(Composer, {\n      key: composer.id,\n      composer: composer\n    });\n  }) : composersBeginningWithData.composers.map(function (composer) {\n    return __jsx(Composer, {\n      key: composer.id,\n      composer: composer\n    });\n  });\n  return __jsx(Center, null, __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZ,\n    onChange: function onChange(e) {\n      setLetter(e.value);\n      Router.push({\n        pathname: \"/composers\",\n        query: {\n          page: 1\n        }\n      });\n    }\n  }), __jsx(\"br\", null), __jsx(Select, {\n    options: sortBySelectItems,\n    theme: customTheme,\n    placeholder: \"Sort by \".concat(getSelectLabel(sortBySelectItems, sortBy)),\n    onChange: function onChange(e) {\n      return setSortBy(e.value);\n    },\n    isSearchable: true\n  }), __jsx(\"br\", null), __jsx(Pagination, {\n    page: page,\n    model: \"composers\",\n    letter: letter\n  }), __jsx(MultiList, null, composers), __jsx(Pagination, {\n    page: page,\n    model: \"composers\",\n    letter: letter\n  }));\n};\n\nexport default Composers;","map":null,"metadata":{},"sourceType":"module"}