{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Songs.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport Router from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport { perPage } from \"../config\";\nimport Song from \"../components/Song\";\nimport Pagination from \"../components/Pagination\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport sortBySelectItems from \"../lib/songsSortBySelectItems\";\nimport Center from \"./styles/Center\";\nimport MultiList from \"./styles/Multilist\";\nexport const ALL_SONGS_QUERY = gql`\n  query ALL_SONGS_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: SongOrderByInput!) {\n    songs(first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      title\n      publisher\n      publishedDate\n      composer {\n        name\n        id\n      }\n    }\n  }\n`;\nexport const ALL_SONGS_BEGINNING_WITH_QUERY = gql`\n  query ALL_SONGS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: SongOrderByInput!) {\n    songs(where: {title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      publisher\n      publishedDate\n      composer {\n        name\n        id\n      }\n    }\n  }\n`;\nexport const ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY = gql`\n  query ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: SongOrderByInput!) {\n    songs(where: {OR: [{title_starts_with: \"0\"},{title_starts_with: \"1\"},{title_starts_with: \"2\"},{title_starts_with: \"3\"},{title_starts_with: \"4\"},{title_starts_with: \"5\"},{title_starts_with: \"6\"},{title_starts_with: \"7\"},{title_starts_with: \"8\"},{title_starts_with: \"9\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      publisher\n      publishedDate\n      composer {\n        name\n        id\n      }\n    }\n  }\n`;\n\nconst Songs = ({\n  page\n}) => {\n  const {\n    0: letter,\n    1: setLetter\n  } = useState(\"\");\n  const {\n    0: sortBy,\n    1: setSortBy\n  } = useState(\"title_ASC\");\n  const {\n    loading: allSongsLoading,\n    error: allSongsError,\n    data: allSongsData\n  } = useQuery(ALL_SONGS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy\n    }\n  });\n  const {\n    loading: songsBeginningWithLoading,\n    error: songsBeginningWithError,\n    data: songsBeginningWithData\n  } = useQuery(ALL_SONGS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy\n    }\n  });\n  const {\n    loading: songsBeginningWithNumberLoading,\n    error: songsBeginningWithNumberError,\n    data: songsBeginningWithNumberData\n  } = useQuery(ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy\n    }\n  });\n  if (allSongsLoading || songsBeginningWithLoading || songsBeginningWithNumberLoading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Loading...\");\n  if (allSongsError || songsBeginningWithError || songsBeginningWithNumberError) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Error :(\");\n  let songs = \"\";\n\n  if (!letter) {\n    songs = allSongsData.songs.map(song => __jsx(Song, {\n      key: song.id,\n      song: song,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  } else if (letter === \"#\") {\n    songs = songsBeginningWithNumberData.songs.map(song => __jsx(Song, {\n      key: song.id,\n      song: song,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }));\n  } else {\n    songs = songsBeginningWithData.songs.map(song => __jsx(Song, {\n      key: song.id,\n      song: song,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  }\n\n  function customTheme(theme) {\n    return _objectSpread({}, theme, {\n      colors: _objectSpread({}, theme.colors, {\n        primary25: \"orange\",\n        primary: \"green\"\n      })\n    });\n  }\n\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZWithNumber,\n    onChange: e => {\n      setLetter(e.value);\n      Router.push({\n        pathname: \"/songs\",\n        query: {\n          page: 1\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), __jsx(Select, {\n    options: sortBySelectItems,\n    theme: customTheme,\n    placeholder: \"Sort by...\",\n    isSearchable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), __jsx(Pagination, {\n    page: page,\n    model: \"songs\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), __jsx(MultiList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, songs), __jsx(Pagination, {\n    page: page,\n    model: \"songs\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }));\n};\n\nexport default Songs;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Songs.js"],"names":["React","useState","Router","useQuery","gql","Select","makeAnimated","perPage","Song","Pagination","SelectButton","selectButtonsAthruZWithNumber","Dropdown","sortBySelectItems","Center","MultiList","ALL_SONGS_QUERY","ALL_SONGS_BEGINNING_WITH_QUERY","ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY","Songs","page","letter","setLetter","sortBy","setSortBy","loading","allSongsLoading","error","allSongsError","data","allSongsData","variables","skip","first","songsBeginningWithLoading","songsBeginningWithError","songsBeginningWithData","songsBeginningWithNumberLoading","songsBeginningWithNumberError","songsBeginningWithNumberData","songs","map","song","id","customTheme","theme","colors","primary25","primary","e","value","push","pathname","query"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Router from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\n\nimport { perPage } from \"../config\";\nimport Song from \"../components/Song\";\nimport Pagination from \"../components/Pagination\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport sortBySelectItems from \"../lib/songsSortBySelectItems\";\nimport Center from \"./styles/Center\";\nimport MultiList from \"./styles/Multilist\";\n\nexport const ALL_SONGS_QUERY = gql`\n  query ALL_SONGS_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: SongOrderByInput!) {\n    songs(first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      title\n      publisher\n      publishedDate\n      composer {\n        name\n        id\n      }\n    }\n  }\n`;\n\nexport const ALL_SONGS_BEGINNING_WITH_QUERY = gql`\n  query ALL_SONGS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: SongOrderByInput!) {\n    songs(where: {title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      publisher\n      publishedDate\n      composer {\n        name\n        id\n      }\n    }\n  }\n`;\nexport const ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY = gql`\n  query ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: SongOrderByInput!) {\n    songs(where: {OR: [{title_starts_with: \"0\"},{title_starts_with: \"1\"},{title_starts_with: \"2\"},{title_starts_with: \"3\"},{title_starts_with: \"4\"},{title_starts_with: \"5\"},{title_starts_with: \"6\"},{title_starts_with: \"7\"},{title_starts_with: \"8\"},{title_starts_with: \"9\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      publisher\n      publishedDate\n      composer {\n        name\n        id\n      }\n    }\n  }\n`;\n\nconst Songs = ({ page }) => {\n  const [letter, setLetter] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"title_ASC\");\n  const {\n    loading: allSongsLoading,\n    error: allSongsError,\n    data: allSongsData,\n  } = useQuery(ALL_SONGS_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage, sortBy },\n  });\n  const {\n    loading: songsBeginningWithLoading,\n    error: songsBeginningWithError,\n    data: songsBeginningWithData,\n  } = useQuery(ALL_SONGS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy,\n    },\n  });\n  const {\n    loading: songsBeginningWithNumberLoading,\n    error: songsBeginningWithNumberError,\n    data: songsBeginningWithNumberData,\n  } = useQuery(ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy,\n    },\n  });\n\n  if (\n    allSongsLoading ||\n    songsBeginningWithLoading ||\n    songsBeginningWithNumberLoading\n  )\n    return <p>Loading...</p>;\n  if (allSongsError || songsBeginningWithError || songsBeginningWithNumberError)\n    return <p>Error :(</p>;\n\n  let songs = \"\";\n  if (!letter) {\n    songs = allSongsData.songs.map((song) => (\n      <Song key={song.id} song={song} />\n    ));\n  } else if (letter === \"#\") {\n    songs = songsBeginningWithNumberData.songs.map((song) => (\n      <Song key={song.id} song={song} />\n    ));\n  } else {\n    songs = songsBeginningWithData.songs.map((song) => (\n      <Song key={song.id} song={song} />\n    ));\n  }\n\n  function customTheme(theme) {\n    return {\n      ...theme,\n      colors: {\n        ...theme.colors,\n        primary25: \"orange\",\n        primary: \"green\",\n      },\n    };\n  }\n\n  return (\n    <Center>\n      <SelectButton\n        value={letter}\n        options={selectButtonsAthruZWithNumber}\n        onChange={(e) => {\n          setLetter(e.value);\n          Router.push({ pathname: \"/songs\", query: { page: 1 } });\n        }}\n      />\n      <br />\n      <Select\n        options={sortBySelectItems}\n        theme={customTheme}\n        placeholder=\"Sort by...\"\n        isSearchable\n      />\n      {/* <StyledDropdown\n        value={sortBy}\n        options={sortBySelectItems}\n        onChange={(e) => setSortBy(e.value)}\n        placeholder=\"Sort By…\"\n      /> */}\n      <br />\n      <Pagination page={page} model=\"songs\" letter={letter} />\n      <MultiList>{songs}</MultiList>\n      <Pagination page={page} model=\"songs\" letter={letter} />\n    </Center>\n  );\n};\n\nexport default Songs;\n"]},"metadata":{},"sourceType":"module"}