{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Pagination.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\";\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    songsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = ({\n  page\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PAGINATION_QUERY);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Error!\");\n  const count = data.songsConnection.aggregate.count;\n  const pages = Math.ceil(count / perPage);\n  return __jsx(PaginationStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: {\n      pathname: \"songs\",\n      query: {\n        page: page - 1\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Page \", page, \" of \", pages));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Pagination.js"],"names":["React","gql","Link","useQuery","PaginationStyles","perPage","PAGINATION_QUERY","Pagination","page","loading","error","data","count","songsConnection","aggregate","pages","Math","ceil","pathname","query"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,gBAAgB,GAAGL,GAAI;;;;;;;;CAA7B;;AAUA,MAAMM,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC/B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BR,QAAQ,CAACG,gBAAD,CAAzC;AACA,MAAIG,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACX,QAAME,KAAK,GAAGD,IAAI,CAACE,eAAL,CAAqBC,SAArB,CAA+BF,KAA7C;AACA,QAAMG,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGP,OAAlB,CAAd;AACA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAEa,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,KAAK,EAAE;AAAEX,QAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAA5B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQA,IADR,UACkBO,KADlB,CAFF,CADF;AAQD,CAdD;;AAgBA,eAAeR,UAAf","sourcesContent":["import React from \"react\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\";\n\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    songsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = ({ page }) => {\n  const { loading, error, data } = useQuery(PAGINATION_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error!</p>;\n  const count = data.songsConnection.aggregate.count;\n  const pages = Math.ceil(count / perPage);\n  return (\n    <PaginationStyles>\n      <Link href={{ pathname: \"songs\", query: { page: page - 1 } }}></Link>\n      <p>\n        Page {page} of {pages}\n      </p>\n    </PaginationStyles>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}