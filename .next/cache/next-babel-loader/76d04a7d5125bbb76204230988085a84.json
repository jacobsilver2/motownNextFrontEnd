{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Artists.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ARTISTS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = \", \", $letter: String) {\\n    artists(where: {name_starts_with: $letter}, first: $first, skip: $skip, orderBy: name_ASC) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ARTISTS_QUERY($skip: Int = 0, $first: Int = \", \") {\\n    artists(first: $first, skip: $skip, orderBy: name_ASC ) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Artist from \"./Artist\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZ } from \"../lib/selectButtons\";\nvar ALL_ARTISTS_QUERY = gql(_templateObject(), perPage);\nexport var ALL_ARTISTS_BEGINNING_WITH_QUERY = gql(_templateObject2(), perPage);\nvar Center = styled.div.withConfig({\n  displayName: \"Artists__Center\",\n  componentId: \"sc-1du5hy1-0\"\n})([\"text-align:center;\"]);\nvar ArtistsList = styled.div.withConfig({\n  displayName: \"Artists__ArtistsList\",\n  componentId: \"sc-1du5hy1-1\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;max-width:\", \";margin:0 auto;\"], function (props) {\n  return props.theme.maxWidth;\n});\n\nvar Artists = function Artists(_ref) {\n  var page = _ref.page;\n\n  var _useState = useState(\"\"),\n      letter = _useState[0],\n      setLetter = _useState[1];\n\n  var _useQuery = useQuery(ALL_ARTISTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  }),\n      allArtistsLoading = _useQuery.loading,\n      allArtistsError = _useQuery.error,\n      allArtistsData = _useQuery.data;\n\n  var _useQuery2 = useQuery(ALL_ARTISTS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter: letter\n    }\n  }),\n      artistsBeginningWithLoading = _useQuery2.loading,\n      artistsBeginningWithError = _useQuery2.error,\n      artistsBeginningWithData = _useQuery2.data;\n\n  if (allArtistsLoading || artistsBeginningWithLoading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Loading...\");\n  if (allArtistsError || artistsBeginningWithError) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Error :(\");\n  var artists = !letter ? allArtistsData.artists.map(function (artist) {\n    return __jsx(Artist, {\n      key: artist.id,\n      artist: artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  }) : artistsBeginningWithData.artists.map(function (artist) {\n    return __jsx(Artist, {\n      key: artist.id,\n      artist: artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  });\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZ,\n    onChange: function onChange(e) {\n      return setLetter(e.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), __jsx(Pagination, {\n    page: page,\n    model: \"artists\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), __jsx(ArtistsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, artists), __jsx(Pagination, {\n    page: page,\n    model: \"artists\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n};\n\nexport default Artists;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Artists.js"],"names":["React","useState","useQuery","gql","styled","Artist","Pagination","perPage","SelectButton","selectButtonsAthruZ","ALL_ARTISTS_QUERY","ALL_ARTISTS_BEGINNING_WITH_QUERY","Center","div","ArtistsList","props","theme","maxWidth","Artists","page","letter","setLetter","variables","skip","first","allArtistsLoading","loading","allArtistsError","error","allArtistsData","data","artistsBeginningWithLoading","artistsBeginningWithError","artistsBeginningWithData","artists","map","artist","id","e","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,mBAAT,QAAoC,sBAApC;AAEA,IAAMC,iBAAiB,GAAGP,GAAH,oBACmCI,OADnC,CAAvB;AASA,OAAO,IAAMI,gCAAgC,GAAGR,GAAH,qBAC4BI,OAD5B,CAAtC;AASP,IAAMK,MAAM,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,0BAAZ;AAIA,IAAMC,WAAW,GAAGV,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,+FAIF,UAACE,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYC,QAAvB;AAAA,CAJE,CAAjB;;AAQA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACAlB,QAAQ,CAAC,EAAD,CADR;AAAA,MACrBmB,MADqB;AAAA,MACbC,SADa;;AAAA,kBAMxBnB,QAAQ,CAACQ,iBAAD,EAAoB;AAC9BY,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEJ,IAAI,GAAGZ,OAAP,GAAiBA,OAAzB;AAAkCiB,MAAAA,KAAK,EAAEjB;AAAzC;AADmB,GAApB,CANgB;AAAA,MAGjBkB,iBAHiB,aAG1BC,OAH0B;AAAA,MAInBC,eAJmB,aAI1BC,KAJ0B;AAAA,MAKpBC,cALoB,aAK1BC,IAL0B;;AAAA,mBAaxB5B,QAAQ,CAACS,gCAAD,EAAmC;AAC7CW,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEJ,IAAI,GAAGZ,OAAP,GAAiBA,OAAzB;AAAkCiB,MAAAA,KAAK,EAAEjB,OAAzC;AAAkDa,MAAAA,MAAM,EAANA;AAAlD;AADkC,GAAnC,CAbgB;AAAA,MAUjBW,2BAViB,cAU1BL,OAV0B;AAAA,MAWnBM,yBAXmB,cAW1BJ,KAX0B;AAAA,MAYpBK,wBAZoB,cAY1BH,IAZ0B;;AAiB5B,MAAIL,iBAAiB,IAAIM,2BAAzB,EACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACF,MAAIJ,eAAe,IAAIK,yBAAvB,EAAkD,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAElD,MAAME,OAAO,GAAG,CAACd,MAAD,GACZS,cAAc,CAACK,OAAf,CAAuBC,GAAvB,CAA2B,UAACC,MAAD;AAAA,WACzB,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAwB,MAAA,MAAM,EAAED,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyB;AAAA,GAA3B,CADY,GAIZH,wBAAwB,CAACC,OAAzB,CAAiCC,GAAjC,CAAqC,UAACC,MAAD;AAAA,WACnC,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAwB,MAAA,MAAM,EAAED,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADmC;AAAA,GAArC,CAJJ;AAQA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,KAAK,EAAEhB,MADT;AAEE,IAAA,OAAO,EAAEX,mBAFX;AAGE,IAAA,QAAQ,EAAE,kBAAC6B,CAAD;AAAA,aAAOjB,SAAS,CAACiB,CAAC,CAACC,KAAH,CAAhB;AAAA,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEpB,IAAlB;AAAwB,IAAA,KAAK,EAAC,SAA9B;AAAwC,IAAA,MAAM,EAAEC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcc,OAAd,CAPF,EAQE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEf,IAAlB;AAAwB,IAAA,KAAK,EAAC,SAA9B;AAAwC,IAAA,MAAM,EAAEC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CAzCD;;AA2CA,eAAeF,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Artist from \"./Artist\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZ } from \"../lib/selectButtons\";\n\nconst ALL_ARTISTS_QUERY = gql`\n  query ALL_ARTISTS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    artists(first: $first, skip: $skip, orderBy: name_ASC ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const ALL_ARTISTS_BEGINNING_WITH_QUERY = gql`\n  query ALL_ARTISTS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String) {\n    artists(where: {name_starts_with: $letter}, first: $first, skip: $skip, orderBy: name_ASC) {\n      id\n      name\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ArtistsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${(props) => props.theme.maxWidth};\n  margin: 0 auto;\n`;\n\nconst Artists = ({ page }) => {\n  const [letter, setLetter] = useState(\"\");\n  const {\n    loading: allArtistsLoading,\n    error: allArtistsError,\n    data: allArtistsData,\n  } = useQuery(ALL_ARTISTS_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage },\n  });\n  const {\n    loading: artistsBeginningWithLoading,\n    error: artistsBeginningWithError,\n    data: artistsBeginningWithData,\n  } = useQuery(ALL_ARTISTS_BEGINNING_WITH_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage, letter },\n  });\n\n  if (allArtistsLoading || artistsBeginningWithLoading)\n    return <p>Loading...</p>;\n  if (allArtistsError || artistsBeginningWithError) return <p>Error :(</p>;\n\n  const artists = !letter\n    ? allArtistsData.artists.map((artist) => (\n        <Artist key={artist.id} artist={artist} />\n      ))\n    : artistsBeginningWithData.artists.map((artist) => (\n        <Artist key={artist.id} artist={artist} />\n      ));\n\n  return (\n    <Center>\n      <SelectButton\n        value={letter}\n        options={selectButtonsAthruZ}\n        onChange={(e) => setLetter(e.value)}\n      />\n      <Pagination page={page} model=\"artists\" letter={letter} />\n      <ArtistsList>{artists}</ArtistsList>\n      <Pagination page={page} model=\"artists\" letter={letter} />\n    </Center>\n  );\n};\n\nexport default Artists;\n"]},"metadata":{},"sourceType":"module"}