{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Search.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_SONGS_QUERY($searchTerm: String!) {\\n    songs(\\n      where: {\\n        OR: [\\n          { title_contains: $searchTerm }\\n          { altTitle_contains: $searchTerm }\\n          { fromFilm_contains: $searchTerm }\\n        ]\\n      }\\n    ) {\\n      id\\n      title\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport Downshift, { resetIdCounter } from \"downshift\";\nimport Router from \"next/router\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\nimport SongStyles from \"./styles/song/songStyles\";\nimport Title from \"./styles/song/title\";\nimport Song from \"./styles/song/songStyles\";\nvar SEARCH_SONGS_QUERY = gql(_templateObject());\n\nfunction routeToSong(song) {\n  song && Router.push({\n    pathname: \"/song\",\n    query: {\n      id: song.id\n    }\n  });\n}\n\nvar AutoComplete = /*#__PURE__*/function (_React$Component) {\n  _inherits(AutoComplete, _React$Component);\n\n  function AutoComplete() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoComplete);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoComplete)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      songs: [],\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", debounce(function _callee(e, client) {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.t0 = e.target.value;\n\n              if (!_context.t0) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(client.query({\n                query: SEARCH_SONGS_QUERY,\n                variables: {\n                  searchTerm: e.target.value\n                }\n              }));\n\n            case 5:\n              _context.t0 = _context.sent;\n\n            case 6:\n              response = _context.t0;\n\n              _this.setState({\n                songs: response.data.songs,\n                loading: false\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }, 350));\n\n    return _this;\n  }\n\n  _createClass(AutoComplete, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      resetIdCounter();\n      return __jsx(SearchStyles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(Downshift, {\n        onChange: routeToSong,\n        itemToString: function itemToString(song) {\n          return song === null ? \"\" : song.title;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            getItemProps = _ref.getItemProps,\n            isOpen = _ref.isOpen,\n            inputValue = _ref.inputValue,\n            highlightedIndex = _ref.highlightedIndex;\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, __jsx(ApolloConsumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, function (client) {\n          return __jsx(\"input\", _extends({}, getInputProps({\n            type: \"search\",\n            placeholder: \"Search\",\n            id: \"search\",\n            className: _this2.state.loading ? \"loading\" : \"\",\n            onChange: function onChange(e) {\n              e.persist();\n\n              _this2.onChange(e, client);\n            }\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }));\n        }), isOpen ? __jsx(DropDown, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, _this2.state.songs.map(function (item, index) {\n          return __jsx(DropDownItem, _extends({}, getItemProps({\n            key: item.id,\n            index: index,\n            item: item\n          }), {\n            highlighted: index === highlightedIndex,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }), __jsx(Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, item.title));\n        })) : null);\n      }));\n    }\n  }]);\n\n  return AutoComplete;\n}(React.Component);\n\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Search.js"],"names":["React","Downshift","resetIdCounter","Router","ApolloConsumer","gql","debounce","DropDown","DropDownItem","SearchStyles","SongStyles","Title","Song","SEARCH_SONGS_QUERY","routeToSong","song","push","pathname","query","id","AutoComplete","songs","loading","e","client","setState","target","value","variables","searchTerm","response","data","title","getInputProps","getItemProps","isOpen","inputValue","highlightedIndex","type","placeholder","className","state","onChange","persist","map","item","index","key","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Downshift, { resetIdCounter } from \"downshift\";\nimport Router from \"next/router\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\nimport SongStyles from \"./styles/song/songStyles\";\nimport Title from \"./styles/song/title\";\nimport Song from \"./styles/song/songStyles\";\n\nconst SEARCH_SONGS_QUERY = gql`\n  query SEARCH_SONGS_QUERY($searchTerm: String!) {\n    songs(\n      where: {\n        OR: [\n          { title_contains: $searchTerm }\n          { altTitle_contains: $searchTerm }\n          { fromFilm_contains: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      title\n    }\n  }\n`;\n\nfunction routeToSong(song) {\n  song &&\n    Router.push({\n      pathname: \"/song\",\n      query: {\n        id: song.id\n      }\n    });\n}\n\nclass AutoComplete extends React.Component {\n  state = {\n    songs: [],\n    loading: false\n  };\n  onChange = debounce(async (e, client) => {\n    this.setState({ loading: true });\n    const response =\n      e.target.value &&\n      (await client.query({\n        query: SEARCH_SONGS_QUERY,\n        variables: { searchTerm: e.target.value }\n      }));\n    this.setState({ songs: response.data.songs, loading: false });\n  }, 350);\n\n  render() {\n    resetIdCounter();\n    return (\n      <SearchStyles>\n        <Downshift\n          onChange={routeToSong}\n          itemToString={song => (song === null ? \"\" : song.title)}\n        >\n          {({\n            getInputProps,\n            getItemProps,\n            isOpen,\n            inputValue,\n            highlightedIndex\n          }) => (\n            <div>\n              <ApolloConsumer>\n                {client => (\n                  <input\n                    {...getInputProps({\n                      type: \"search\",\n                      placeholder: \"Search\",\n                      id: \"search\",\n                      className: this.state.loading ? \"loading\" : \"\",\n                      onChange: e => {\n                        e.persist();\n                        this.onChange(e, client);\n                      }\n                    })}\n                  />\n                )}\n              </ApolloConsumer>\n              {isOpen ? (\n                <DropDown>\n                  {this.state.songs.map((item, index) => (\n                    <DropDownItem\n                      {...getItemProps({ key: item.id, index, item })}\n                      highlighted={index === highlightedIndex}\n                    >\n                      <Title>{item.title}</Title>\n                    </DropDownItem>\n                  ))}\n                </DropDown>\n              ) : null}\n            </div>\n          )}\n        </Downshift>\n      </SearchStyles>\n    );\n  }\n}\n\nexport default AutoComplete;\n"]},"metadata":{},"sourceType":"module"}