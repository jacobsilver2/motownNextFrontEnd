{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = \", \", $sortBy: AlbumOrderByInput!) {\\n    albums(where: {single: false, OR: [{title_starts_with: \\\"0\\\"},{title_starts_with: \\\"1\\\"},{title_starts_with: \\\"2\\\"},{title_starts_with: \\\"3\\\"},{title_starts_with: \\\"4\\\"},{title_starts_with: \\\"5\\\"},{title_starts_with: \\\"6\\\"},{title_starts_with: \\\"7\\\"},{title_starts_with: \\\"8\\\"},{title_starts_with: \\\"9\\\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      catalogNumber\\n      single\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ALBUMS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = \", \", $letter: String, $sortBy: AlbumOrderByInput!) {\\n    albums(where: {single: false, title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      catalogNumber\\n      single\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ALBUMS_QUERY($first: Int = \", \", $skip: Int = 0, $sortBy: AlbumOrderByInput!) {\\n    albums(where: {single: false}, first: $first, skip: $skip, orderBy: $sortBy ) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      catalogNumber\\n      single\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Router from \"next/router\";\nimport { gql } from \"apollo-boost\";\nimport Select from \"react-select\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport MultiList from \"./styles/Multilist\";\nimport Center from \"./styles/Center\";\nimport customTheme from \"./styles/reactSelectTheme\";\nimport getSelectLabel from \"../lib/sortByOptions/sortBySelectReturnLabel\";\nimport sortBySelectItems from \"../lib/sortByOptions/albumsSortBySelectOptions\";\nexport var ALL_ALBUMS_QUERY = gql(_templateObject(), perPage);\nexport var ALL_ALBUMS_BEGINNING_WITH_QUERY = gql(_templateObject2(), perPage);\nexport var ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY = gql(_templateObject3(), perPage);\n\nvar Albums = function Albums(_ref) {\n  var page = _ref.page;\n\n  var _useState = useState(\"\"),\n      letter = _useState[0],\n      setLetter = _useState[1];\n\n  var _useState2 = useState(\"title_ASC\"),\n      sortBy = _useState2[0],\n      setSortBy = _useState2[1];\n\n  var _useState3 = useState([]),\n      checkedItems = _useState3[0],\n      setCheckedItems = _useState3[1];\n\n  var _useQuery = useQuery(ALL_ALBUMS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      allAlbumsLoading = _useQuery.loading,\n      allAlbumsError = _useQuery.error,\n      allAlbumsData = _useQuery.data;\n\n  var _useQuery2 = useQuery(ALL_ALBUMS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter: letter,\n      sortBy: sortBy\n    }\n  }),\n      albumsBeginningWithLoading = _useQuery2.loading,\n      albumsBeginningWithError = _useQuery2.error,\n      albumsBeginningWithData = _useQuery2.data;\n\n  var _useQuery3 = useQuery(ALL_ALBUMS_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      albumsBeginningWithNumberLoading = _useQuery3.loading,\n      albumsBeginningWithNumberError = _useQuery3.error,\n      albumsBeginningWithNumberData = _useQuery3.data;\n\n  if (albumsBeginningWithLoading || allAlbumsLoading || albumsBeginningWithNumberLoading) return __jsx(\"p\", null, \"Loading...\");\n  if (albumsBeginningWithError || allAlbumsError || albumsBeginningWithNumberError) return __jsx(\"p\", null, \"Error :(\");\n\n  function getAlbums() {\n    if (letter === \"\" || !letter) {\n      return allAlbumsData.albums.map(function (album) {\n        return __jsx(Album, {\n          addToCheckedItemsList: setCheckedItems,\n          checkedItems: checkedItems,\n          key: album.id,\n          album: album\n        });\n      });\n    } else if (letter === \"#\") {\n      return albumsBeginningWithNumberData.albums.map(function (album) {\n        return __jsx(Album, {\n          key: album.id,\n          album: album,\n          addToCheckedItemsList: setCheckedItems,\n          checkedItems: checkedItems\n        });\n      });\n    } else {\n      return albumsBeginningWithData.albums.map(function (album) {\n        return __jsx(Album, {\n          key: album.id,\n          album: album,\n          addToCheckedItemsList: setCheckedItems,\n          checkedItems: checkedItems\n        });\n      });\n    }\n  }\n\n  return __jsx(Center, null, __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZWithNumber,\n    onChange: function onChange(e) {\n      setLetter(e.value);\n      Router.push({\n        pathname: \"/albums\",\n        query: {\n          page: 1\n        }\n      });\n    }\n  }), __jsx(\"br\", null), __jsx(Select, {\n    options: sortBySelectItems,\n    theme: customTheme,\n    placeholder: \"Sort by \".concat(getSelectLabel(sortBySelectItems, sortBy)),\n    onChange: function onChange(e) {\n      return setSortBy(e.value);\n    },\n    isSearchable: true\n  }), __jsx(\"br\", null), __jsx(Pagination, {\n    page: page,\n    model: \"albums\",\n    letter: letter\n  }), __jsx(MultiList, null, getAlbums()), __jsx(Pagination, {\n    page: page,\n    model: \"albums\",\n    letter: letter\n  }));\n};\n\nexport default Albums;","map":null,"metadata":{},"sourceType":"module"}