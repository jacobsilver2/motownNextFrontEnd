{"ast":null,"code":"import withApollo from \"next-with-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { endpoint } from \"../config\";\n\nfunction createClient(_ref) {\n  var headers = _ref.headers;\n  return new ApolloClient({\n    uri: true ? endpoint : endpoint,\n    onError: function onError(_ref2) {\n      var networkError = _ref2.networkError,\n          graphQLErrors = _ref2.graphQLErrors;\n      graphQLErrors && graphQLErrors.forEach(function (gqlErr) {\n        return console.log(gqlErr);\n      });\n      console.log(\"NetworkError: \".concat(networkError));\n    },\n    request: function request(operation) {\n      operation.setContext({\n        fetchOptions: {\n          credentials: \"include\"\n        },\n        headers: headers\n      });\n    },\n    // local state\n    clientState: {\n      resolvers: {},\n      defaults: {\n        selectedIds: []\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/lib/withData.js"],"names":["withApollo","ApolloClient","endpoint","createClient","headers","uri","onError","networkError","graphQLErrors","forEach","gqlErr","console","log","request","operation","setContext","fetchOptions","credentials","clientState","resolvers","defaults","selectedIds"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAEA,SAASC,YAAT,OAAmC;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACjC,SAAO,IAAIH,YAAJ,CAAiB;AACtBI,IAAAA,GAAG,EAAE,OAAyCH,QAAzC,GAAoDA,QADnC;AAEtBI,IAAAA,OAAO,EAAE,wBAAqC;AAAA,UAAlCC,YAAkC,SAAlCA,YAAkC;AAAA,UAApBC,aAAoB,SAApBA,aAAoB;AAC5CA,MAAAA,aAAa,IAAIA,aAAa,CAACC,OAAd,CAAsB,UAACC,MAAD;AAAA,eAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAZ;AAAA,OAAtB,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,yBAA6BL,YAA7B;AACD,KALqB;AAMtBM,IAAAA,OAAO,EAAE,iBAACC,SAAD,EAAe;AACtBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBb,QAAAA,OAAO,EAAPA;AAJmB,OAArB;AAMD,KAbqB;AActB;AACAc,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,WAAW,EAAE;AADL;AAFC;AAfS,GAAjB,CAAP;AAsBD;;AAED,eAAerB,UAAU,CAACG,YAAD,CAAzB","sourcesContent":["import withApollo from \"next-with-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { endpoint } from \"../config\";\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === \"development\" ? endpoint : endpoint,\n    onError: ({ networkError, graphQLErrors }) => {\n      graphQLErrors && graphQLErrors.forEach((gqlErr) => console.log(gqlErr));\n      console.log(`NetworkError: ${networkError}`);\n    },\n    request: (operation) => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: \"include\",\n        },\n        headers,\n      });\n    },\n    // local state\n    clientState: {\n      resolvers: {},\n      defaults: {\n        selectedIds: [],\n      },\n    },\n  });\n}\n\nexport default withApollo(createClient);\n"]},"metadata":{},"sourceType":"module"}