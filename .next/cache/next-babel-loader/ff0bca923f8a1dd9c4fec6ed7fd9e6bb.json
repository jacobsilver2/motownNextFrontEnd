{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Artists.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Router from \"next/router\";\nimport styled from \"styled-components\";\nimport Artist from \"./Artist\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZ } from \"../lib/selectButtons\"; // import { StyledDropdown } from \"./Albums\";\n\nconst ALL_ARTISTS_QUERY = gql`\n  query ALL_ARTISTS_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: ArtistOrderByInput!) {\n    artists(first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      name\n    }\n  }\n`;\nexport const ALL_ARTISTS_BEGINNING_WITH_QUERY = gql`\n  query ALL_ARTISTS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: ArtistOrderByInput!) {\n    artists(where: {name_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      name\n    }\n  }\n`;\nexport const Center = styled.div.withConfig({\n  displayName: \"Artists__Center\",\n  componentId: \"sc-1du5hy1-0\"\n})([\"text-align:center;\"]);\nexport const MultiList = styled.div.withConfig({\n  displayName: \"Artists__MultiList\",\n  componentId: \"sc-1du5hy1-1\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;max-width:\", \";margin:0 auto;@media screen and (max-width:800px){grid-template-columns:1fr;}\"], props => props.theme.maxWidth);\nconst sortBySelectItems = [{\n  label: \"Name, ascending\",\n  value: \"name_ASC\"\n}, {\n  label: \"Name, descending\",\n  value: \"name_DESC\"\n}];\n\nconst Artists = ({\n  page\n}) => {\n  const {\n    0: letter,\n    1: setLetter\n  } = useState(\"\");\n  const {\n    0: sortBy,\n    1: setSortBy\n  } = useState(\"name_ASC\");\n  const {\n    loading: allArtistsLoading,\n    error: allArtistsError,\n    data: allArtistsData\n  } = useQuery(ALL_ARTISTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy\n    }\n  });\n  const {\n    loading: artistsBeginningWithLoading,\n    error: artistsBeginningWithError,\n    data: artistsBeginningWithData\n  } = useQuery(ALL_ARTISTS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy\n    }\n  });\n  if (allArtistsLoading || artistsBeginningWithLoading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Loading...\");\n  if (allArtistsError || artistsBeginningWithError) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Error :(\");\n  const artists = !letter ? allArtistsData.artists.map(artist => __jsx(Artist, {\n    key: artist.id,\n    artist: artist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })) : artistsBeginningWithData.artists.map(artist => __jsx(Artist, {\n    key: artist.id,\n    artist: artist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }));\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZ,\n    onChange: e => {\n      setLetter(e.value);\n      Router.push({\n        pathname: \"/artists\",\n        query: {\n          page: 1\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), __jsx(Pagination, {\n    page: page,\n    model: \"artists\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), __jsx(MultiList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, artists), __jsx(Pagination, {\n    page: page,\n    model: \"artists\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }));\n};\n\nexport default Artists;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Artists.js"],"names":["React","useState","useQuery","gql","Router","styled","Artist","Pagination","perPage","SelectButton","selectButtonsAthruZ","ALL_ARTISTS_QUERY","ALL_ARTISTS_BEGINNING_WITH_QUERY","Center","div","MultiList","props","theme","maxWidth","sortBySelectItems","label","value","Artists","page","letter","setLetter","sortBy","setSortBy","loading","allArtistsLoading","error","allArtistsError","data","allArtistsData","variables","skip","first","artistsBeginningWithLoading","artistsBeginningWithError","artistsBeginningWithData","artists","map","artist","id","e","push","pathname","query"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Router from \"next/router\";\nimport styled from \"styled-components\";\nimport Artist from \"./Artist\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZ } from \"../lib/selectButtons\";\n// import { StyledDropdown } from \"./Albums\";\n\nconst ALL_ARTISTS_QUERY = gql`\n  query ALL_ARTISTS_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: ArtistOrderByInput!) {\n    artists(first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const ALL_ARTISTS_BEGINNING_WITH_QUERY = gql`\n  query ALL_ARTISTS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: ArtistOrderByInput!) {\n    artists(where: {name_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      name\n    }\n  }\n`;\n\nexport const Center = styled.div`\n  text-align: center;\n`;\n\nexport const MultiList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${(props) => props.theme.maxWidth};\n  margin: 0 auto;\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst sortBySelectItems = [\n  { label: \"Name, ascending\", value: \"name_ASC\" },\n  { label: \"Name, descending\", value: \"name_DESC\" },\n];\n\nconst Artists = ({ page }) => {\n  const [letter, setLetter] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"name_ASC\");\n  const {\n    loading: allArtistsLoading,\n    error: allArtistsError,\n    data: allArtistsData,\n  } = useQuery(ALL_ARTISTS_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage, sortBy },\n  });\n  const {\n    loading: artistsBeginningWithLoading,\n    error: artistsBeginningWithError,\n    data: artistsBeginningWithData,\n  } = useQuery(ALL_ARTISTS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy,\n    },\n  });\n\n  if (allArtistsLoading || artistsBeginningWithLoading)\n    return <p>Loading...</p>;\n  if (allArtistsError || artistsBeginningWithError) return <p>Error :(</p>;\n\n  const artists = !letter\n    ? allArtistsData.artists.map((artist) => (\n        <Artist key={artist.id} artist={artist} />\n      ))\n    : artistsBeginningWithData.artists.map((artist) => (\n        <Artist key={artist.id} artist={artist} />\n      ));\n\n  return (\n    <Center>\n      <SelectButton\n        value={letter}\n        options={selectButtonsAthruZ}\n        onChange={(e) => {\n          setLetter(e.value);\n          Router.push({ pathname: \"/artists\", query: { page: 1 } });\n        }}\n      />\n      <br />\n      {/* <StyledDropdown\n        value={sortBy}\n        options={sortBySelectItems}\n        onChange={(e) => setSortBy(e.value)}\n        placeholder=\"Sort By…\"\n      /> */}\n      <br />\n      <Pagination page={page} model=\"artists\" letter={letter} />\n      <MultiList>{artists}</MultiList>\n      <Pagination page={page} model=\"artists\" letter={letter} />\n    </Center>\n  );\n};\n\nexport default Artists;\n"]},"metadata":{},"sourceType":"module"}