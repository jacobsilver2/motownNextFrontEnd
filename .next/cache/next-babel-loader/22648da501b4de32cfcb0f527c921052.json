{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Pagination.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  query COMPOSERS_PAGINATION_QUERY {\\n    composersConnection {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query ARTISTS_PAGINATION_QUERY {\\n    artistsConnection {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALBUMS_PAGINATION_QUERY {\\n    albumsConnection {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SONGS_PAGINATION_QUERY {\\n    songsConnection {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\";\nvar SONGS_PAGINATION_QUERY = gql(_templateObject());\nvar ALBUMS_PAGINATION_QUERY = gql(_templateObject2());\nvar ARTISTS_PAGINATION_QUERY = gql(_templateObject3());\nvar COMPOSERS_PAGINATION_QUERY = gql(_templateObject4());\n\nvar Pagination = function Pagination(_ref) {\n  var page = _ref.page,\n      model = _ref.model,\n      count = _ref.count;\n  // let PAGINATION_QUERY;\n  // switch (model) {\n  //   case \"songs\":\n  //     PAGINATION_QUERY = SONGS_PAGINATION_QUERY;\n  //     break;\n  //   case \"albums\":\n  //     PAGINATION_QUERY = ALBUMS_PAGINATION_QUERY;\n  //     break;\n  //   case \"artists\":\n  //     PAGINATION_QUERY = ARTISTS_PAGINATION_QUERY;\n  //     break;\n  //   case \"composers\":\n  //     PAGINATION_QUERY = COMPOSERS_PAGINATION_QUERY;\n  //     break;\n  //   default:\n  //     PAGINATION_QUERY = SONGS_PAGINATION_QUERY;\n  // }\n  // const { loading, error, data } = useQuery(PAGINATION_QUERY);\n  // if (loading) return <p>Loading...</p>;\n  // if (error) return <p>Error!</p>;\n  // let count;\n  // if (model === \"songs\") count = data.songsConnection.aggregate.count;\n  // if (model === \"artists\") count = data.artistsConnection.aggregate.count;\n  // if (model === \"albums\") count = data.albumsConnection.aggregate.count;\n  // if (model === \"composers\") count = data.composersConnection.aggregate.count;\n  var pages = Math.ceil(count / perPage);\n  return __jsx(PaginationStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: {\n      pathname: model,\n      query: {\n        page: page - 1\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"prev\",\n    \"aria-disabled\": page <= 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Prev\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Page \", page, \" of \", pages), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, count, \" \", model, \" Total\"), __jsx(Link, {\n    href: {\n      pathname: model,\n      query: {\n        page: page + 1\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"next\",\n    \"aria-disabled\": page >= pages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Next\")));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Pagination.js"],"names":["React","gql","Link","useQuery","PaginationStyles","perPage","SONGS_PAGINATION_QUERY","ALBUMS_PAGINATION_QUERY","ARTISTS_PAGINATION_QUERY","COMPOSERS_PAGINATION_QUERY","Pagination","page","model","count","pages","Math","ceil","pathname","query"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,IAAMC,sBAAsB,GAAGL,GAAH,mBAA5B;AASA,IAAMM,uBAAuB,GAAGN,GAAH,oBAA7B;AASA,IAAMO,wBAAwB,GAAGP,GAAH,oBAA9B;AASA,IAAMQ,0BAA0B,GAAGR,GAAH,oBAAhC;;AAUA,IAAMS,UAAU,GAAG,SAAbA,UAAa,OAA4B;AAAA,MAAzBC,IAAyB,QAAzBA,IAAyB;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,MAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUH,KAAK,GAAGR,OAAlB,CAAd;AACA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAEY,MAAAA,QAAQ,EAAEL,KAAZ;AAAmBM,MAAAA,KAAK,EAAE;AAAEP,QAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,qBAAeA,IAAI,IAAI,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQA,IADR,UACkBG,KADlB,CANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,OACWD,KADX,WATF,EAYE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAEK,MAAAA,QAAQ,EAAEL,KAAZ;AAAmBM,MAAAA,KAAK,EAAE;AAAEP,QAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,qBAAeA,IAAI,IAAIG,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAZF,CADF;AAoBD,CAlDD;;AAoDA,eAAeJ,UAAf","sourcesContent":["import React from \"react\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\";\n\nconst SONGS_PAGINATION_QUERY = gql`\n  query SONGS_PAGINATION_QUERY {\n    songsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst ALBUMS_PAGINATION_QUERY = gql`\n  query ALBUMS_PAGINATION_QUERY {\n    albumsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst ARTISTS_PAGINATION_QUERY = gql`\n  query ARTISTS_PAGINATION_QUERY {\n    artistsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst COMPOSERS_PAGINATION_QUERY = gql`\n  query COMPOSERS_PAGINATION_QUERY {\n    composersConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = ({ page, model, count }) => {\n  // let PAGINATION_QUERY;\n  // switch (model) {\n  //   case \"songs\":\n  //     PAGINATION_QUERY = SONGS_PAGINATION_QUERY;\n  //     break;\n  //   case \"albums\":\n  //     PAGINATION_QUERY = ALBUMS_PAGINATION_QUERY;\n  //     break;\n  //   case \"artists\":\n  //     PAGINATION_QUERY = ARTISTS_PAGINATION_QUERY;\n  //     break;\n  //   case \"composers\":\n  //     PAGINATION_QUERY = COMPOSERS_PAGINATION_QUERY;\n  //     break;\n  //   default:\n  //     PAGINATION_QUERY = SONGS_PAGINATION_QUERY;\n  // }\n\n  // const { loading, error, data } = useQuery(PAGINATION_QUERY);\n  // if (loading) return <p>Loading...</p>;\n  // if (error) return <p>Error!</p>;\n\n  // let count;\n  // if (model === \"songs\") count = data.songsConnection.aggregate.count;\n  // if (model === \"artists\") count = data.artistsConnection.aggregate.count;\n  // if (model === \"albums\") count = data.albumsConnection.aggregate.count;\n  // if (model === \"composers\") count = data.composersConnection.aggregate.count;\n\n  const pages = Math.ceil(count / perPage);\n  return (\n    <PaginationStyles>\n      <Link href={{ pathname: model, query: { page: page - 1 } }}>\n        <a className=\"prev\" aria-disabled={page <= 1}>\n          Prev\n        </a>\n      </Link>\n      <p>\n        Page {page} of {pages}\n      </p>\n      <p>\n        {count} {model} Total\n      </p>\n      <Link href={{ pathname: model, query: { page: page + 1 } }}>\n        <a className=\"next\" aria-disabled={page >= pages}>\n          Next\n        </a>\n      </Link>\n    </PaginationStyles>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}