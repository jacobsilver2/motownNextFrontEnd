{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/AdminPanel.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Button } from \"primereact/button\"; // import { CURRENT_USER_QUERY } from \"./Nav\";\n\nexport const Center = styled.div.withConfig({\n  displayName: \"AdminPanel__Center\",\n  componentId: \"sc-1o45frt-0\"\n})([\"text-align:center;\"]);\nexport const CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n    }\n  }\n`;\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    selectedIds @client\n  }\n`;\nconst TURN_SINGLE_INTO_ALBUM_MUTATION = gql`\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\n    turnSingleIntoAlbum(id: $id) {\n      id\n      title\n      single\n    }\n  }\n`;\nconst JOIN_SINGLES_MUTATION = gql`\n  mutation JOIN_SINGLES_MUTATION($albumOneId: ID!, $albumTwoId: ID!) {\n    joinTwoSingles(albumOneId: $albumOneId, albumTwoId: $albumTwoId) {\n      id\n      title\n    }\n  }\n`;\n\nconst AdminPanel = () => {\n  const {\n    loading: currentUserLoading,\n    error: currentUserError,\n    data: currentUserData\n  } = useQuery(CURRENT_USER_QUERY);\n  const {\n    loading: localStateLoading,\n    error: localStateError,\n    data: localStateData\n  } = useQuery(LOCAL_STATE_QUERY);\n  if (currentUserLoading) return \"Loading...\";\n  if (currentUserError) return `Error! ${error.message}`;\n  const {\n    me\n  } = currentUserData;\n  return me && __jsx(React.Fragment, null, __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Your Selected Items (from Apollo Local State):\", \" \", localStateData.selectedIds.map(selectedId => __jsx(\"li\", {\n    key: selectedId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, selectedId))), __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: () => turnSingleIntoAlbum(),\n    label: \"TURN SINGLE INTO ALBUM\",\n    style: {\n      marginRight: \".25em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(Button, {\n    label: \"JOIN A-SIDE AND B-SIDE\",\n    onClick: () => joinASideAndBSide(),\n    style: {\n      marginRight: \".25em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(Button, {\n    label: \"CLEAR SELECTED ITEMS\",\n    onClick: () => clearSelectedItems(),\n    style: {\n      marginRight: \".25em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })));\n};\n\nexport default AdminPanel;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/AdminPanel.js"],"names":["React","useState","styled","gql","useQuery","useMutation","Button","Center","div","CURRENT_USER_QUERY","LOCAL_STATE_QUERY","TURN_SINGLE_INTO_ALBUM_MUTATION","JOIN_SINGLES_MUTATION","AdminPanel","loading","currentUserLoading","error","currentUserError","data","currentUserData","localStateLoading","localStateError","localStateData","message","me","selectedIds","map","selectedId","turnSingleIntoAlbum","marginRight","joinASideAndBSide","clearSelectedItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CACA;;AAEA,OAAO,MAAMC,MAAM,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,0BAAZ;AAIP,OAAO,MAAMC,kBAAkB,GAAGN,GAAI;;;;;;;;;CAA/B;AAWP,OAAO,MAAMO,iBAAiB,GAAGP,GAAI;;;;CAA9B;AAMP,MAAMQ,+BAA+B,GAAGR,GAAI;;;;;;;;CAA5C;AAUA,MAAMS,qBAAqB,GAAGT,GAAI;;;;;;;CAAlC;;AASA,MAAMU,UAAU,GAAG,MAAM;AACvB,QAAM;AACJC,IAAAA,OAAO,EAAEC,kBADL;AAEJC,IAAAA,KAAK,EAAEC,gBAFH;AAGJC,IAAAA,IAAI,EAAEC;AAHF,MAIFf,QAAQ,CAACK,kBAAD,CAJZ;AAMA,QAAM;AACJK,IAAAA,OAAO,EAAEM,iBADL;AAEJJ,IAAAA,KAAK,EAAEK,eAFH;AAGJH,IAAAA,IAAI,EAAEI;AAHF,MAIFlB,QAAQ,CAACM,iBAAD,CAJZ;AAMA,MAAIK,kBAAJ,EAAwB,OAAO,YAAP;AACxB,MAAIE,gBAAJ,EAAsB,OAAQ,UAASD,KAAK,CAACO,OAAQ,EAA/B;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAASL,eAAf;AACA,SACEK,EAAE,IACA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDACiD,GADjD,EAEGF,cAAc,CAACG,WAAf,CAA2BC,GAA3B,CAAgCC,UAAD,IAC9B;AAAI,IAAA,GAAG,EAAEA,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,UAAtB,CADD,CAFH,CAFF,EAQE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMC,mBAAmB,EADpC;AAEE,IAAA,KAAK,EAAC,wBAFR;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,wBADR;AAEE,IAAA,OAAO,EAAE,MAAMC,iBAAiB,EAFlC;AAGE,IAAA,KAAK,EAAE;AAAED,MAAAA,WAAW,EAAE;AAAf,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,sBADR;AAEE,IAAA,OAAO,EAAE,MAAME,kBAAkB,EAFnC;AAGE,IAAA,KAAK,EAAE;AAAEF,MAAAA,WAAW,EAAE;AAAf,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CARF,CAFJ;AA8BD,CA9CD;;AAgDA,eAAehB,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Button } from \"primereact/button\";\n// import { CURRENT_USER_QUERY } from \"./Nav\";\n\nexport const Center = styled.div`\n  text-align: center;\n`;\n\nexport const CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n    }\n  }\n`;\n\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    selectedIds @client\n  }\n`;\n\nconst TURN_SINGLE_INTO_ALBUM_MUTATION = gql`\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\n    turnSingleIntoAlbum(id: $id) {\n      id\n      title\n      single\n    }\n  }\n`;\n\nconst JOIN_SINGLES_MUTATION = gql`\n  mutation JOIN_SINGLES_MUTATION($albumOneId: ID!, $albumTwoId: ID!) {\n    joinTwoSingles(albumOneId: $albumOneId, albumTwoId: $albumTwoId) {\n      id\n      title\n    }\n  }\n`;\n\nconst AdminPanel = () => {\n  const {\n    loading: currentUserLoading,\n    error: currentUserError,\n    data: currentUserData,\n  } = useQuery(CURRENT_USER_QUERY);\n\n  const {\n    loading: localStateLoading,\n    error: localStateError,\n    data: localStateData,\n  } = useQuery(LOCAL_STATE_QUERY);\n\n  if (currentUserLoading) return \"Loading...\";\n  if (currentUserError) return `Error! ${error.message}`;\n  const { me } = currentUserData;\n  return (\n    me && (\n      <>\n        <hr />\n        <ul>\n          Your Selected Items (from Apollo Local State):{\" \"}\n          {localStateData.selectedIds.map((selectedId) => (\n            <li key={selectedId}>{selectedId}</li>\n          ))}\n        </ul>\n        <Center>\n          <Button\n            onClick={() => turnSingleIntoAlbum()}\n            label=\"TURN SINGLE INTO ALBUM\"\n            style={{ marginRight: \".25em\" }}\n          />\n          <Button\n            label=\"JOIN A-SIDE AND B-SIDE\"\n            onClick={() => joinASideAndBSide()}\n            style={{ marginRight: \".25em\" }}\n          />\n          <Button\n            label=\"CLEAR SELECTED ITEMS\"\n            onClick={() => clearSelectedItems()}\n            style={{ marginRight: \".25em\" }}\n          />\n        </Center>\n      </>\n    )\n  );\n};\n\nexport default AdminPanel;\n"]},"metadata":{},"sourceType":"module"}