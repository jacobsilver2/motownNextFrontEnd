{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    selectedIds @client\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: String!) {\\n    addOrRemoveLocalIdSelection(id: $id) @client\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport formatDate from \"../lib/formatDate\";\nimport Link from \"next/link\"; // import { Card } from \"primereact/card\";\n\nimport Card from \"./Card\"; // import { Button } from \"primereact/button\";\n\nimport Button from \"./Button\";\nimport { CURRENT_USER_QUERY } from \"./Nav\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport styled from \"styled-components\";\nvar StyledFooter = styled.div.withConfig({\n  displayName: \"Album__StyledFooter\",\n  componentId: \"f8g7qf-0\"\n})([\"display:flex;justify-content:space-evenly;\"]);\nvar StyledFlexStart = styled.div.withConfig({\n  displayName: \"Album__StyledFlexStart\",\n  componentId: \"f8g7qf-1\"\n})([\"align-self:center;\"]);\nvar StlyedFlexEnd = styled.div.withConfig({\n  displayName: \"Album__StlyedFlexEnd\",\n  componentId: \"f8g7qf-2\"\n})([\"align-self:flex-end;\"]);\nexport var ADD_OR_REMOVE_LOCAL_ID_SELECTION_MUTATION = gql(_templateObject());\nexport var LOCAL_STATE_QUERY = gql(_templateObject2());\n\nvar Album = function Album(_ref) {\n  var album = _ref.album;\n\n  var _useQuery = useQuery(CURRENT_USER_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useQuery2 = useQuery(LOCAL_STATE_QUERY),\n      localStateQueryLoading = _useQuery2.loading,\n      localStateQueryError = _useQuery2.error,\n      localStateQueryData = _useQuery2.data;\n\n  var _useMutation = useMutation(ADD_OR_REMOVE_LOCAL_ID_SELECTION_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addOrRemoveLocalIdSelectionMutation = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      addOrRemoveLocalIdSelectionMutationLoading = _useMutation2$.loading,\n      addOrRemoveLocalIdSelectionMutationError = _useMutation2$.error;\n\n  function handleChecked(e) {\n    addOrRemoveLocalIdSelectionMutation({\n      variables: {\n        id: album.id\n      }\n    });\n  }\n\n  function isChecked(id) {\n    return localStateQueryData.selectedIds.includes(id);\n  }\n\n  var footer = data.me ? __jsx(StyledFooter, null, __jsx(StyledFlexStart, null, __jsx(Link, {\n    href: {\n      pathname: \"/updatealbum\",\n      query: {\n        id: album.id\n      }\n    }\n  }, __jsx(\"a\", null, __jsx(Button, {\n    buttonStyle: \"primary\",\n    icon: \"pi pi-pencil\"\n  }, \"Edit\")))), __jsx(StlyedFlexEnd, null, __jsx(Checkbox, {\n    onChange: function onChange(e) {\n      return handleChecked(e);\n    },\n    checked: isChecked(album.id)\n  }))) : null;\n\n  var title = __jsx(\"span\", null, __jsx(Link, {\n    href: {\n      pathname: \"/album\",\n      query: {\n        id: album.id\n      }\n    }\n  }, __jsx(\"a\", null, album.title || \"no title\")));\n\n  var artists = album.artists && album.artists.map(function (artist, index) {\n    return __jsx(\"span\", {\n      key: artist.name\n    }, __jsx(Link, {\n      href: {\n        pathname: \"/artist\",\n        query: {\n          id: artist.id\n        }\n      }\n    }, __jsx(\"a\", null, artist.name)), album.artists.length === index + 1 ? \" \" : \", \");\n  });\n  return __jsx(Card, {\n    title: title,\n    footer: footer,\n    subTitle: album.releaseDate ? \"released \".concat(formatDate(album.releaseDate)) : \"no release date information\"\n  }, album.format && __jsx(\"div\", {\n    className: \"format\"\n  }, \"Format: \", album.format), album.catalogNumber && __jsx(\"div\", {\n    className: \"catalognumber\"\n  }, \"Catalog #: \", album.catalogNumber), artists);\n};\n\nexport default Album;","map":null,"metadata":{},"sourceType":"module"}