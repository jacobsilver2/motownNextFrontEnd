{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Signin.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\\n    signin(email: $email, password: $password) {\\n      id\\n      email\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nimport { CURRENT_USER_QUERY } from \"./Nav\";\nvar SIGNIN_MUTATION = gql(_templateObject());\n\nvar Signin = function Signin() {\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useMutation = useMutation(SIGNIN_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signinMutation = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      mutationLoading = _useMutation2$.loading,\n      mutationError = _useMutation2$.error;\n\n  return __jsx(Form, {\n    method: \"post\",\n    onSubmit: function _callee(e) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(signinMutation({\n                variables: {\n                  email: email,\n                  password: password\n                },\n                refetchQueries: [{\n                  query: CURRENT_USER_QUERY\n                }]\n              }));\n\n            case 3:\n              setEmail(\"\");\n              setPassword(\"\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"fieldset\", {\n    disabled: mutationLoading,\n    \"aria-busy\": mutationLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Sign into your account\"), __jsx(Error, {\n    error: mutationError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Email\", __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"email\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Password\", __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Sign In!\")));\n};\n\nexport default Signin;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Signin.js"],"names":["React","useState","useMutation","gql","Form","Error","CURRENT_USER_QUERY","SIGNIN_MUTATION","Signin","email","setEmail","password","setPassword","signinMutation","mutationLoading","loading","mutationError","error","e","preventDefault","variables","refetchQueries","query","target","value"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,IAAMC,eAAe,GAAGJ,GAAH,mBAArB;;AAUA,IAAMK,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,kBACOP,QAAQ,CAAC,EAAD,CADf;AAAA,MACZQ,KADY;AAAA,MACLC,QADK;;AAAA,mBAEaT,QAAQ,CAAC,EAAD,CAFrB;AAAA,MAEZU,QAFY;AAAA,MAEFC,WAFE;;AAAA,qBAMfV,WAAW,CAACK,eAAD,CANI;AAAA;AAAA,MAIjBM,cAJiB;AAAA;AAAA,MAKNC,eALM,kBAKfC,OALe;AAAA,MAKkBC,aALlB,kBAKWC,KALX;;AAQnB,SACE,MAAC,IAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,QAAQ,EAAE,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AACRA,cAAAA,CAAC,CAACC,cAAF;AADQ;AAAA,+CAEFN,cAAc,CAAC;AACnBO,gBAAAA,SAAS,EAAE;AAAEX,kBAAAA,KAAK,EAALA,KAAF;AAASE,kBAAAA,QAAQ,EAARA;AAAT,iBADQ;AAEnBU,gBAAAA,cAAc,EAAE,CAAC;AAAEC,kBAAAA,KAAK,EAAEhB;AAAT,iBAAD;AAFG,eAAD,CAFZ;;AAAA;AAMRI,cAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,cAAAA,WAAW,CAAC,EAAD,CAAX;;AAPQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE;AAAU,IAAA,QAAQ,EAAEE,eAApB;AAAqC,iBAAWA,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEE,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,KAAK,EAAEP,KAJT;AAKE,IAAA,QAAQ,EAAE,kBAAAS,CAAC;AAAA,aAAIR,QAAQ,CAACQ,CAAC,CAACK,MAAF,CAASC,KAAV,CAAZ;AAAA,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,EAaE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,KAAK,EAAEb,QAJT;AAKE,IAAA,QAAQ,EAAE,kBAAAO,CAAC;AAAA,aAAIN,WAAW,CAACM,CAAC,CAACK,MAAF,CAASC,KAAV,CAAf;AAAA,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbF,EAwBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF,CAZF,CADF;AAyCD,CAjDD;;AAmDA,eAAehB,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nimport { CURRENT_USER_QUERY } from \"./Nav\";\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst Signin = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [\n    signinMutation,\n    { loading: mutationLoading, error: mutationError }\n  ] = useMutation(SIGNIN_MUTATION);\n\n  return (\n    <Form\n      method=\"post\"\n      onSubmit={async e => {\n        e.preventDefault();\n        await signinMutation({\n          variables: { email, password },\n          refetchQueries: [{ query: CURRENT_USER_QUERY }]\n        });\n        setEmail(\"\");\n        setPassword(\"\");\n      }}\n    >\n      <fieldset disabled={mutationLoading} aria-busy={mutationLoading}>\n        <h2>Sign into your account</h2>\n        <Error error={mutationError} />\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n        </label>\n\n        <button type=\"submit\">Sign In!</button>\n      </fieldset>\n    </Form>\n  );\n};\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}