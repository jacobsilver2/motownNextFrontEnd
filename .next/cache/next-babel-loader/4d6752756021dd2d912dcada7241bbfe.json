{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Pagination.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\";\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    songsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PAGINATION_QUERY);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Error!\");\n  const count = data.songsConnection.aggregate.count;\n  const pages = count / perPage;\n  return __jsx(PaginationStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Page 1 of \", pages));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Pagination.js"],"names":["React","gql","useQuery","PaginationStyles","perPage","PAGINATION_QUERY","Pagination","loading","error","data","count","songsConnection","aggregate","pages"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,gBAAgB,GAAGJ,GAAI;;;;;;;;CAA7B;;AAUA,MAAMK,UAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACG,gBAAD,CAAzC;AACA,MAAIE,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACX,QAAME,KAAK,GAAGD,IAAI,CAACE,eAAL,CAAqBC,SAArB,CAA+BF,KAA7C;AACA,QAAMG,KAAK,GAAGH,KAAK,GAAGN,OAAtB;AACA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcS,KAAd,CADF,CADF;AAKD,CAXD;;AAaA,eAAeP,UAAf","sourcesContent":["import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\";\n\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    songsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = () => {\n  const { loading, error, data } = useQuery(PAGINATION_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error!</p>;\n  const count = data.songsConnection.aggregate.count;\n  const pages = count / perPage;\n  return (\n    <PaginationStyles>\n      <p>Page 1 of {pages}</p>\n    </PaginationStyles>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}