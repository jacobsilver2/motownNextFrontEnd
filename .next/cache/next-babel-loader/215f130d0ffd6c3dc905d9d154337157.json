{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Search.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_COMPOSERS_QUERY($searchTerm: String!) {\\n    composers(where: { OR: [{ name_contains: $searchTerm }] }) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_ALBUMS_QUERY($searchTerm: String!) {\\n    albums(where: { OR: [{ title_contains: $searchTerm }] }) {\\n      id\\n      title\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_ARTISTS_QUERY($searchTerm: String!) {\\n    artists(where: { OR: [{ name_contains: $searchTerm }] }) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_SONGS_QUERY($searchTerm: String!) {\\n    songs(\\n      where: {\\n        OR: [\\n          { title_contains: $searchTerm }\\n          { altTitle_contains: $searchTerm }\\n          { fromFilm_contains: $searchTerm }\\n        ]\\n      }\\n    ) {\\n      id\\n      title\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport Downshift, { resetIdCounter } from \"downshift\";\nimport Router from \"next/router\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport Select from \"react-select\";\nimport { DropDown as StyledDropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\nimport Title from \"./styles/song/title\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport customTheme from \"./styles/reactSelectTheme\";\nimport styled from \"styled-components\";\nvar StyledSearchBar = styled.div.withConfig({\n  displayName: \"Search__StyledSearchBar\",\n  componentId: \"sexg82-0\"\n})([\"display:grid;grid-template-columns:5fr 1fr;grid-gap:1rem;\"]);\nvar SEARCH_SONGS_QUERY = gql(_templateObject());\nvar SEARCH_ARTISTS_QUERY = gql(_templateObject2());\nvar SEARCH_ALBUMS_QUERY = gql(_templateObject3());\nvar SEARCH_COMPOSERS_QUERY = gql(_templateObject4());\n\nfunction routeToItem(route, item) {\n  item && Router.push({\n    pathname: \"/\".concat(route),\n    query: {\n      id: item.id\n    }\n  });\n}\n\nfunction returnQuery(item) {\n  if (item === \"song\") {\n    return SEARCH_SONGS_QUERY;\n  }\n\n  if (item === \"album\") {\n    return SEARCH_ALBUMS_QUERY;\n  }\n\n  if (item === \"artist\") {\n    return SEARCH_ARTISTS_QUERY;\n  }\n\n  if (item === \"composer\") {\n    return SEARCH_COMPOSERS_QUERY;\n  }\n}\n\nvar dropdownSelectItems = [{\n  label: \"Song\",\n  value: \"song\"\n}, {\n  label: \"Artist\",\n  value: \"artist\"\n}, {\n  label: \"Album\",\n  value: \"album\"\n}, {\n  label: \"Composer\",\n  value: \"composer\"\n}];\n\nvar AutoComplete = /*#__PURE__*/function (_React$Component) {\n  _inherits(AutoComplete, _React$Component);\n\n  function AutoComplete() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoComplete);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoComplete)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      items: [],\n      loading: false,\n      item: \"song\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectChange\", function (event) {\n      return _this.setState({\n        item: event.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", debounce(function _callee(e, client) {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.t0 = e.target.value;\n\n              if (!_context.t0) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(client.query({\n                query: returnQuery(_this.state.item),\n                variables: {\n                  searchTerm: e.target.value\n                }\n              }));\n\n            case 5:\n              _context.t0 = _context.sent;\n\n            case 6:\n              response = _context.t0;\n              e.target.value && _this.setState({\n                items: response.data.songs || response.data.albums || response.data.composers || response.data.artists,\n                loading: false\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }, 350));\n\n    return _this;\n  }\n\n  _createClass(AutoComplete, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      resetIdCounter();\n      return __jsx(SearchStyles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, __jsx(Downshift, {\n        onChange: function onChange(item) {\n          return routeToItem(_this2.state.item, item);\n        },\n        itemToString: function itemToString(item) {\n          return item === null ? \"\" : item.title || item.name;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            getItemProps = _ref.getItemProps,\n            isOpen = _ref.isOpen,\n            inputValue = _ref.inputValue,\n            highlightedIndex = _ref.highlightedIndex;\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, __jsx(ApolloConsumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, function (client) {\n          return __jsx(StyledSearchBar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, __jsx(\"input\", _extends({}, getInputProps({\n            type: \"search\",\n            placeholder: \"Search\",\n            id: \"search\",\n            className: _this2.state.loading ? \"loading\" : \"\",\n            onChange: function onChange(e) {\n              e.persist();\n\n              _this2.onChange(e, client);\n            }\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          })), __jsx(Select, {\n            theme: customTheme,\n            value: _this2.state.item,\n            options: dropdownSelectItems,\n            onChange: _this2.handleSelectChange,\n            placeholder: \"Search for a\".concat(_this2.state.item[0], \" \").concat(_this2.state.item.toLowerCase()),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }));\n        }), isOpen ? __jsx(StyledDropDown, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, _this2.state.items.map(function (item, index) {\n          return __jsx(DropDownItem, _extends({}, getItemProps({\n            key: item.id,\n            index: index,\n            item: item\n          }), {\n            highlighted: index === highlightedIndex,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }), __jsx(Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }, item.title || item.name));\n        })) : null);\n      }));\n    }\n  }]);\n\n  return AutoComplete;\n}(React.Component);\n\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Search.js"],"names":["React","Downshift","resetIdCounter","Router","ApolloConsumer","gql","debounce","Select","DropDown","StyledDropDown","DropDownItem","SearchStyles","Title","Dropdown","customTheme","styled","StyledSearchBar","div","SEARCH_SONGS_QUERY","SEARCH_ARTISTS_QUERY","SEARCH_ALBUMS_QUERY","SEARCH_COMPOSERS_QUERY","routeToItem","route","item","push","pathname","query","id","returnQuery","dropdownSelectItems","label","value","AutoComplete","items","loading","event","setState","e","client","target","state","variables","searchTerm","response","data","songs","albums","composers","artists","title","name","getInputProps","getItemProps","isOpen","inputValue","highlightedIndex","type","placeholder","className","onChange","persist","handleSelectChange","toLowerCase","map","index","key","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Downshift, { resetIdCounter } from \"downshift\";\nimport Router from \"next/router\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport Select from \"react-select\";\nimport {\n  DropDown as StyledDropDown,\n  DropDownItem,\n  SearchStyles,\n} from \"./styles/DropDown\";\nimport Title from \"./styles/song/title\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport customTheme from \"./styles/reactSelectTheme\";\nimport styled from \"styled-components\";\n\nconst StyledSearchBar = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 1fr;\n  grid-gap: 1rem;\n`;\n\nconst SEARCH_SONGS_QUERY = gql`\n  query SEARCH_SONGS_QUERY($searchTerm: String!) {\n    songs(\n      where: {\n        OR: [\n          { title_contains: $searchTerm }\n          { altTitle_contains: $searchTerm }\n          { fromFilm_contains: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      title\n    }\n  }\n`;\nconst SEARCH_ARTISTS_QUERY = gql`\n  query SEARCH_ARTISTS_QUERY($searchTerm: String!) {\n    artists(where: { OR: [{ name_contains: $searchTerm }] }) {\n      id\n      name\n    }\n  }\n`;\n\nconst SEARCH_ALBUMS_QUERY = gql`\n  query SEARCH_ALBUMS_QUERY($searchTerm: String!) {\n    albums(where: { OR: [{ title_contains: $searchTerm }] }) {\n      id\n      title\n    }\n  }\n`;\nconst SEARCH_COMPOSERS_QUERY = gql`\n  query SEARCH_COMPOSERS_QUERY($searchTerm: String!) {\n    composers(where: { OR: [{ name_contains: $searchTerm }] }) {\n      id\n      name\n    }\n  }\n`;\n\nfunction routeToItem(route, item) {\n  item &&\n    Router.push({\n      pathname: `/${route}`,\n      query: {\n        id: item.id,\n      },\n    });\n}\n\nfunction returnQuery(item) {\n  if (item === \"song\") {\n    return SEARCH_SONGS_QUERY;\n  }\n  if (item === \"album\") {\n    return SEARCH_ALBUMS_QUERY;\n  }\n  if (item === \"artist\") {\n    return SEARCH_ARTISTS_QUERY;\n  }\n  if (item === \"composer\") {\n    return SEARCH_COMPOSERS_QUERY;\n  }\n}\n\nconst dropdownSelectItems = [\n  { label: \"Song\", value: \"song\" },\n  { label: \"Artist\", value: \"artist\" },\n  { label: \"Album\", value: \"album\" },\n  { label: \"Composer\", value: \"composer\" },\n];\n\nclass AutoComplete extends React.Component {\n  state = {\n    items: [],\n    loading: false,\n    item: \"song\",\n  };\n\n  handleSelectChange = (event) => this.setState({ item: event.value });\n\n  onChange = debounce(async (e, client) => {\n    this.setState({ loading: true });\n    const response =\n      e.target.value &&\n      (await client.query({\n        query: returnQuery(this.state.item),\n        variables: { searchTerm: e.target.value },\n      }));\n    e.target.value &&\n      this.setState({\n        items:\n          response.data.songs ||\n          response.data.albums ||\n          response.data.composers ||\n          response.data.artists,\n        loading: false,\n      });\n  }, 350);\n\n  render() {\n    resetIdCounter();\n    return (\n      <SearchStyles>\n        <Downshift\n          onChange={(item) => routeToItem(this.state.item, item)}\n          itemToString={(item) =>\n            item === null ? \"\" : item.title || item.name\n          }\n        >\n          {({\n            getInputProps,\n            getItemProps,\n            isOpen,\n            inputValue,\n            highlightedIndex,\n          }) => (\n            <div>\n              <ApolloConsumer>\n                {(client) => (\n                  <StyledSearchBar>\n                    <input\n                      {...getInputProps({\n                        type: \"search\",\n                        placeholder: \"Search\",\n                        id: \"search\",\n                        className: this.state.loading ? \"loading\" : \"\",\n                        onChange: (e) => {\n                          e.persist();\n                          this.onChange(e, client);\n                        },\n                      })}\n                    />\n                    <Select\n                      theme={customTheme}\n                      value={this.state.item}\n                      options={dropdownSelectItems}\n                      onChange={this.handleSelectChange}\n                      placeholder={`Search for a${\n                        this.state.item[0]\n                      } ${this.state.item.toLowerCase()}`}\n                    />\n                  </StyledSearchBar>\n                )}\n              </ApolloConsumer>\n              {isOpen ? (\n                <StyledDropDown>\n                  {this.state.items.map((item, index) => (\n                    <DropDownItem\n                      {...getItemProps({ key: item.id, index, item })}\n                      highlighted={index === highlightedIndex}\n                    >\n                      <Title>{item.title || item.name}</Title>\n                    </DropDownItem>\n                  ))}\n                </StyledDropDown>\n              ) : null}\n            </div>\n          )}\n        </Downshift>\n      </SearchStyles>\n    );\n  }\n}\n\nexport default AutoComplete;\n"]},"metadata":{},"sourceType":"module"}