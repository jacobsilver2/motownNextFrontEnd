{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport ButtonComponent from \"./Button\"; // import { CURRENT_USER_QUERY } from \"./Nav\";\n\nexport const Center = styled.div.withConfig({\n  displayName: \"AdminPanel__Center\",\n  componentId: \"sc-1o45frt-0\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nexport const AdminPanelWrapper = styled.div.withConfig({\n  displayName: \"AdminPanel__AdminPanelWrapper\",\n  componentId: \"sc-1o45frt-1\"\n})([\"border-top:10px solid \", \";display:grid;grid-template-columns:1fr 1fr 1fr;grid-gap:20px;justify-content:center;align-items:stretch;position:fixed;bottom:0;left:0;right:0;background-color:white;height:150px;overflow:scroll;\"], props => props.theme.black);\nexport const SelectedItemsList = styled.ul.withConfig({\n  displayName: \"AdminPanel__SelectedItemsList\",\n  componentId: \"sc-1o45frt-2\"\n})([\"\"]);\nexport const CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n    }\n  }\n`;\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    selectedIds @client\n  }\n`;\nconst TURN_SINGLE_INTO_ALBUM_MUTATION = gql`\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\n    turnSingleIntoAlbum(id: $id) {\n      id\n      title\n      single\n    }\n  }\n`;\nconst JOIN_SINGLES_MUTATION = gql`\n  mutation JOIN_SINGLES_MUTATION($albumOneId: ID!, $albumTwoId: ID!) {\n    joinTwoSingles(albumOneId: $albumOneId, albumTwoId: $albumTwoId) {\n      id\n      title\n    }\n  }\n`;\nconst CLEAR_SELECTED_IDS = gql`\n  mutation {\n    clearSelectedIds @client\n  }\n`;\n\nconst AdminPanel = () => {\n  const [turnSingleIntoAlbumMutation, {\n    loading: turnSingleIntoAlbumLoading,\n    error: turnSingleIntoAlbumError\n  }] = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION);\n  const [joinTwoSinglesMutation, {\n    loading: joinTwoSinglesLoading,\n    error: joinTwoSinglesError\n  }] = useMutation(JOIN_SINGLES_MUTATION);\n  const [clearSelectedIdsMutation, {\n    loading: clearSelectedIdsLoading,\n    error: clearSelectedIdsError\n  }] = useMutation(CLEAR_SELECTED_IDS);\n\n  async function turnSingleIntoAlbum() {\n    turnSingleIntoAlbumMutation({\n      variables: {\n        id: localStateData.selectedIds[0]\n      }\n    });\n    turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n    clearSelectedIdsMutation();\n  }\n\n  async function joinASideAndBSide() {\n    joinTwoSinglesMutation({\n      variables: {\n        albumOneId: localStateData.selectedIds[0],\n        albumTwoId: localStateData.selectedIds[1]\n      }\n    });\n    joinTwoSinglesError && console.log(joinTwoSinglesError);\n    clearSelectedIdsMutation();\n  }\n\n  const {\n    loading: currentUserLoading,\n    error: currentUserError,\n    data: currentUserData\n  } = useQuery(CURRENT_USER_QUERY);\n  const {\n    loading: localStateLoading,\n    error: localStateError,\n    data: localStateData\n  } = useQuery(LOCAL_STATE_QUERY);\n  if (currentUserLoading) return \"Loading...\";\n  if (currentUserError) return `Error! ${error.message}`;\n  const {\n    me\n  } = currentUserData;\n  return me && __jsx(React.Fragment, null, __jsx(AdminPanelWrapper, null, __jsx(ButtonComponent, {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    marginLeft: \"20px\",\n    marginRight: \"20px\",\n    buttonSize: \"large\",\n    onClick: turnSingleIntoAlbum\n  }, \"Turn Single Into Album\"), __jsx(ButtonComponent, {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    marginLeft: \"20px\",\n    marginRight: \"20px\",\n    onClick: turnSingleIntoAlbum,\n    buttonStyle: \"danger\",\n    buttonSize: \"large\"\n  }, \"Clear Selected Items\"), __jsx(ButtonComponent, {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    marginLeft: \"20px\",\n    marginRight: \"20px\",\n    buttonSize: \"large\",\n    onClick: joinASideAndBSide\n  }, \"Join A-Side and B-Side\")));\n};\n\nexport default AdminPanel;","map":null,"metadata":{},"sourceType":"module"}