{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Albums.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ALBUMS_QUERY($skip: Int = 0, $first: Int = \", \") {\\n    albums(first: $first, skip: $skip, orderBy: title_ASC ) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nvar ALL_ALBUMS_QUERY = gql(_templateObject(), perPage);\nvar AlbumsList = styled.div.withConfig({\n  displayName: \"Albums__AlbumsList\",\n  componentId: \"sc-1rsazgb-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr 1fr;grid-gap:60px;max-width:\", \";margin:0 auto;\"], function (props) {\n  return props.theme.maxWidth;\n});\nvar Center = styled.div.withConfig({\n  displayName: \"Albums__Center\",\n  componentId: \"sc-1rsazgb-1\"\n})([\"text-align:center;\"]);\n\nvar Albums = function Albums(_ref) {\n  var page = _ref.page;\n\n  var _useQuery = useQuery(ALL_ALBUMS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Error :(\");\n  var albums = data.albums.map(function (album) {\n    return __jsx(Album, {\n      key: album.id,\n      album: album,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  });\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Pagination, {\n    page: page,\n    model: \"albums\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(AlbumsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, albums), __jsx(Pagination, {\n    page: page,\n    model: \"albums\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n};\n\nexport default Albums;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Albums.js"],"names":["React","useQuery","gql","styled","Album","Pagination","perPage","ALL_ALBUMS_QUERY","AlbumsList","div","props","theme","maxWidth","Center","Albums","page","variables","skip","first","loading","error","data","albums","map","album","id"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,IAAMC,gBAAgB,GAAGL,GAAH,oBACmCI,OADnC,CAAtB;AAgBA,IAAME,UAAU,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,mGAID,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,QAAhB;AAAA,CAJJ,CAAhB;AAQA,IAAMC,MAAM,GAAGV,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,0BAAZ;;AAIA,IAAMK,MAAM,GAAG,SAATA,MAAS,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACMd,QAAQ,CAACM,gBAAD,EAAmB;AAC1DS,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEF,IAAI,GAAGT,OAAP,GAAiBA,OAAzB;AAAkCY,MAAAA,KAAK,EAAEZ;AAAzC;AAD+C,GAAnB,CADd;AAAA,MACnBa,OADmB,aACnBA,OADmB;AAAA,MACVC,KADU,aACVA,KADU;AAAA,MACHC,IADG,aACHA,IADG;;AAI3B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,MAAME,MAAM,GAAGD,IAAI,CAACC,MAAL,CAAYC,GAAZ,CAAgB,UAAAC,KAAK;AAAA,WAClC,MAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,MAAA,KAAK,EAAED,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkC;AAAA,GAArB,CAAf;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAET,IAAlB;AAAwB,IAAA,KAAK,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaO,MAAb,CAFF,EAGE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEP,IAAlB;AAAwB,IAAA,KAAK,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAlBD;;AAoBA,eAAeD,MAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\n\nconst ALL_ALBUMS_QUERY = gql`\n  query ALL_ALBUMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    albums(first: $first, skip: $skip, orderBy: title_ASC ) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst AlbumsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst Albums = ({ page }) => {\n  const { loading, error, data } = useQuery(ALL_ALBUMS_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage }\n  });\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const albums = data.albums.map(album => (\n    <Album key={album.id} album={album} />\n  ));\n\n  return (\n    <Center>\n      <Pagination page={page} model=\"albums\" />\n      <AlbumsList>{albums}</AlbumsList>\n      <Pagination page={page} model=\"albums\" />\n    </Center>\n  );\n};\n\nexport default Albums;\n"]},"metadata":{},"sourceType":"module"}