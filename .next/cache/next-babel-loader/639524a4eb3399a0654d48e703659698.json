{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/AdminPanel.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Button } from \"primereact/button\"; // import { CURRENT_USER_QUERY } from \"./Nav\";\n\nexport const Center = styled.div.withConfig({\n  displayName: \"AdminPanel__Center\",\n  componentId: \"sc-1o45frt-0\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nexport const AdminPanelWrapper = styled.div.withConfig({\n  displayName: \"AdminPanel__AdminPanelWrapper\",\n  componentId: \"sc-1o45frt-1\"\n})([\"border-top:10px solid \", \";display:grid;grid-template-columns:1fr 1fr 1fr 1fr;justify-content:space-between;align-items:stretch;position:fixed;bottom:0;left:0;right:0;background-color:white;height:200px;\"], props => props.theme.black);\nexport const SelectedItemsList = styled.ul.withConfig({\n  displayName: \"AdminPanel__SelectedItemsList\",\n  componentId: \"sc-1o45frt-2\"\n})([\"\"]);\nexport const CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n    }\n  }\n`;\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    selectedIds @client\n  }\n`;\nconst TURN_SINGLE_INTO_ALBUM_MUTATION = gql`\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\n    turnSingleIntoAlbum(id: $id) {\n      id\n      title\n      single\n    }\n  }\n`;\nconst JOIN_SINGLES_MUTATION = gql`\n  mutation JOIN_SINGLES_MUTATION($albumOneId: ID!, $albumTwoId: ID!) {\n    joinTwoSingles(albumOneId: $albumOneId, albumTwoId: $albumTwoId) {\n      id\n      title\n    }\n  }\n`;\n\nconst AdminPanel = () => {\n  const [turnSingleIntoAlbumMutation, {\n    loading: turnSingleIntoAlbumLoading,\n    error: turnSingleIntoAlbumError\n  }] = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION);\n  const [joinTwoSinglesMutation, {\n    loading: joinTwoSinglesLoading,\n    error: joinTwoSinglesError\n  }] = useMutation(JOIN_SINGLES_MUTATION);\n\n  async function turnSingleIntoAlbum() {\n    turnSingleIntoAlbumMutation({\n      variables: {\n        id: checkedItems[0]\n      }\n    });\n    turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n  }\n\n  async function joinASideAndBSide() {\n    joinTwoSinglesMutation({\n      variables: {\n        albumOneId: checkedItems[0],\n        albumTwoId: checkedItems[1]\n      }\n    });\n    joinTwoSinglesError && console.log(joinTwoSinglesError);\n  }\n\n  const {\n    loading: currentUserLoading,\n    error: currentUserError,\n    data: currentUserData\n  } = useQuery(CURRENT_USER_QUERY);\n  const {\n    loading: localStateLoading,\n    error: localStateError,\n    data: localStateData\n  } = useQuery(LOCAL_STATE_QUERY);\n  if (currentUserLoading) return \"Loading...\";\n  if (currentUserError) return `Error! ${error.message}`;\n  const {\n    me\n  } = currentUserData;\n  return me && __jsx(React.Fragment, null, __jsx(AdminPanelWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(SelectedItemsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Selected Items:\", localStateData.selectedIds.map(selectedId => __jsx(\"li\", {\n    key: selectedId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, selectedId))), __jsx(Button, {\n    onClick: () => turnSingleIntoAlbum(),\n    label: \"TURN SINGLE INTO ALBUM\",\n    style: {\n      marginRight: \".25em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), __jsx(Button, {\n    label: \"CLEAR SELECTED ITEMS\",\n    onClick: () => clearSelectedItems(),\n    style: {\n      marginRight: \".25em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), __jsx(Button, {\n    label: \"JOIN A-SIDE AND B-SIDE\",\n    onClick: () => joinASideAndBSide(),\n    style: {\n      marginRight: \".25em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })));\n};\n\nexport default AdminPanel;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/AdminPanel.js"],"names":["React","useState","styled","gql","useQuery","useMutation","Button","Center","div","AdminPanelWrapper","props","theme","black","SelectedItemsList","ul","CURRENT_USER_QUERY","LOCAL_STATE_QUERY","TURN_SINGLE_INTO_ALBUM_MUTATION","JOIN_SINGLES_MUTATION","AdminPanel","turnSingleIntoAlbumMutation","loading","turnSingleIntoAlbumLoading","error","turnSingleIntoAlbumError","joinTwoSinglesMutation","joinTwoSinglesLoading","joinTwoSinglesError","turnSingleIntoAlbum","variables","id","checkedItems","console","log","joinASideAndBSide","albumOneId","albumTwoId","currentUserLoading","currentUserError","data","currentUserData","localStateLoading","localStateError","localStateData","message","me","selectedIds","map","selectedId","marginRight","clearSelectedItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CACA;;AAEA,OAAO,MAAMC,MAAM,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,+DAAZ;AAOP,OAAO,MAAMC,iBAAiB,GAAGP,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,oNACFE,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,KADpB,CAAvB;AAcP,OAAO,MAAMC,iBAAiB,GAAGX,MAAM,CAACY,EAAV;AAAA;AAAA;AAAA,QAAvB;AAIP,OAAO,MAAMC,kBAAkB,GAAGZ,GAAI;;;;;;;;;CAA/B;AAWP,OAAO,MAAMa,iBAAiB,GAAGb,GAAI;;;;CAA9B;AAMP,MAAMc,+BAA+B,GAAGd,GAAI;;;;;;;;CAA5C;AAUA,MAAMe,qBAAqB,GAAGf,GAAI;;;;;;;CAAlC;;AASA,MAAMgB,UAAU,GAAG,MAAM;AACvB,QAAM,CACJC,2BADI,EAEJ;AAAEC,IAAAA,OAAO,EAAEC,0BAAX;AAAuCC,IAAAA,KAAK,EAAEC;AAA9C,GAFI,IAGFnB,WAAW,CAACY,+BAAD,CAHf;AAKA,QAAM,CACJQ,sBADI,EAEJ;AAAEJ,IAAAA,OAAO,EAAEK,qBAAX;AAAkCH,IAAAA,KAAK,EAAEI;AAAzC,GAFI,IAGFtB,WAAW,CAACa,qBAAD,CAHf;;AAKA,iBAAeU,mBAAf,GAAqC;AACnCR,IAAAA,2BAA2B,CAAC;AAAES,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAEC,YAAY,CAAC,CAAD;AAAlB;AAAb,KAAD,CAA3B;AACAP,IAAAA,wBAAwB,IAAIQ,OAAO,CAACC,GAAR,CAAYT,wBAAZ,CAA5B;AACD;;AAED,iBAAeU,iBAAf,GAAmC;AACjCT,IAAAA,sBAAsB,CAAC;AACrBI,MAAAA,SAAS,EAAE;AAAEM,QAAAA,UAAU,EAAEJ,YAAY,CAAC,CAAD,CAA1B;AAA+BK,QAAAA,UAAU,EAAEL,YAAY,CAAC,CAAD;AAAvD;AADU,KAAD,CAAtB;AAGAJ,IAAAA,mBAAmB,IAAIK,OAAO,CAACC,GAAR,CAAYN,mBAAZ,CAAvB;AACD;;AACD,QAAM;AACJN,IAAAA,OAAO,EAAEgB,kBADL;AAEJd,IAAAA,KAAK,EAAEe,gBAFH;AAGJC,IAAAA,IAAI,EAAEC;AAHF,MAIFpC,QAAQ,CAACW,kBAAD,CAJZ;AAMA,QAAM;AACJM,IAAAA,OAAO,EAAEoB,iBADL;AAEJlB,IAAAA,KAAK,EAAEmB,eAFH;AAGJH,IAAAA,IAAI,EAAEI;AAHF,MAIFvC,QAAQ,CAACY,iBAAD,CAJZ;AAMA,MAAIqB,kBAAJ,EAAwB,OAAO,YAAP;AACxB,MAAIC,gBAAJ,EAAsB,OAAQ,UAASf,KAAK,CAACqB,OAAQ,EAA/B;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAASL,eAAf;AACA,SACEK,EAAE,IACA,4BACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEGF,cAAc,CAACG,WAAf,CAA2BC,GAA3B,CAAgCC,UAAD,IAC9B;AAAI,IAAA,GAAG,EAAEA,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,UAAtB,CADD,CAFH,CADF,EAOE,MAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMpB,mBAAmB,EADpC;AAEE,IAAA,KAAK,EAAC,wBAFR;AAGE,IAAA,KAAK,EAAE;AAAEqB,MAAAA,WAAW,EAAE;AAAf,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAYE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,sBADR;AAEE,IAAA,OAAO,EAAE,MAAMC,kBAAkB,EAFnC;AAGE,IAAA,KAAK,EAAE;AAAED,MAAAA,WAAW,EAAE;AAAf,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAiBE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,wBADR;AAEE,IAAA,OAAO,EAAE,MAAMf,iBAAiB,EAFlC;AAGE,IAAA,KAAK,EAAE;AAAEe,MAAAA,WAAW,EAAE;AAAf,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CAFJ;AA6BD,CAlED;;AAoEA,eAAe9B,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Button } from \"primereact/button\";\n// import { CURRENT_USER_QUERY } from \"./Nav\";\n\nexport const Center = styled.div`\n  /* text-align: center; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const AdminPanelWrapper = styled.div`\n  border-top: 10px solid ${(props) => props.theme.black};\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  justify-content: space-between;\n  align-items: stretch;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n  height: 200px;\n`;\n\nexport const SelectedItemsList = styled.ul`\n  /* align-self: flex-start; */\n`;\n\nexport const CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n    }\n  }\n`;\n\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    selectedIds @client\n  }\n`;\n\nconst TURN_SINGLE_INTO_ALBUM_MUTATION = gql`\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\n    turnSingleIntoAlbum(id: $id) {\n      id\n      title\n      single\n    }\n  }\n`;\n\nconst JOIN_SINGLES_MUTATION = gql`\n  mutation JOIN_SINGLES_MUTATION($albumOneId: ID!, $albumTwoId: ID!) {\n    joinTwoSingles(albumOneId: $albumOneId, albumTwoId: $albumTwoId) {\n      id\n      title\n    }\n  }\n`;\n\nconst AdminPanel = () => {\n  const [\n    turnSingleIntoAlbumMutation,\n    { loading: turnSingleIntoAlbumLoading, error: turnSingleIntoAlbumError },\n  ] = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION);\n\n  const [\n    joinTwoSinglesMutation,\n    { loading: joinTwoSinglesLoading, error: joinTwoSinglesError },\n  ] = useMutation(JOIN_SINGLES_MUTATION);\n\n  async function turnSingleIntoAlbum() {\n    turnSingleIntoAlbumMutation({ variables: { id: checkedItems[0] } });\n    turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n  }\n\n  async function joinASideAndBSide() {\n    joinTwoSinglesMutation({\n      variables: { albumOneId: checkedItems[0], albumTwoId: checkedItems[1] },\n    });\n    joinTwoSinglesError && console.log(joinTwoSinglesError);\n  }\n  const {\n    loading: currentUserLoading,\n    error: currentUserError,\n    data: currentUserData,\n  } = useQuery(CURRENT_USER_QUERY);\n\n  const {\n    loading: localStateLoading,\n    error: localStateError,\n    data: localStateData,\n  } = useQuery(LOCAL_STATE_QUERY);\n\n  if (currentUserLoading) return \"Loading...\";\n  if (currentUserError) return `Error! ${error.message}`;\n  const { me } = currentUserData;\n  return (\n    me && (\n      <>\n        <AdminPanelWrapper>\n          <SelectedItemsList>\n            Selected Items:\n            {localStateData.selectedIds.map((selectedId) => (\n              <li key={selectedId}>{selectedId}</li>\n            ))}\n          </SelectedItemsList>\n          <Button\n            onClick={() => turnSingleIntoAlbum()}\n            label=\"TURN SINGLE INTO ALBUM\"\n            style={{ marginRight: \".25em\" }}\n          />\n          <Button\n            label=\"CLEAR SELECTED ITEMS\"\n            onClick={() => clearSelectedItems()}\n            style={{ marginRight: \".25em\" }}\n          />\n          <Button\n            label=\"JOIN A-SIDE AND B-SIDE\"\n            onClick={() => joinASideAndBSide()}\n            style={{ marginRight: \".25em\" }}\n          />\n        </AdminPanelWrapper>\n      </>\n    )\n  );\n};\n\nexport default AdminPanel;\n"]},"metadata":{},"sourceType":"module"}