{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/AdminPanel.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport ButtonComponent from \"./Button\"; // import { CURRENT_USER_QUERY } from \"./Nav\";\n\nexport const Center = styled.div.withConfig({\n  displayName: \"AdminPanel__Center\",\n  componentId: \"sc-1o45frt-0\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nexport const AdminPanelWrapper = styled.div.withConfig({\n  displayName: \"AdminPanel__AdminPanelWrapper\",\n  componentId: \"sc-1o45frt-1\"\n})([\"border-top:10px solid \", \";display:grid;grid-template-columns:1fr 1fr 1fr 1fr;grid-gap:20px;justify-content:space-between;align-items:stretch;position:fixed;bottom:0;left:0;right:0;background-color:white;height:150px;overflow:scroll;\"], props => props.theme.black);\nexport const SelectedItemsList = styled.ul.withConfig({\n  displayName: \"AdminPanel__SelectedItemsList\",\n  componentId: \"sc-1o45frt-2\"\n})([\"\"]);\nexport const CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n    }\n  }\n`;\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    selectedIds @client\n  }\n`;\nconst TURN_SINGLE_INTO_ALBUM_MUTATION = gql`\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\n    turnSingleIntoAlbum(id: $id) {\n      id\n      title\n      single\n    }\n  }\n`;\nconst JOIN_SINGLES_MUTATION = gql`\n  mutation JOIN_SINGLES_MUTATION($albumOneId: ID!, $albumTwoId: ID!) {\n    joinTwoSingles(albumOneId: $albumOneId, albumTwoId: $albumTwoId) {\n      id\n      title\n    }\n  }\n`;\nconst CLEAR_SELECTED_IDS = gql`\n  mutation {\n    clearSelectedIds @client\n  }\n`;\n\nconst AdminPanel = () => {\n  const [turnSingleIntoAlbumMutation, {\n    loading: turnSingleIntoAlbumLoading,\n    error: turnSingleIntoAlbumError\n  }] = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION);\n  const [joinTwoSinglesMutation, {\n    loading: joinTwoSinglesLoading,\n    error: joinTwoSinglesError\n  }] = useMutation(JOIN_SINGLES_MUTATION);\n  const [clearSelectedIdsMutation, {\n    loading: clearSelectedIdsLoading,\n    error: clearSelectedIdsError\n  }] = useMutation(CLEAR_SELECTED_IDS);\n\n  async function turnSingleIntoAlbum() {\n    turnSingleIntoAlbumMutation({\n      variables: {\n        id: localStateData.selectedIds[0]\n      }\n    });\n    turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n    clearSelectedIdsMutation();\n  }\n\n  async function joinASideAndBSide() {\n    joinTwoSinglesMutation({\n      variables: {\n        albumOneId: checkedItems[0],\n        albumTwoId: checkedItems[1]\n      }\n    });\n    joinTwoSinglesError && console.log(joinTwoSinglesError);\n  }\n\n  const {\n    loading: currentUserLoading,\n    error: currentUserError,\n    data: currentUserData\n  } = useQuery(CURRENT_USER_QUERY);\n  const {\n    loading: localStateLoading,\n    error: localStateError,\n    data: localStateData\n  } = useQuery(LOCAL_STATE_QUERY);\n  if (currentUserLoading) return \"Loading...\";\n  if (currentUserError) return `Error! ${error.message}`;\n  const {\n    me\n  } = currentUserData;\n  return me && __jsx(React.Fragment, null, __jsx(AdminPanelWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, __jsx(SelectedItemsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Selected Items:\"), localStateData.selectedIds.map(selectedId => __jsx(\"li\", {\n    key: selectedId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, selectedId))), __jsx(ButtonComponent, {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    buttonSize: \"large\",\n    onClick: turnSingleIntoAlbum,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Turn Single Into Album\"), __jsx(ButtonComponent, {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    onClick: turnSingleIntoAlbum,\n    buttonStyle: \"danger\",\n    buttonSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Clear Selected Items\"), __jsx(ButtonComponent, {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    buttonSize: \"large\",\n    onClick: joinASideAndBSide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Join A-Side and B-Side\")));\n};\n\nexport default AdminPanel;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/AdminPanel.js"],"names":["React","useState","styled","gql","useQuery","useMutation","ButtonComponent","Center","div","AdminPanelWrapper","props","theme","black","SelectedItemsList","ul","CURRENT_USER_QUERY","LOCAL_STATE_QUERY","TURN_SINGLE_INTO_ALBUM_MUTATION","JOIN_SINGLES_MUTATION","CLEAR_SELECTED_IDS","AdminPanel","turnSingleIntoAlbumMutation","loading","turnSingleIntoAlbumLoading","error","turnSingleIntoAlbumError","joinTwoSinglesMutation","joinTwoSinglesLoading","joinTwoSinglesError","clearSelectedIdsMutation","clearSelectedIdsLoading","clearSelectedIdsError","turnSingleIntoAlbum","variables","id","localStateData","selectedIds","console","log","joinASideAndBSide","albumOneId","checkedItems","albumTwoId","currentUserLoading","currentUserError","data","currentUserData","localStateLoading","localStateError","message","me","map","selectedId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport ButtonComponent from \"./Button\";\n// import { CURRENT_USER_QUERY } from \"./Nav\";\n\nexport const Center = styled.div`\n  /* text-align: center; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const AdminPanelWrapper = styled.div`\n  border-top: 10px solid ${(props) => props.theme.black};\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 20px;\n  justify-content: space-between;\n  align-items: stretch;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n  height: 150px;\n  overflow: scroll;\n`;\n\nexport const SelectedItemsList = styled.ul`\n  /* align-self: flex-start; */\n`;\n\nexport const CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n    }\n  }\n`;\n\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    selectedIds @client\n  }\n`;\n\nconst TURN_SINGLE_INTO_ALBUM_MUTATION = gql`\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\n    turnSingleIntoAlbum(id: $id) {\n      id\n      title\n      single\n    }\n  }\n`;\n\nconst JOIN_SINGLES_MUTATION = gql`\n  mutation JOIN_SINGLES_MUTATION($albumOneId: ID!, $albumTwoId: ID!) {\n    joinTwoSingles(albumOneId: $albumOneId, albumTwoId: $albumTwoId) {\n      id\n      title\n    }\n  }\n`;\n\nconst CLEAR_SELECTED_IDS = gql`\n  mutation {\n    clearSelectedIds @client\n  }\n`;\n\nconst AdminPanel = () => {\n  const [\n    turnSingleIntoAlbumMutation,\n    { loading: turnSingleIntoAlbumLoading, error: turnSingleIntoAlbumError },\n  ] = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION);\n\n  const [\n    joinTwoSinglesMutation,\n    { loading: joinTwoSinglesLoading, error: joinTwoSinglesError },\n  ] = useMutation(JOIN_SINGLES_MUTATION);\n\n  const [\n    clearSelectedIdsMutation,\n    { loading: clearSelectedIdsLoading, error: clearSelectedIdsError },\n  ] = useMutation(CLEAR_SELECTED_IDS);\n\n  async function turnSingleIntoAlbum() {\n    turnSingleIntoAlbumMutation({\n      variables: { id: localStateData.selectedIds[0] },\n    });\n    turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n    clearSelectedIdsMutation();\n  }\n\n  async function joinASideAndBSide() {\n    joinTwoSinglesMutation({\n      variables: { albumOneId: checkedItems[0], albumTwoId: checkedItems[1] },\n    });\n    joinTwoSinglesError && console.log(joinTwoSinglesError);\n  }\n  const {\n    loading: currentUserLoading,\n    error: currentUserError,\n    data: currentUserData,\n  } = useQuery(CURRENT_USER_QUERY);\n\n  const {\n    loading: localStateLoading,\n    error: localStateError,\n    data: localStateData,\n  } = useQuery(LOCAL_STATE_QUERY);\n\n  if (currentUserLoading) return \"Loading...\";\n  if (currentUserError) return `Error! ${error.message}`;\n  const { me } = currentUserData;\n  return (\n    me && (\n      <>\n        <AdminPanelWrapper>\n          <SelectedItemsList>\n            <p>Selected Items:</p>\n            {localStateData.selectedIds.map((selectedId) => (\n              <li key={selectedId}>{selectedId}</li>\n            ))}\n          </SelectedItemsList>\n          <ButtonComponent\n            marginTop=\"20px\"\n            marginBottom=\"20px\"\n            buttonSize=\"large\"\n            onClick={turnSingleIntoAlbum}\n          >\n            Turn Single Into Album\n          </ButtonComponent>\n          <ButtonComponent\n            marginTop=\"20px\"\n            marginBottom=\"20px\"\n            onClick={turnSingleIntoAlbum}\n            buttonStyle=\"danger\"\n            buttonSize=\"large\"\n          >\n            Clear Selected Items\n          </ButtonComponent>\n          <ButtonComponent\n            marginTop=\"20px\"\n            marginBottom=\"20px\"\n            buttonSize=\"large\"\n            onClick={joinASideAndBSide}\n          >\n            Join A-Side and B-Side\n          </ButtonComponent>\n        </AdminPanelWrapper>\n      </>\n    )\n  );\n};\n\nexport default AdminPanel;\n"]},"metadata":{},"sourceType":"module"}