{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Songs.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SONGS_QUERY {\\n    songs {\\n      id\\n      title\\n      publisher\\n      publishedDate\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nvar ALL_SONGS_QUERY = gql(_templateObject());\n\nvar Songs = function Songs(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useQuery = useQuery(ALL_SONGS_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Error :(\");\n  console.log(data);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Hello\", __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"there\"));\n};\n\nexport default Songs;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Songs.js"],"names":["React","useQuery","gql","ALL_SONGS_QUERY","Songs","loading","error","data","console","log"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,IAAMC,eAAe,GAAGD,GAAH,mBAArB;;AAWA,IAAME,KAAK,GAAG,SAARA,KAAQ,OAAQ;AAAA;;AAAA,kBACaH,QAAQ,CAACE,eAAD,CADrB;AAAA,MACZE,OADY,aACZA,OADY;AAAA,MACHC,KADG,aACHA,KADG;AAAA,MACIC,IADJ,aACIA,IADJ;;AAEpB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAMD,CAZD;;AAcA,eAAeH,KAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst ALL_SONGS_QUERY = gql`\n  query ALL_SONGS_QUERY {\n    songs {\n      id\n      title\n      publisher\n      publishedDate\n    }\n  }\n`;\n\nconst Songs = ({}) => {\n  const { loading, error, data } = useQuery(ALL_SONGS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  console.log(data);\n\n  return (\n    <div>\n      Hello\n      <h1>there</h1>\n    </div>\n  );\n};\n\nexport default Songs;\n"]},"metadata":{},"sourceType":"module"}