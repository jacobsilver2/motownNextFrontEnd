{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Singles.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Router from \"next/router\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { MultiList, Center } from \"./Artists\";\nexport const StyledDropdown = styled(Dropdown).withConfig({\n  displayName: \"Singles__StyledDropdown\",\n  componentId: \"sc-12bbile-0\"\n})([\"width:50%;@media screen and (max-width:600px){width:100%;}\"]);\nexport const ALL_SINGLES_QUERY = gql`\n  query ALL_SINGLES_QUERY($first: Int = ${perPage}, $skip: Int = 0, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true}, first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\nexport const ALL_SINGLES_BEGINNING_WITH_QUERY = gql`\n  query ALL_SINGLES_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true, title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\nexport const ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY = gql`\n  query ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true, OR: [{title_starts_with: \"0\"},{title_starts_with: \"1\"},{title_starts_with: \"2\"},{title_starts_with: \"3\"},{title_starts_with: \"4\"},{title_starts_with: \"5\"},{title_starts_with: \"6\"},{title_starts_with: \"7\"},{title_starts_with: \"8\"},{title_starts_with: \"9\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\nconst TURN_SINGLE_INTO_ALBUM_MUTATION = gql`\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\n    turnSingleIntoAlbum(id: $id) {\n      id\n      title\n      single\n    }\n  }\n`;\nconst sortBySelectItems = [{\n  label: \"Title, ascending\",\n  value: \"title_ASC\"\n}, {\n  label: \"Title, descending\",\n  value: \"title_DESC\"\n}, {\n  label: \"Format, ascending\",\n  value: \"format_DESC\"\n}, {\n  label: \"Format, descending\",\n  value: \"format_ASC\"\n}, {\n  label: \"Release Date, ascending\",\n  value: \"releaseDate_ASC\"\n}, {\n  label: \"Release Date, descending\",\n  value: \"releaseDate_DESC\"\n}, {\n  label: \"Record Label, ascending\",\n  value: \"recordLabel_ASC\"\n}, {\n  label: \"Record Label, descending\",\n  value: \"recordLabel_DESC\"\n}, {\n  label: \"Catalog Number, ascending\",\n  value: \"catalogNumber_ASC\"\n}, {\n  label: \"Catalog Number, descending\",\n  value: \"catalogNumber_DESC\"\n}];\n\nconst Singles = ({\n  page\n}) => {\n  const {\n    0: letter,\n    1: setLetter\n  } = useState(\"\");\n  const {\n    0: sortBy,\n    1: setSortBy\n  } = useState(\"title_ASC\");\n  const {\n    0: checkedItems,\n    1: setCheckedItems\n  } = useState([]);\n  const [turnSingleIntoAlbumMutation, {\n    loading: turnSingleIntoAlbumLoading,\n    error: turnSingleIntoAlbumError\n  }] = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION);\n  const {\n    loading: allSinglesLoading,\n    error: allSinglesError,\n    data: allSinglesData\n  } = useQuery(ALL_SINGLES_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy\n    }\n  });\n  const {\n    loading: singlesBeginningWithLoading,\n    error: singlesBeginningWithError,\n    data: singlesBeginningWithData\n  } = useQuery(ALL_SINGLES_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy\n    }\n  });\n  const {\n    loading: singlesBeginningWithNumberLoading,\n    error: singlesBeginningWithNumberError,\n    data: singlesBeginningWithNumberData\n  } = useQuery(ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy\n    }\n  });\n  if (singlesBeginningWithLoading || allSinglesLoading || singlesBeginningWithNumberLoading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Loading...\");\n  if (singlesBeginningWithError || allSinglesError || singlesBeginningWithNumberError) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Error :(\");\n\n  async function turnSingleIntoAlbum() {\n    turnSingleIntoAlbumMutation({\n      variables: {\n        id: checkedItems[0]\n      }\n    });\n    turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n  }\n\n  function getSingles() {\n    if (letter === \"\" || !letter) {\n      return allSinglesData.albums.filter(album => album.single).map(album => __jsx(Album, {\n        addToCheckedItemsList: setCheckedItems,\n        checkedItems: checkedItems,\n        key: album.id,\n        album: album,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }));\n    } else if (letter === \"#\") {\n      return singlesBeginningWithNumberData.albums.filter(album => album.single).map(single => __jsx(Album, {\n        key: single.id,\n        album: single,\n        addToCheckedItemsList: setCheckedItems,\n        checkedItems: checkedItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }));\n    } else {\n      return singlesBeginningWithData.albums.filter(album => album.single).map(single => __jsx(Album, {\n        key: single.id,\n        album: single,\n        addToCheckedItemsList: setCheckedItems,\n        checkedItems: checkedItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }));\n    }\n  }\n\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: () => turnSingleIntoAlbum(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"TURN SINGLE INTO ALBUM\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Checked items:\", \" \", checkedItems && checkedItems.map(item => __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, item))), __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZWithNumber,\n    onChange: e => {\n      setLetter(e.value);\n      Router.push({\n        pathname: \"/singles\",\n        query: {\n          page: 1\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), __jsx(StyledDropdown, {\n    value: sortBy,\n    options: sortBySelectItems,\n    onChange: e => setSortBy(e.value),\n    placeholder: \"Sort By\\u2026\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }), __jsx(Pagination, {\n    page: page,\n    model: \"singles\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), __jsx(MultiList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, getSingles()), __jsx(Pagination, {\n    page: page,\n    model: \"singles\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }));\n};\n\nexport default Singles;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Singles.js"],"names":["React","useState","useQuery","useMutation","Router","gql","styled","Album","Pagination","perPage","SelectButton","selectButtonsAthruZWithNumber","Dropdown","MultiList","Center","StyledDropdown","ALL_SINGLES_QUERY","ALL_SINGLES_BEGINNING_WITH_QUERY","ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY","TURN_SINGLE_INTO_ALBUM_MUTATION","sortBySelectItems","label","value","Singles","page","letter","setLetter","sortBy","setSortBy","checkedItems","setCheckedItems","turnSingleIntoAlbumMutation","loading","turnSingleIntoAlbumLoading","error","turnSingleIntoAlbumError","allSinglesLoading","allSinglesError","data","allSinglesData","variables","skip","first","singlesBeginningWithLoading","singlesBeginningWithError","singlesBeginningWithData","singlesBeginningWithNumberLoading","singlesBeginningWithNumberError","singlesBeginningWithNumberData","turnSingleIntoAlbum","id","console","log","getSingles","albums","filter","album","single","map","item","e","push","pathname","query"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Router from \"next/router\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { MultiList, Center } from \"./Artists\";\n\nexport const StyledDropdown = styled(Dropdown)`\n  width: 50%;\n  @media screen and (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nexport const ALL_SINGLES_QUERY = gql`\n  query ALL_SINGLES_QUERY($first: Int = ${perPage}, $skip: Int = 0, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true}, first: $first, skip: $skip, orderBy: $sortBy ) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ALL_SINGLES_BEGINNING_WITH_QUERY = gql`\n  query ALL_SINGLES_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true, title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY = gql`\n  query ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = ${perPage}, $sortBy: AlbumOrderByInput!) {\n    albums(where: {single: true, OR: [{title_starts_with: \"0\"},{title_starts_with: \"1\"},{title_starts_with: \"2\"},{title_starts_with: \"3\"},{title_starts_with: \"4\"},{title_starts_with: \"5\"},{title_starts_with: \"6\"},{title_starts_with: \"7\"},{title_starts_with: \"8\"},{title_starts_with: \"9\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      catalogNumber\n      single\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst TURN_SINGLE_INTO_ALBUM_MUTATION = gql`\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\n    turnSingleIntoAlbum(id: $id) {\n      id\n      title\n      single\n    }\n  }\n`;\n\nconst sortBySelectItems = [\n  { label: \"Title, ascending\", value: \"title_ASC\" },\n  { label: \"Title, descending\", value: \"title_DESC\" },\n  { label: \"Format, ascending\", value: \"format_DESC\" },\n  { label: \"Format, descending\", value: \"format_ASC\" },\n  { label: \"Release Date, ascending\", value: \"releaseDate_ASC\" },\n  { label: \"Release Date, descending\", value: \"releaseDate_DESC\" },\n  { label: \"Record Label, ascending\", value: \"recordLabel_ASC\" },\n  { label: \"Record Label, descending\", value: \"recordLabel_DESC\" },\n  { label: \"Catalog Number, ascending\", value: \"catalogNumber_ASC\" },\n  { label: \"Catalog Number, descending\", value: \"catalogNumber_DESC\" },\n];\n\nconst Singles = ({ page }) => {\n  const [letter, setLetter] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"title_ASC\");\n  const [checkedItems, setCheckedItems] = useState([]);\n\n  const [\n    turnSingleIntoAlbumMutation,\n    { loading: turnSingleIntoAlbumLoading, error: turnSingleIntoAlbumError },\n  ] = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION);\n\n  const {\n    loading: allSinglesLoading,\n    error: allSinglesError,\n    data: allSinglesData,\n  } = useQuery(ALL_SINGLES_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage, sortBy },\n  });\n  const {\n    loading: singlesBeginningWithLoading,\n    error: singlesBeginningWithError,\n    data: singlesBeginningWithData,\n  } = useQuery(ALL_SINGLES_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter,\n      sortBy,\n    },\n  });\n  const {\n    loading: singlesBeginningWithNumberLoading,\n    error: singlesBeginningWithNumberError,\n    data: singlesBeginningWithNumberData,\n  } = useQuery(ALL_SINGLES_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy,\n    },\n  });\n  if (\n    singlesBeginningWithLoading ||\n    allSinglesLoading ||\n    singlesBeginningWithNumberLoading\n  )\n    return <p>Loading...</p>;\n  if (\n    singlesBeginningWithError ||\n    allSinglesError ||\n    singlesBeginningWithNumberError\n  )\n    return <p>Error :(</p>;\n\n  async function turnSingleIntoAlbum() {\n    turnSingleIntoAlbumMutation({ variables: { id: checkedItems[0] } });\n    turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n  }\n\n  function getSingles() {\n    if (letter === \"\" || !letter) {\n      return allSinglesData.albums\n        .filter((album) => album.single)\n        .map((album) => (\n          <Album\n            addToCheckedItemsList={setCheckedItems}\n            checkedItems={checkedItems}\n            key={album.id}\n            album={album}\n          />\n        ));\n    } else if (letter === \"#\") {\n      return singlesBeginningWithNumberData.albums\n        .filter((album) => album.single)\n        .map((single) => (\n          <Album\n            key={single.id}\n            album={single}\n            addToCheckedItemsList={setCheckedItems}\n            checkedItems={checkedItems}\n          />\n        ));\n    } else {\n      return singlesBeginningWithData.albums\n        .filter((album) => album.single)\n        .map((single) => (\n          <Album\n            key={single.id}\n            album={single}\n            addToCheckedItemsList={setCheckedItems}\n            checkedItems={checkedItems}\n          />\n        ));\n    }\n  }\n\n  return (\n    <Center>\n      <button onClick={() => turnSingleIntoAlbum()}>\n        TURN SINGLE INTO ALBUM\n      </button>\n      <ul>\n        Checked items:{\" \"}\n        {checkedItems && checkedItems.map((item) => <li>{item}</li>)}\n      </ul>\n      <SelectButton\n        value={letter}\n        options={selectButtonsAthruZWithNumber}\n        onChange={(e) => {\n          setLetter(e.value);\n          Router.push({ pathname: \"/singles\", query: { page: 1 } });\n        }}\n      />\n      <br />\n      <StyledDropdown\n        value={sortBy}\n        options={sortBySelectItems}\n        onChange={(e) => setSortBy(e.value)}\n        placeholder=\"Sort By…\"\n      />\n      <br />\n      <Pagination page={page} model=\"singles\" letter={letter} />\n      <MultiList>{getSingles()}</MultiList>\n      <Pagination page={page} model=\"singles\" letter={letter} />\n    </Center>\n  );\n};\n\nexport default Singles;\n"]},"metadata":{},"sourceType":"module"}