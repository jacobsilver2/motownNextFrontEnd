{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/AdminPanel.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation {\\n    clearSelectedIds @client\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation JOIN_SINGLES_MUTATION($albumOneId: ID!, $albumTwoId: ID!) {\\n    joinTwoSingles(albumOneId: $albumOneId, albumTwoId: $albumTwoId) {\\n      id\\n      title\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\\n    turnSingleIntoAlbum(id: $id) {\\n      id\\n      title\\n      single\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    selectedIds @client\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    me {\\n      id\\n      email\\n      name\\n      permissions\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport ButtonComponent from \"./Button\"; // import { CURRENT_USER_QUERY } from \"./Nav\";\n\nexport var Center = styled.div.withConfig({\n  displayName: \"AdminPanel__Center\",\n  componentId: \"sc-1o45frt-0\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nexport var AdminPanelWrapper = styled.div.withConfig({\n  displayName: \"AdminPanel__AdminPanelWrapper\",\n  componentId: \"sc-1o45frt-1\"\n})([\"border-top:10px solid \", \";display:grid;grid-template-columns:1fr 1fr 1fr;grid-gap:20px;justify-content:space-between;align-items:stretch;position:fixed;bottom:0;left:0;right:0;background-color:white;height:150px;overflow:scroll;\"], function (props) {\n  return props.theme.black;\n});\nexport var SelectedItemsList = styled.ul.withConfig({\n  displayName: \"AdminPanel__SelectedItemsList\",\n  componentId: \"sc-1o45frt-2\"\n})([\"\"]);\nexport var CURRENT_USER_QUERY = gql(_templateObject());\nexport var LOCAL_STATE_QUERY = gql(_templateObject2());\nvar TURN_SINGLE_INTO_ALBUM_MUTATION = gql(_templateObject3());\nvar JOIN_SINGLES_MUTATION = gql(_templateObject4());\nvar CLEAR_SELECTED_IDS = gql(_templateObject5());\n\nvar AdminPanel = function AdminPanel() {\n  var _useMutation = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      turnSingleIntoAlbumMutation = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      turnSingleIntoAlbumLoading = _useMutation2$.loading,\n      turnSingleIntoAlbumError = _useMutation2$.error;\n\n  var _useMutation3 = useMutation(JOIN_SINGLES_MUTATION),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      joinTwoSinglesMutation = _useMutation4[0],\n      _useMutation4$ = _useMutation4[1],\n      joinTwoSinglesLoading = _useMutation4$.loading,\n      joinTwoSinglesError = _useMutation4$.error;\n\n  var _useMutation5 = useMutation(CLEAR_SELECTED_IDS),\n      _useMutation6 = _slicedToArray(_useMutation5, 2),\n      clearSelectedIdsMutation = _useMutation6[0],\n      _useMutation6$ = _useMutation6[1],\n      clearSelectedIdsLoading = _useMutation6$.loading,\n      clearSelectedIdsError = _useMutation6$.error;\n\n  function turnSingleIntoAlbum() {\n    return _regeneratorRuntime.async(function turnSingleIntoAlbum$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            turnSingleIntoAlbumMutation({\n              variables: {\n                id: localStateData.selectedIds[0]\n              }\n            });\n            turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n            clearSelectedIdsMutation();\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function joinASideAndBSide() {\n    return _regeneratorRuntime.async(function joinASideAndBSide$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            joinTwoSinglesMutation({\n              variables: {\n                albumOneId: checkedItems[0],\n                albumTwoId: checkedItems[1]\n              }\n            });\n            joinTwoSinglesError && console.log(joinTwoSinglesError);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var _useQuery = useQuery(CURRENT_USER_QUERY),\n      currentUserLoading = _useQuery.loading,\n      currentUserError = _useQuery.error,\n      currentUserData = _useQuery.data;\n\n  var _useQuery2 = useQuery(LOCAL_STATE_QUERY),\n      localStateLoading = _useQuery2.loading,\n      localStateError = _useQuery2.error,\n      localStateData = _useQuery2.data;\n\n  if (currentUserLoading) return \"Loading...\";\n  if (currentUserError) return \"Error! \".concat(error.message);\n  var me = currentUserData.me;\n  return me && __jsx(React.Fragment, null, __jsx(AdminPanelWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, localStateData.selectedIds.length > 0 && __jsx(SelectedItemsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Selected Items:\"), localStateData.selectedIds.map(function (selectedId) {\n    return __jsx(\"li\", {\n      key: selectedId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, selectedId);\n  })), __jsx(ButtonComponent, {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    buttonSize: \"large\",\n    onClick: turnSingleIntoAlbum,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Turn Single Into Album\"), __jsx(ButtonComponent, {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    onClick: turnSingleIntoAlbum,\n    buttonStyle: \"danger\",\n    buttonSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Clear Selected Items\"), __jsx(ButtonComponent, {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    buttonSize: \"large\",\n    onClick: joinASideAndBSide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Join A-Side and B-Side\")));\n};\n\nexport default AdminPanel;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/AdminPanel.js"],"names":["React","useState","styled","gql","useQuery","useMutation","ButtonComponent","Center","div","AdminPanelWrapper","props","theme","black","SelectedItemsList","ul","CURRENT_USER_QUERY","LOCAL_STATE_QUERY","TURN_SINGLE_INTO_ALBUM_MUTATION","JOIN_SINGLES_MUTATION","CLEAR_SELECTED_IDS","AdminPanel","turnSingleIntoAlbumMutation","turnSingleIntoAlbumLoading","loading","turnSingleIntoAlbumError","error","joinTwoSinglesMutation","joinTwoSinglesLoading","joinTwoSinglesError","clearSelectedIdsMutation","clearSelectedIdsLoading","clearSelectedIdsError","turnSingleIntoAlbum","variables","id","localStateData","selectedIds","console","log","joinASideAndBSide","albumOneId","checkedItems","albumTwoId","currentUserLoading","currentUserError","currentUserData","data","localStateLoading","localStateError","message","me","length","map","selectedId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport ButtonComponent from \"./Button\";\n// import { CURRENT_USER_QUERY } from \"./Nav\";\n\nexport const Center = styled.div`\n  /* text-align: center; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const AdminPanelWrapper = styled.div`\n  border-top: 10px solid ${(props) => props.theme.black};\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 20px;\n  justify-content: space-between;\n  align-items: stretch;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n  height: 150px;\n  overflow: scroll;\n`;\n\nexport const SelectedItemsList = styled.ul`\n  /* align-self: flex-start; */\n`;\n\nexport const CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n    }\n  }\n`;\n\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    selectedIds @client\n  }\n`;\n\nconst TURN_SINGLE_INTO_ALBUM_MUTATION = gql`\n  mutation TURN_SINGLE_INTO_ALBUM_MUTATION($id: ID!) {\n    turnSingleIntoAlbum(id: $id) {\n      id\n      title\n      single\n    }\n  }\n`;\n\nconst JOIN_SINGLES_MUTATION = gql`\n  mutation JOIN_SINGLES_MUTATION($albumOneId: ID!, $albumTwoId: ID!) {\n    joinTwoSingles(albumOneId: $albumOneId, albumTwoId: $albumTwoId) {\n      id\n      title\n    }\n  }\n`;\n\nconst CLEAR_SELECTED_IDS = gql`\n  mutation {\n    clearSelectedIds @client\n  }\n`;\n\nconst AdminPanel = () => {\n  const [\n    turnSingleIntoAlbumMutation,\n    { loading: turnSingleIntoAlbumLoading, error: turnSingleIntoAlbumError },\n  ] = useMutation(TURN_SINGLE_INTO_ALBUM_MUTATION);\n\n  const [\n    joinTwoSinglesMutation,\n    { loading: joinTwoSinglesLoading, error: joinTwoSinglesError },\n  ] = useMutation(JOIN_SINGLES_MUTATION);\n\n  const [\n    clearSelectedIdsMutation,\n    { loading: clearSelectedIdsLoading, error: clearSelectedIdsError },\n  ] = useMutation(CLEAR_SELECTED_IDS);\n\n  async function turnSingleIntoAlbum() {\n    turnSingleIntoAlbumMutation({\n      variables: { id: localStateData.selectedIds[0] },\n    });\n    turnSingleIntoAlbumError && console.log(turnSingleIntoAlbumError);\n    clearSelectedIdsMutation();\n  }\n\n  async function joinASideAndBSide() {\n    joinTwoSinglesMutation({\n      variables: { albumOneId: checkedItems[0], albumTwoId: checkedItems[1] },\n    });\n    joinTwoSinglesError && console.log(joinTwoSinglesError);\n  }\n  const {\n    loading: currentUserLoading,\n    error: currentUserError,\n    data: currentUserData,\n  } = useQuery(CURRENT_USER_QUERY);\n\n  const {\n    loading: localStateLoading,\n    error: localStateError,\n    data: localStateData,\n  } = useQuery(LOCAL_STATE_QUERY);\n\n  if (currentUserLoading) return \"Loading...\";\n  if (currentUserError) return `Error! ${error.message}`;\n  const { me } = currentUserData;\n  return (\n    me && (\n      <>\n        <AdminPanelWrapper>\n          {localStateData.selectedIds.length > 0 && (\n            <SelectedItemsList>\n              <p>Selected Items:</p>\n              {localStateData.selectedIds.map((selectedId) => (\n                <li key={selectedId}>{selectedId}</li>\n              ))}\n            </SelectedItemsList>\n          )}\n          <ButtonComponent\n            marginTop=\"20px\"\n            marginBottom=\"20px\"\n            buttonSize=\"large\"\n            onClick={turnSingleIntoAlbum}\n          >\n            Turn Single Into Album\n          </ButtonComponent>\n          <ButtonComponent\n            marginTop=\"20px\"\n            marginBottom=\"20px\"\n            onClick={turnSingleIntoAlbum}\n            buttonStyle=\"danger\"\n            buttonSize=\"large\"\n          >\n            Clear Selected Items\n          </ButtonComponent>\n          <ButtonComponent\n            marginTop=\"20px\"\n            marginBottom=\"20px\"\n            buttonSize=\"large\"\n            onClick={joinASideAndBSide}\n          >\n            Join A-Side and B-Side\n          </ButtonComponent>\n        </AdminPanelWrapper>\n      </>\n    )\n  );\n};\n\nexport default AdminPanel;\n"]},"metadata":{},"sourceType":"module"}