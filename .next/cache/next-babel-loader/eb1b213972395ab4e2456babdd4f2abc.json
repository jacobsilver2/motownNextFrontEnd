{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY($skip: Int = 0, $first: Int = \", \", $sortBy: SongOrderByInput!) {\\n    songs(where: {OR: [{title_starts_with: \\\"0\\\"},{title_starts_with: \\\"1\\\"},{title_starts_with: \\\"2\\\"},{title_starts_with: \\\"3\\\"},{title_starts_with: \\\"4\\\"},{title_starts_with: \\\"5\\\"},{title_starts_with: \\\"6\\\"},{title_starts_with: \\\"7\\\"},{title_starts_with: \\\"8\\\"},{title_starts_with: \\\"9\\\"}]}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      publisher\\n      publishedDate\\n      composer {\\n        name\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SONGS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = \", \", $letter: String, $sortBy: SongOrderByInput!) {\\n    songs(where: {title_starts_with: $letter}, first: $first, skip: $skip, orderBy: $sortBy) {\\n      id\\n      title\\n      publisher\\n      publishedDate\\n      composer {\\n        name\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_SONGS_QUERY($skip: Int = 0, $first: Int = \", \", $sortBy: SongOrderByInput!) {\\n    songs(first: $first, skip: $skip, orderBy: $sortBy ) {\\n      id\\n      title\\n      publisher\\n      publishedDate\\n      composer {\\n        name\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport Router from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport { perPage } from \"../config\";\nimport Song from \"../components/Song\";\nimport Pagination from \"../components/Pagination\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZWithNumber } from \"../lib/selectButtons\";\nimport sortBySelectItems from \"../lib/sortByOptions/songsSortBySelectItems\";\nimport Center from \"./styles/Center\";\nimport MultiList from \"./styles/Multilist\";\nimport customTheme from \"./styles/reactSelectTheme\";\nimport getSelectLabel from \"../lib/sortByOptions/sortBySelectReturnLabel\";\nexport var ALL_SONGS_QUERY = gql(_templateObject(), perPage);\nexport var ALL_SONGS_BEGINNING_WITH_QUERY = gql(_templateObject2(), perPage);\nexport var ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY = gql(_templateObject3(), perPage);\n\nvar Songs = function Songs(_ref) {\n  var page = _ref.page;\n\n  var _useState = useState(\"\"),\n      letter = _useState[0],\n      setLetter = _useState[1];\n\n  var _useState2 = useState(\"title_ASC\"),\n      sortBy = _useState2[0],\n      setSortBy = _useState2[1];\n\n  var _useQuery = useQuery(ALL_SONGS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      allSongsLoading = _useQuery.loading,\n      allSongsError = _useQuery.error,\n      allSongsData = _useQuery.data;\n\n  var _useQuery2 = useQuery(ALL_SONGS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter: letter,\n      sortBy: sortBy\n    }\n  }),\n      songsBeginningWithLoading = _useQuery2.loading,\n      songsBeginningWithError = _useQuery2.error,\n      songsBeginningWithData = _useQuery2.data;\n\n  var _useQuery3 = useQuery(ALL_SONGS_BEGINNING_WITH_NUMBER_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      sortBy: sortBy\n    }\n  }),\n      songsBeginningWithNumberLoading = _useQuery3.loading,\n      songsBeginningWithNumberError = _useQuery3.error,\n      songsBeginningWithNumberData = _useQuery3.data;\n\n  if (allSongsLoading || songsBeginningWithLoading || songsBeginningWithNumberLoading) return __jsx(\"p\", null, \"Loading...\");\n  if (allSongsError || songsBeginningWithError || songsBeginningWithNumberError) return __jsx(\"p\", null, \"Error :(\");\n  var songs = \"\";\n\n  if (!letter) {\n    songs = allSongsData.songs.map(function (song) {\n      return __jsx(Song, {\n        key: song.id,\n        song: song\n      });\n    });\n  } else if (letter === \"#\") {\n    songs = songsBeginningWithNumberData.songs.map(function (song) {\n      return __jsx(Song, {\n        key: song.id,\n        song: song\n      });\n    });\n  } else {\n    songs = songsBeginningWithData.songs.map(function (song) {\n      return __jsx(Song, {\n        key: song.id,\n        song: song\n      });\n    });\n  }\n\n  return __jsx(Center, null, __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZWithNumber,\n    onChange: function onChange(e) {\n      setLetter(e.value);\n      Router.push({\n        pathname: \"/songs\",\n        query: {\n          page: 1\n        }\n      });\n    }\n  }), __jsx(\"br\", null), __jsx(Select, {\n    options: sortBySelectItems,\n    theme: customTheme,\n    placeholder: \"Sort by \".concat(getSelectLabel(sortBySelectItems, sortBy)),\n    onChange: function onChange(e) {\n      return setSortBy(e.value);\n    },\n    isSearchable: true\n  }), __jsx(\"br\", null), __jsx(Pagination, {\n    page: page,\n    model: \"songs\",\n    letter: letter\n  }), __jsx(MultiList, null, songs), __jsx(Pagination, {\n    page: page,\n    model: \"songs\",\n    letter: letter\n  }));\n};\n\nexport default Songs;","map":null,"metadata":{},"sourceType":"module"}