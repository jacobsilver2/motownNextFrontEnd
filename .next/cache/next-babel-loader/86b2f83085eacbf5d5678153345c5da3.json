{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_COMPOSERS_QUERY($searchTerm: String!) {\\n    composers(where: { OR: [{ name_contains: $searchTerm }] }) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_ALBUMS_QUERY($searchTerm: String!) {\\n    albums(where: { OR: [{ title_contains: $searchTerm }] }) {\\n      id\\n      title\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_ARTISTS_QUERY($searchTerm: String!) {\\n    artists(where: { OR: [{ name_contains: $searchTerm }] }) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_SONGS_QUERY($searchTerm: String!) {\\n    songs(\\n      where: {\\n        OR: [\\n          { title_contains: $searchTerm }\\n          { altTitle_contains: $searchTerm }\\n          { fromFilm_contains: $searchTerm }\\n        ]\\n      }\\n    ) {\\n      id\\n      title\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport Downshift, { resetIdCounter } from \"downshift\";\nimport Router from \"next/router\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport Select from \"react-select\";\nimport { DropDown as StyledDropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\nimport Title from \"./styles/song/title\";\nimport customTheme from \"./styles/reactSelectTheme\";\nimport styled from \"styled-components\";\nvar StyledSearchBar = styled.div.withConfig({\n  displayName: \"Search__StyledSearchBar\",\n  componentId: \"sexg82-0\"\n})([\"display:grid;grid-template-columns:5fr 1fr;grid-gap:1rem;\"]);\nvar SEARCH_SONGS_QUERY = gql(_templateObject());\nvar SEARCH_ARTISTS_QUERY = gql(_templateObject2());\nvar SEARCH_ALBUMS_QUERY = gql(_templateObject3());\nvar SEARCH_COMPOSERS_QUERY = gql(_templateObject4());\n\nfunction routeToItem(route, item) {\n  item && Router.push({\n    pathname: \"/\".concat(route),\n    query: {\n      id: item.id\n    }\n  });\n}\n\nfunction returnQuery(item) {\n  if (item === \"song\") {\n    return SEARCH_SONGS_QUERY;\n  }\n\n  if (item === \"album\") {\n    return SEARCH_ALBUMS_QUERY;\n  }\n\n  if (item === \"artist\") {\n    return SEARCH_ARTISTS_QUERY;\n  }\n\n  if (item === \"composer\") {\n    return SEARCH_COMPOSERS_QUERY;\n  }\n}\n\nvar dropdownSelectItems = [{\n  label: \"Song\",\n  value: \"song\"\n}, {\n  label: \"Artist\",\n  value: \"artist\"\n}, {\n  label: \"Album\",\n  value: \"album\"\n}, {\n  label: \"Composer\",\n  value: \"composer\"\n}];\n\nvar AutoComplete = /*#__PURE__*/function (_React$Component) {\n  _inherits(AutoComplete, _React$Component);\n\n  function AutoComplete() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoComplete);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoComplete)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      items: [],\n      loading: false,\n      item: \"song\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectChange\", function (event) {\n      return _this.setState({\n        item: event.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", debounce(function _callee(e, client) {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.t0 = e.target.value;\n\n              if (!_context.t0) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(client.query({\n                query: returnQuery(_this.state.item),\n                variables: {\n                  searchTerm: e.target.value\n                }\n              }));\n\n            case 5:\n              _context.t0 = _context.sent;\n\n            case 6:\n              response = _context.t0;\n              e.target.value && _this.setState({\n                items: response.data.songs || response.data.albums || response.data.composers || response.data.artists,\n                loading: false\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }, 350));\n\n    return _this;\n  }\n\n  _createClass(AutoComplete, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      resetIdCounter();\n      return __jsx(SearchStyles, null, __jsx(Downshift, {\n        onChange: function onChange(item) {\n          return routeToItem(_this2.state.item, item);\n        },\n        itemToString: function itemToString(item) {\n          return item === null ? \"\" : item.title || item.name;\n        }\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            getItemProps = _ref.getItemProps,\n            isOpen = _ref.isOpen,\n            inputValue = _ref.inputValue,\n            highlightedIndex = _ref.highlightedIndex;\n        return __jsx(\"div\", null, __jsx(ApolloConsumer, null, function (client) {\n          return __jsx(StyledSearchBar, null, __jsx(\"input\", getInputProps({\n            type: \"search\",\n            placeholder: \"Search\",\n            id: \"search\",\n            className: _this2.state.loading ? \"loading\" : \"\",\n            onChange: function onChange(e) {\n              e.persist();\n\n              _this2.onChange(e, client);\n            }\n          })), __jsx(Select, {\n            theme: customTheme,\n            value: _this2.state.item,\n            options: dropdownSelectItems,\n            onChange: _this2.handleSelectChange,\n            placeholder: \"Search for a\".concat(_this2.state.item.toLowerCase().includes(\"a\", 0) ? \"n\" : \"\", \" \").concat(_this2.state.item.toLowerCase())\n          }));\n        }), isOpen ? __jsx(StyledDropDown, null, _this2.state.items.map(function (item, index) {\n          return __jsx(DropDownItem, _extends({}, getItemProps({\n            key: item.id,\n            index: index,\n            item: item\n          }), {\n            highlighted: index === highlightedIndex\n          }), __jsx(Title, null, item.title || item.name));\n        })) : null);\n      }));\n    }\n  }]);\n\n  return AutoComplete;\n}(React.Component);\n\nexport default AutoComplete;","map":null,"metadata":{},"sourceType":"module"}