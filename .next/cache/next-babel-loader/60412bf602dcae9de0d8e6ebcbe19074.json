{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Artists.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nconst ALL_ARTISTS_QUERY = gql`\n  query ALL_ARTISTS_QUERY {\n    artists {\n      id\n      name\n    }\n  }\n`;\nconst Center = styled.div.withConfig({\n  displayName: \"Artists__Center\",\n  componentId: \"sc-1du5hy1-0\"\n})([\"text-align:center;\"]);\nconst ArtistsList = styled.div.withConfig({\n  displayName: \"Artists__ArtistsList\",\n  componentId: \"sc-1du5hy1-1\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;max-width:\", \";margin:0 auto;\"], props => props.theme.maxWidth);\n\nconst Artists = ({}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_ARTISTS_QUERY);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Error :(\");\n  const artists = data.artists.map(artist => __jsx(\"p\", {\n    key: artist.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, artist.name));\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"I found \", artists.length, \" artists.\")), __jsx(ArtistsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, artists));\n};\n\nexport default Artists;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Artists.js"],"names":["React","useQuery","gql","styled","ALL_ARTISTS_QUERY","Center","div","ArtistsList","props","theme","maxWidth","Artists","loading","error","data","artists","map","artist","id","name","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,iBAAiB,GAAGF,GAAI;;;;;;;CAA9B;AASA,MAAMG,MAAM,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,0BAAZ;AAIA,MAAMC,WAAW,GAAGJ,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,+FAIFE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QAJnB,CAAjB;;AAQA,MAAMC,OAAO,GAAG,CAAC,EAAD,KAAQ;AACtB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bb,QAAQ,CAACG,iBAAD,CAAzC;AACA,MAAIQ,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,QAAME,OAAO,GAAGD,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiBC,MAAM,IACrC;AAAG,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBD,MAAM,CAACE,IAA3B,CADc,CAAhB;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYJ,OAAO,CAACK,MAApB,cADF,CADF,EAKE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcL,OAAd,CALF,CADF;AASD,CAlBD;;AAoBA,eAAeJ,OAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\n\nconst ALL_ARTISTS_QUERY = gql`\n  query ALL_ARTISTS_QUERY {\n    artists {\n      id\n      name\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ArtistsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n`;\n\nconst Artists = ({}) => {\n  const { loading, error, data } = useQuery(ALL_ARTISTS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const artists = data.artists.map(artist => (\n    <p key={artist.id}>{artist.name}</p>\n  ));\n\n  return (\n    <Center>\n      <p>\n        <b>I found {artists.length} artists.</b>\n      </p>\n\n      <ArtistsList>{artists}</ArtistsList>\n    </Center>\n  );\n};\n\nexport default Artists;\n"]},"metadata":{},"sourceType":"module"}