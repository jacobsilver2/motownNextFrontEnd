{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/Albums.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ALBUMS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = \", \", $letter: String) {\\n    songs(where: {title_starts_with: $letter}, first: $first, skip: $skip, orderBy: title_ASC) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ALBUMS_QUERY($skip: Int = 0, $first: Int = \", \") {\\n    albums(first: $first, skip: $skip, orderBy: title_ASC ) {\\n      id\\n      title\\n      recordLabel\\n      releaseDate\\n      format\\n      artists {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZ } from \"../lib/selectButtons\";\nvar ALL_ALBUMS_QUERY = gql(_templateObject(), perPage);\nexport var ALL_ALBUMS_BEGINNING_WITH_QUERY = gql(_templateObject2(), perPage);\nvar AlbumsList = styled.div.withConfig({\n  displayName: \"Albums__AlbumsList\",\n  componentId: \"sc-1rsazgb-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;max-width:\", \";margin:0 auto;\"], function (props) {\n  return props.theme.maxWidth;\n});\nvar Center = styled.div.withConfig({\n  displayName: \"Albums__Center\",\n  componentId: \"sc-1rsazgb-1\"\n})([\"text-align:center;\"]);\n\nvar Albums = function Albums(_ref) {\n  var page = _ref.page;\n\n  var _useState = useState(\"\"),\n      letter = _useState[0],\n      setLetter = _useState[1];\n\n  var _useQuery = useQuery(ALL_ALBUMS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  }),\n      allAlbumsLoading = _useQuery.loading,\n      allAlbumsError = _useQuery.error,\n      allAlbumsData = _useQuery.data;\n\n  var _useQuery2 = useQuery(ALL_ALBUMS_BEGINNING_WITH_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n      letter: letter\n    }\n  }),\n      albumsBeginningWithLoading = _useQuery2.loading,\n      albumsBeginningWithError = _useQuery2.error,\n      albumsBeginningWithData = _useQuery2.data;\n\n  if (albumsBeginningWithLoading || allAlbumsLoading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Loading...\");\n  if (albumsBeginningWithError || allAlbumsError) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Error :(\");\n  var albums = !letter ? allAlbumsData.albums.map(function (album) {\n    return __jsx(Album, {\n      key: album.id,\n      album: album,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  }) : albumsBeginningWithData.albums.map(function (album) {\n    return __jsx(Album, {\n      key: album.id,\n      album: album,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n  });\n  return __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(SelectButton, {\n    value: letter,\n    options: selectButtonsAthruZ,\n    onChange: function onChange(e) {\n      return setLetter(e.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(Pagination, {\n    page: page,\n    model: \"albums\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), __jsx(AlbumsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, albums), __jsx(Pagination, {\n    page: page,\n    model: \"albums\",\n    letter: letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }));\n};\n\nexport default Albums;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/Albums.js"],"names":["React","useState","useQuery","gql","styled","Album","Pagination","perPage","SelectButton","selectButtonsAthruZ","ALL_ALBUMS_QUERY","ALL_ALBUMS_BEGINNING_WITH_QUERY","AlbumsList","div","props","theme","maxWidth","Center","Albums","page","letter","setLetter","variables","skip","first","allAlbumsLoading","loading","allAlbumsError","error","allAlbumsData","data","albumsBeginningWithLoading","albumsBeginningWithError","albumsBeginningWithData","albums","map","album","id","e","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport styled from \"styled-components\";\nimport Album from \"./Album\";\nimport Pagination from \"../components/Pagination\";\nimport { perPage } from \"../config\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { selectButtonsAthruZ } from \"../lib/selectButtons\";\n\nconst ALL_ALBUMS_QUERY = gql`\n  query ALL_ALBUMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    albums(first: $first, skip: $skip, orderBy: title_ASC ) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ALL_ALBUMS_BEGINNING_WITH_QUERY = gql`\n  query ALL_ALBUMS_BEGINNING_WITH_QUERY($skip: Int = 0, $first: Int = ${perPage}, $letter: String) {\n    songs(where: {title_starts_with: $letter}, first: $first, skip: $skip, orderBy: title_ASC) {\n      id\n      title\n      recordLabel\n      releaseDate\n      format\n      artists {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst AlbumsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${(props) => props.theme.maxWidth};\n  margin: 0 auto;\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst Albums = ({ page }) => {\n  const [letter, setLetter] = useState(\"\");\n  const {\n    loading: allAlbumsLoading,\n    error: allAlbumsError,\n    data: allAlbumsData,\n  } = useQuery(ALL_ALBUMS_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage },\n  });\n  const {\n    loading: albumsBeginningWithLoading,\n    error: albumsBeginningWithError,\n    data: albumsBeginningWithData,\n  } = useQuery(ALL_ALBUMS_BEGINNING_WITH_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage, letter },\n  });\n  if (albumsBeginningWithLoading || allAlbumsLoading) return <p>Loading...</p>;\n  if (albumsBeginningWithError || allAlbumsError) return <p>Error :(</p>;\n\n  const albums = !letter\n    ? allAlbumsData.albums.map((album) => (\n        <Album key={album.id} album={album} />\n      ))\n    : albumsBeginningWithData.albums.map((album) => (\n        <Album key={album.id} album={album} />\n      ));\n\n  return (\n    <Center>\n      <SelectButton\n        value={letter}\n        options={selectButtonsAthruZ}\n        onChange={(e) => setLetter(e.value)}\n      />\n      <Pagination page={page} model=\"albums\" letter={letter} />\n      <AlbumsList>{albums}</AlbumsList>\n      <Pagination page={page} model=\"albums\" letter={letter} />\n    </Center>\n  );\n};\n\nexport default Albums;\n"]},"metadata":{},"sourceType":"module"}