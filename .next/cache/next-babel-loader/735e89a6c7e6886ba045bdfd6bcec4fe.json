{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\\n    signin(email: $email, password: $password) {\\n      id\\n      email\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nimport { CURRENT_USER_QUERY } from \"./Nav\";\nvar SIGNIN_MUTATION = gql(_templateObject());\n\nvar Signin = function Signin() {\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useMutation = useMutation(SIGNIN_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signinMutation = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      mutationLoading = _useMutation2$.loading,\n      mutationError = _useMutation2$.error;\n\n  return __jsx(Form, {\n    method: \"post\",\n    onSubmit: function _callee(e) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(signinMutation({\n                variables: {\n                  email: email,\n                  password: password\n                },\n                refetchQueries: [{\n                  query: CURRENT_USER_QUERY\n                }]\n              }));\n\n            case 3:\n              setEmail(\"\");\n              setPassword(\"\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, __jsx(\"fieldset\", {\n    disabled: mutationLoading,\n    \"aria-busy\": mutationLoading\n  }, __jsx(\"h2\", null, \"Sign into your account\"), __jsx(Error, {\n    error: mutationError\n  }), __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email\", __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"email\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"password\"\n  }, \"Password\", __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Sign In!\")));\n};\n\nexport default Signin;","map":null,"metadata":{},"sourceType":"module"}