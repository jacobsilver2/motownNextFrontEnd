{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Development/projects/motownNext/frontend/components/UpdateAlbum.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nconst SINGLE_ALBUM_QUERY = gql`\n  query SINGLE_ALBUM_QUERY($id: ID!) {\n    album(where: { id: $id }) {\n      id\n      title\n      catalogNumber\n      format\n      info\n      recordLabel\n    }\n  }\n`;\nconst UPDATE_ALBUM_MUTATION = gql`\n  mutation UPDATE_ALBUM_MUTATION(\n    $id: ID!\n    $title: String!\n    $catalogNumber: String\n    $format: String\n    $info: String\n    $recordLabel: String\n  ) {\n    updateSong(\n      id: $id\n      title: $title\n      catalogNumber: $publisher\n      format: $altTitle\n      info: $fromFilm\n      recordLabel: $tribute\n    ) {\n      id\n      title\n    }\n  }\n`;\n\nconst UpdateAlbum = ({\n  id\n}) => {\n  // seems like you have to do this dumb thing where you initialize the\n  // data object to how you want it, because useQuery is returning null at first.\n  const {\n    loading,\n    error,\n    data = {\n      album: {}\n    }\n  } = useQuery(SINGLE_ALBUM_QUERY, {\n    variables: {\n      id: id\n    }\n  });\n  const [updateAlbumMutation, {\n    loading: mutationLoading,\n    error: mutationError\n  }] = useMutation(UPDATE_ALBUM_MUTATION);\n  const {\n    0: state,\n    1: setState\n  } = useState({});\n\n  function handleChange(e) {\n    e.preventDefault();\n    const {\n      name,\n      type,\n      value\n    } = e.target;\n    const val = type === \"number\" ? parseFloat(value) : value;\n    setState(_objectSpread({}, state, {\n      [name]: val\n    }));\n  }\n\n  async function updateAlbum(e) {\n    e.preventDefault();\n    updateAlbumMutation({\n      variables: _objectSpread({\n        id\n      }, state)\n    });\n    mutationError && console.log(mutationError);\n  }\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Loading\");\n  return __jsx(Form, {\n    onSubmit: updateAlbum,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(\"fieldset\", {\n    disabled: loading,\n    \"aria-busy\": loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Title\", __jsx(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    name: \"title\",\n    placeholder: \"Title\",\n    required: true,\n    defaultValue: data.album.title,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"catalogNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Catalog Number\", __jsx(\"input\", {\n    type: \"text\",\n    id: \"catalogNumber\",\n    name: \"catalogNumber\",\n    placeholder: \"Catalog Number\",\n    required: true,\n    defaultValue: data.album.catalogNumber,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"format\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Format\", __jsx(\"input\", {\n    type: \"text\",\n    id: \"format\",\n    name: \"format\",\n    placeholder: \"Format\",\n    required: true,\n    defaultValue: data.album.format,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Info\", __jsx(\"input\", {\n    type: \"text\",\n    id: \"info\",\n    name: \"info\",\n    placeholder: \"Info\",\n    required: true,\n    defaultValue: data.album.info,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"recordLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Record Label\", __jsx(\"input\", {\n    type: \"text\",\n    id: \"recordLabel\",\n    name: \"recordLabel\",\n    placeholder: \"Record Label\",\n    required: true,\n    defaultValue: data.album.recordLabel,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }))));\n};\n\nexport default UpdateAlbum;","map":{"version":3,"sources":["/Users/jake/Development/projects/motownNext/frontend/components/UpdateAlbum.js"],"names":["React","useState","useQuery","useMutation","gql","Router","Form","Error","SINGLE_ALBUM_QUERY","UPDATE_ALBUM_MUTATION","UpdateAlbum","id","loading","error","data","album","variables","updateAlbumMutation","mutationLoading","mutationError","state","setState","handleChange","e","preventDefault","name","type","value","target","val","parseFloat","updateAlbum","console","log","title","catalogNumber","format","info","recordLabel"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\n\nconst SINGLE_ALBUM_QUERY = gql`\n  query SINGLE_ALBUM_QUERY($id: ID!) {\n    album(where: { id: $id }) {\n      id\n      title\n      catalogNumber\n      format\n      info\n      recordLabel\n    }\n  }\n`;\n\nconst UPDATE_ALBUM_MUTATION = gql`\n  mutation UPDATE_ALBUM_MUTATION(\n    $id: ID!\n    $title: String!\n    $catalogNumber: String\n    $format: String\n    $info: String\n    $recordLabel: String\n  ) {\n    updateSong(\n      id: $id\n      title: $title\n      catalogNumber: $publisher\n      format: $altTitle\n      info: $fromFilm\n      recordLabel: $tribute\n    ) {\n      id\n      title\n    }\n  }\n`;\n\nconst UpdateAlbum = ({ id }) => {\n  // seems like you have to do this dumb thing where you initialize the\n  // data object to how you want it, because useQuery is returning null at first.\n  const { loading, error, data = { album: {} } } = useQuery(\n    SINGLE_ALBUM_QUERY,\n    {\n      variables: { id: id },\n    }\n  );\n  const [\n    updateAlbumMutation,\n    { loading: mutationLoading, error: mutationError },\n  ] = useMutation(UPDATE_ALBUM_MUTATION);\n\n  const [state, setState] = useState({});\n  function handleChange(e) {\n    e.preventDefault();\n    const { name, type, value } = e.target;\n    const val = type === \"number\" ? parseFloat(value) : value;\n    setState({ ...state, [name]: val });\n  }\n\n  async function updateAlbum(e) {\n    e.preventDefault();\n    updateAlbumMutation({ variables: { id, ...state } });\n    mutationError && console.log(mutationError);\n  }\n\n  if (loading) return <p>Loading</p>;\n  return (\n    <Form onSubmit={updateAlbum}>\n      <Error error={error} />\n      <fieldset disabled={loading} aria-busy={loading}>\n        <label htmlFor=\"title\">\n          Title\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Title\"\n            required\n            defaultValue={data.album.title}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"catalogNumber\">\n          Catalog Number\n          <input\n            type=\"text\"\n            id=\"catalogNumber\"\n            name=\"catalogNumber\"\n            placeholder=\"Catalog Number\"\n            required\n            defaultValue={data.album.catalogNumber}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"format\">\n          Format\n          <input\n            type=\"text\"\n            id=\"format\"\n            name=\"format\"\n            placeholder=\"Format\"\n            required\n            defaultValue={data.album.format}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"info\">\n          Info\n          <input\n            type=\"text\"\n            id=\"info\"\n            name=\"info\"\n            placeholder=\"Info\"\n            required\n            defaultValue={data.album.info}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"recordLabel\">\n          Record Label\n          <input\n            type=\"text\"\n            id=\"recordLabel\"\n            name=\"recordLabel\"\n            placeholder=\"Record Label\"\n            required\n            defaultValue={data.album.recordLabel}\n            onChange={handleChange}\n          />\n        </label>\n      </fieldset>\n    </Form>\n  );\n};\n\nexport default UpdateAlbum;\n"]},"metadata":{},"sourceType":"module"}